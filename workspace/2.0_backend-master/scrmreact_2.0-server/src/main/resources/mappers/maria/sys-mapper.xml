<?xml version="1.0" encoding="EUC-KR"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SYS">		
		
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS010000 START   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
	<!-- 권한관리 - 권한목록 조회 -->
	<select id="R_getAuthList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT AUTH_LV
             , AUTH_NM
        FROM   STT_SYS_AUTH        
		<if test="G_AUTH_LV != '1'.toString()">
		WHERE  AUTH_LV != 1
 		</if>
	</select>	
	
	<!-- 사용자 조회 -->
	<select id="R_getUserList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="CMM.PAGING_HEAD"/>
		SELECT U.USR_ID
			 , U.USR_NM
			 , U.AUTH_LV
			 , A.AUTH_NM
			 , FC_STT_GET_USR_NM(U.REG_USR_ID) AS REG_USR_ID
			 , DATE_FORMAT(U.REG_DTM, '%Y-%m-%d %H:%i:%s') AS REG_DTM
			 , U.CHG_USR_ID
			 , U.CHG_DTM
			 , U.CENT_CD
			 , U.TEAM_CD
			 , FC_STT_GET_CENT_NM(U.CENT_CD) AS CENT_NM
			 , FC_STT_GET_TEAM_NM(U.CENT_CD, U.TEAM_CD) AS TEAM_NM
			 , U.USE_FLAG
			 , IFNULL(FC_STT_GET_CMN_CD('CMN', 'USE_FLAG', U.USE_FLAG), '미사용') AS USE_FLAG_NM
		FROM   STT_USR_LST U
		LEFT OUTER JOIN STT_SYS_AUTH A		
		ON     A.AUTH_LV = U.AUTH_LV
		WHERE 1=1		
		<if test="G_AUTH_LV != '1'.toString()">
		AND U.AUTH_LV != 1
 		</if>
		<if test="CENT_CD != null and CENT_CD != ''">
		AND U.CENT_CD = #{CENT_CD}
		</if>
		<if test="TEAM_CD != null and TEAM_CD != ''">
		AND U.TEAM_CD = #{TEAM_CD}
		</if>
		<if test="AUTH_LV != null and AUTH_LV != ''">
		AND U.AUTH_LV = #{AUTH_LV}
		</if>
		<if test="AUTH_LV != null and AUTH_LV != ''">
		AND U.AUTH_LV = #{AUTH_LV}
		</if>
		<if test="SRCH_DV != '' and SRCH_DV == 'NM' and SRCH_VALUE != ''">
		AND U.USR_NM LIKE CONCAT(#{SRCH_VALUE},'%')
		</if>
		<if test="SRCH_DV != '' and SRCH_DV == 'ID' and SRCH_VALUE != ''">
		AND U.USR_ID LIKE CONCAT(#{SRCH_VALUE},'%')
		</if>
		ORDER BY U.REG_DTM DESC
		<include refid="CMM.PAGING_TAIL"/>
	</select>
	
	<!-- 초기 비밀번호 기준값 조회 -->
	<select id="R_getPwdStndCode" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CASE WHEN B.APY_FLAG = 'Y' THEN B.STND_VAL
			        ELSE A.STND_VAL
			        END  AS STND_VAL
		FROM STT_SYS_STND_SET A
		LEFT OUTER JOIN STT_SYS_CENT_SET B
		ON (A.STND_CD = B.STND_CD AND B.CENT_CD = #{CENT_CD})
		WHERE A.USE_FLAG = 'Y'
		AND   A.STND_CD = '00001'
	</select>
		
	<!-- 사용자 정보 비밀번호 초기화 -->	 
	<update id="U_setPwdInit" parameterType="java.util.HashMap">
		UPDATE STT_USR_LST
		SET    USR_PWD_ENC = #{INIT_PWD}
			 , PWD_ERR_CNT = 0
			 , PWD_RSET_FLAG = 'Y'
             , CHG_USR_ID  = #{G_USR_CD}
		     , PWD_CHG_DTM = CURRENT_TIMESTAMP()
             , CHG_DTM     = CURRENT_TIMESTAMP()
		WHERE  USR_ID      = #{USR_ID}	
	</update>
	
	<update id="U_setUsrInfo" parameterType="java.util.HashMap">		
		INSERT INTO STT_USR_LST (
				USR_ID
			,	USR_NM
			,	AUTH_LV
			,	REG_USR_ID
			,	REG_DTM
			,	CHG_USR_ID
			,	CHG_DTM
			,	CENT_CD
			,	TEAM_CD
			,	USE_FLAG	
		) VALUES (
				#{USR_ID}
			,	#{USR_NM}
			,	#{AUTH_LV}
			,	#{G_USR_CD}
			,	CURRENT_TIMESTAMP()
			,	#{G_USR_CD}
			,	CURRENT_TIMESTAMP()
			,	#{CENT_CD}
			,	#{TEAM_CD}
			,	#{USE_FLAG}
		)
		ON DUPLICATE KEY
		UPDATE 
				USR_NM 		= #{USR_NM}
			,	AUTH_LV		= #{AUTH_LV}
			,	CENT_CD		= #{CENT_CD}
			,	TEAM_CD		= #{TEAM_CD}
			,	USE_FLAG	= #{USE_FLAG}
			,	CHG_USR_ID	= #{G_USR_CD}
			,	CHG_DTM		= CURRENT_TIMESTAMP()
	</update>
	
	<!-- 
	<insert id="C_setUsrLog" parameterType="java.util.HashMap">
		INSERT INTO STT_USR_LOG 
			(
			   UNQ
			 , USR_ID
			 , CHG_DTM
			 , CENT_CD
			 , TEAM_CD
			 , USR_NM
			 , AUTH_LV
			 , REG_USR_ID
			 , REG_DTM
			 , CHG_USR_ID
			 , USE_FLAG
		     , USR_PWD
		     , PWD_ERR_CNT
		     , PWD_CHG_DTM
		     , PWD_RSET_FLAG
		     , LGN_IP
		     , LGN_DTM		 
			 )
		SELECT (SELECT COUNT(UNQ) +1 AS UNQ FROM STT_USR_LOG)
		     , USR_ID
		     , CURRENT_TIMESTAMP() AS CHG_DTM
		     , CENT_CD
		     , TEAM_CD
		     , USR_NM
		     , AUTH_LV
		     , REG_USR_ID
		     , REG_DTM
		     , CHG_USR_ID
		     , USE_FLAG
		     , USR_PWD_ENC
		     , PWD_ERR_CNT
		     , PWD_CHG_DTM
		     , PWD_RSET_FLAG
		     , LGN_IP
		     , LGN_DTM
		FROM STT_USR_LST
		WHERE USR_ID = #{USR_ID}		
	</insert>	-->	
	
	<!-- 사용자코드 중복 체크	-->
	<select id="R_getUserCdCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT	COUNT(USR_ID) AS CHK_CNT
		FROM	STT_USR_LST
		WHERE 	USR_ID = #{USR_ID}
	</select>
	
	<!-- 사용자이름 중복 체크	-->
	<select id="R_getUserNmCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT	COUNT(USR_NM) AS CHK_CNT
		FROM	STT_USR_LST
		WHERE	USR_NM = #{USR_NM}
		<if test="USR_ID != ''">
		AND NOT USR_ID = #{USR_ID}
	 	</if>
	</select>		
		
	<!-- 사용자 로그인 초기화 -->
	<update id="U_setLoginInit" parameterType="java.util.HashMap">	
		UPDATE STT_USR_LST
		SET    LGN_IP  = NULL
		WHERE  USR_ID  = #{USR_ID}	
	</update>
				
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS010000 END   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS020000 START   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
   	<!-- 센터관리 : 센터 정보 조회 -->
   	<select id="R_getCentList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
   	 	<include refid="CMM.PAGING_HEAD"/> 
		SELECT  CENT_CD
      		  ,	CENT_NM
      		  ,	BIZ_PSB_FLAG
      		  ,	USE_FLAG
      		  ,	DATE_FORMAT(REG_DTM, '%Y-%m-%d') AS REG_DTM
      	FROM STT_SYS_CENT C
      	WHERE 1=1 
      	<if test="CENT_CD_NAME != ''">
        AND  (CENT_CD LIKE CONCAT ('%', #{CENT_CD_NAME}, '%')
		OR    CENT_NM LIKE CONCAT ('%', #{CENT_CD_NAME}, '%'))
     	 </if>  
		<if test="USE_FLAG != '' and USE_FLAG != null"> 
		AND USE_FLAG = #{USE_FLAG}
		</if>
		ORDER BY CENT_CD 
	 	<include refid="CMM.PAGING_TAIL"/>
   	</select>
   
   	<!-- 센터관리 : 팀 정보 조회 -->
   	<select id="R_getTeamList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  		<include refid="CMM.PAGING_HEAD"/> 
		SELECT	CENT_CD
			,	TEAM_CD
      		,	TEAM_NM
      		,	USE_FLAG
      		,	DATE_FORMAT(REG_DTM, '%Y-%m-%d ') AS REG_DTM
      	FROM STT_SYS_TEAM 
  		WHERE  CENT_CD = #{CENT_CD}
		ORDER BY TEAM_CD 
		<include refid="CMM.PAGING_TAIL"/>
   	</select>
   
   	<!-- 센터관리 : 기준값 정보 조회 -->
   	<select id="R_dsCentStndValList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
  		<include refid="CMM.PAGING_HEAD"/> 
		SELECT TRIM(A.STND_CD) AS STND_CD
             , A.STND_CD_NM
             , B.CENT_CD
             , B.STND_VAL    
             , NVL(B.APY_FLAG, 'N') AS APY_FLAG
             , B.ETC1
             , B.ETC2
             , A.CENT_SET_CHG_FLAG 
             , A.STND_PPTY_USE_FLAG
             , A.APY_PPTY_USE_FLAG
             , A.ETC1_PPTY_USE_FLAG
             , A.ETC2_PPTY_USE_FLAG
		FROM
		    (
		    SELECT STND_CD
		         , STND_CD_NM
		         , SORT_ORD
		         , CENT_SET_CHG_FLAG
		         , STND_PPTY_USE_FLAG
		         , ETC1_PPTY_USE_FLAG
		         , ETC2_PPTY_USE_FLAG
		         , APY_PPTY_USE_FLAG
		    FROM   STT_SYS_STND_SET
		    WHERE  USE_FLAG = 'Y'
		    ) A
		LEFT JOIN
		    (
		    SELECT CENT_CD
                 , STND_CD
                 , STND_VAL
                 , APY_FLAG
                 , ETC1
                 , ETC2
		    FROM   STT_SYS_CENT_SET
		    WHERE  CENT_CD = #{CENT_CD}
		    ) B 
		ON (A.STND_CD=B.STND_CD)
		ORDER BY A.STND_CD
		<include refid="CMM.PAGING_TAIL"/> 
    </select>
   
   	<!--  센터 관리 : 센터 정보 수정 -->
	<update id="U_handleCentList" parameterType="java.util.HashMap">
		UPDATE STT_SYS_CENT
		SET    CENT_NM      = #{CENT_NM}
             , BIZ_PSB_FLAG = #{BIZ_PSB_FLAG}
             , USE_FLAG     = #{USE_FLAG}
           	 , CHG_DTM      = CURRENT_TIMESTAMP()
           	 , CHG_USR_ID   = #{G_USR_CD}
		WHERE  CENT_CD      = #{CENT_CD}
	</update>
   
   	<!--   센터 관리 : 센터 정보 추가 -->
   	<insert id="C_handleCentList" parameterType="java.util.HashMap">
      INSERT INTO STT_SYS_CENT (
      			CENT_CD
         	,	CENT_NM
         	, 	BIZ_PSB_FLAG
         	, 	USE_FLAG
         	, 	REG_USR_ID
         	, 	REG_DTM
      ) VALUES (
         		#{CENT_CD}
         	, 	#{CENT_NM}
         	, 	#{BIZ_PSB_FLAG}
         	, 	#{USE_FLAG}
         	,   #{G_USR_CD}
         	, 	NOW()
       <!-- TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') -->
      )
   	</insert>
   
   	<!--    센터 관리 : 센터 정보  삭제 -->
   	<delete id="D_handleCentList" parameterType="java.util.HashMap" >
      DELETE  FROM STT_SYS_CENT    
      WHERE   CENT_CD = #{CENT_CD}
   	</delete>
   
    <!--  센터 관리 : 팀 정보 수정 -->
	<update id="U_handleTeamList" parameterType="java.util.HashMap">
		UPDATE STT_SYS_TEAM
		SET    TEAM_NM    = #{TEAM_NM}
             , USE_FLAG   = #{USE_FLAG}
           	 , CHG_DTM    = NOW()
           	 , CHG_USR_ID = #{G_USR_CD}
		WHERE  CENT_CD    = #{CENT_CD}  	
		AND    TEAM_CD    = #{TEAM_CD}
	</update>
   
   	<!--   센터 관리 : 팀 정보 추가 -->
   	<insert id="C_handleTeamList" parameterType="java.util.HashMap">
      INSERT INTO STT_SYS_TEAM (
      			CENT_CD
           	,	TEAM_CD
         	, 	TEAM_NM
         	, 	USE_FLAG
         	, 	REG_USR_ID
         	, 	REG_DTM
      ) VALUES (
      			#{CENT_CD}
         	,	#{TEAM_CD}
         	, 	#{TEAM_NM}
         	, 	#{USE_FLAG}
         	, 	#{G_USR_CD}
         	, 	NOW()
      )
   	</insert>
   
   	<!--    센터 관리 : 팀 정보  삭제 -->
   	<delete id="D_handleTeamList" parameterType="java.util.HashMap" >
      DELETE  FROM STT_SYS_TEAM    
      WHERE   TEAM_CD = #{TEAM_CD}
   	</delete>
   
    <!--  센터 관리 : 기준값 정보 수정 -->
	<update id="U_updateStndValList" parameterType="java.util.HashMap">
		INSERT INTO STT_SYS_CENT_SET 	(
				CENT_CD
			,	STND_CD
			,	STND_VAL
			,	APY_FLAG
			,   ETC1
            ,   ETC2
         	, 	REG_USR_ID
         	, 	REG_DTM
		) VALUES (
				#{CENT_CD}
			,	#{STND_CD}
			,	#{STND_VAL}
			,	#{APY_FLAG}
			,   #{ETC1}
            ,   #{ETC2}
         	, 	#{G_USR_CD}
         	, 	NOW()
		)
		ON DUPLICATE KEY
		UPDATE 
		    	STND_VAL   = #{STND_VAL}	
			, 	APY_FLAG   = #{APY_FLAG}
			,	ETC1	   = #{ETC1}
			,	ETC2 	   = #{ETC2}
			, 	CHG_DTM    = NOW()
			,	CHG_USR_ID = #{G_USR_CD}	
	</update>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS020000 END   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
		
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS030000 START   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
		
	<!-- 상담원 조회 -->
	<select id="R_getConstList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="CMM.PAGING_HEAD"/>
		SELECT CONST_CD
			 , CONST_NM
			 , IFNULL(DATE_FORMAT(CHG_DTM, '%Y-%m-%d %H:%i:%s'), DATE_FORMAT(REG_DTM, '%Y-%m-%d %H:%i:%s')) AS REG_DTM
			 , IFNULL(CHG_USR_ID, REG_USR_ID) AS REG_USR_ID
			 , CENT_CD
			 , TEAM_CD
			 , FC_STT_GET_CENT_NM(CENT_CD) AS CENT_NM
			 , FC_STT_GET_TEAM_NM(CENT_CD, TEAM_CD) AS TEAM_NM
			 , USE_FLAG
			 , IFNULL(FC_STT_GET_CMN_CD('CMN', 'USE_FLAG', USE_FLAG), '미사용') AS USE_FLAG_NM
		FROM   STT_SYS_CONST	
		WHERE 1=1		
		<if test="CENT_CD != null and CENT_CD != ''">
		AND CENT_CD = #{CENT_CD}
		</if>
		<if test="TEAM_CD != null and TEAM_CD != ''">
		AND TEAM_CD = #{TEAM_CD}
		</if>
		<if test="SRCH_DV != '' and SRCH_DV == 'NM' and SRCH_VALUE != ''">
		AND CONST_NM LIKE CONCAT(#{SRCH_VALUE},'%')
		</if>
		<if test="SRCH_DV != '' and SRCH_DV == 'CD' and SRCH_VALUE != ''">
		AND CONST_CD LIKE CONCAT(#{SRCH_VALUE},'%')
		</if>
		ORDER BY CENT_NM, TEAM_NM, CONST_NM
		<include refid="CMM.PAGING_TAIL"/>
	</select>
		
	<!-- 상담원코드 중복 체크	-->
	<select id="R_getConstCdCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="CMM.PAGING_HEAD"/>
		SELECT	COUNT(CONST_CD) AS CHK_CNT
		FROM	STT_SYS_CONST
		WHERE 	CONST_CD = #{CONST_CD}
		<include refid="CMM.PAGING_TAIL"/>
	</select>
	
	<!-- 상담원이름 중복 체크	-->
	<select id="R_getConstNmCheck" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT	COUNT(CONST_NM) AS CHK_CNT
		FROM	STT_SYS_CONST
		WHERE	CONST_NM = #{CONST_NM}
		<if test="CONST_CD != ''">
		AND NOT CONST_CD = #{CONST_CD}
	 	</if>
	</select>
	
	<!-- 메시지 관리 : 저장 -->
   	<insert id="C_setConstInfo" parameterType="java.util.HashMap">
      	INSERT INTO STT_SYS_CONST 
      		(
      		   CONST_CD
			 , CONST_NM
			 , REG_DTM
			 , REG_USR_ID
			 , CENT_CD
			 , TEAM_CD
			 , USE_FLAG
      		) 
      		VALUES 
      		(
      		   #{CONST_CD}
			 , #{CONST_NM}
			 , NOW()
			 , #{G_USR_CD}
			 , #{CENT_CD}
			 , #{TEAM_CD}
			 , #{USE_FLAG}
      		)
      	ON DUPLICATE KEY 
      	UPDATE 
      		CONST_NM = #{CONST_NM}
      	  , CENT_CD  = #{CENT_CD}
      	  , TEAM_CD  = #{TEAM_CD}
      	  , USE_FLAG = #{USE_FLAG}
      	  , CHG_DTM  = NOW()
      	  , CHG_USR_ID = #{G_USR_CD}
   	</insert>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS030000 END   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
		
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS040000 START   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
		
	<select id="R_getMissSentMngList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="CMM.PAGING_HEAD"/>
		SELECT UNQ
			 , STT_UNQ
			 , SORT_ORD
			 , SENT_ST_TM
             , SENT_ED_TM
             , MIS_SENT_CONT
             , ANS_SENT_CONT    
         	 , ACT_TP
         	 , REG_USR_ID
         	 , FC_STT_GET_USR_NM(REG_USR_ID) AS REG_USR_NM
         	 , TRN_APY_FLAG
         	 , DATE_FORMAT(REG_DTM , '%Y-%m-%d %H:%i:%s') AS REG_DTM
		FROM   STT_JOB_MIS_SENT 
		WHERE  ACT_TP != 'd'
		AND    ANS_SENT_CONT != MIS_SENT_CONT
		AND    ANS_SENT_CONT != ''
		AND    DATE_FORMAT(REG_DTM, '%Y%m%d') BETWEEN #{START_DATE} AND #{END_DATE}		
		<if test="REG_ID_NM != null and REG_ID_NM != ''">
		AND    (REG_USR_ID = #{REG_ID_NM}
  		        OR 	
  		        REG_USR_ID = FC_STT_GET_USR_ID(#{REG_ID_NM})
		</if>		
		<if test="APP_YN != null and APP_YN != '' and APP_YN != 'ALL'">
		AND    TRN_APY_FLAG = #{APP_YN}
		</if>
		<include refid="CMM.PAGING_TAIL"/>
	</select>	
	
	<update id="U_SetMissSentApy" parameterType="java.util.HashMap">
		UPDATE STT_JOB_MIS_SENT
		SET	   TRN_APY_FLAG   = #{TRN_APY_FLAG}
		     , TRN_REG_USR_ID = #{G_USR_CD}
		WHERE  UNQ            = #{UNQ}
	</update>
	
 	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS040000 END   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
 	
 	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS050000 START   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
	<select id="R_getKeywordList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="CMM.PAGING_HEAD"/>
		SELECT UNQ
		     , KWD
			 , KWD_TP
			 , FC_STT_GET_USR_NM(REG_USR_ID) AS REG_USR_ID
			 , DATE_FORMAT(REG_DTM , '%Y-%m-%d %H:%i:%s') AS REG_DTM
			 , USE_FLAG
		FROM   STT_SYS_KWD
		WHERE  1=1		
		<if test="(startDate != null and startDate != '') and (endDate != null and endDate != '')">		  	
		AND DATE_FORMAT(REG_DTM,'%Y-%m-%d') <![CDATA[>=]]> DATE_FORMAT(#{startDate},'%Y-%m-%d')
		AND DATE_FORMAT(REG_DTM,'%Y-%m-%d') <![CDATA[<=]]> DATE_FORMAT(#{endDate}  ,'%Y-%m-%d')
		</if>
		<if test="KWD_TP != null and KWD_TP != '' and KWD_TP != 'ALL'">
		AND KWD_TP = #{KWD_TP}			  
		</if>
		<if test="USE_FLAG != null and USE_FLAG != '' and USE_FLAG != 'ALL'">
		AND USE_FLAG = #{USE_FLAG}			  
		</if>
		ORDER BY REG_DTM DESC
		<include refid="CMM.PAGING_TAIL"/>
	</select>
	
	<insert id="C_handleKeyword" parameterType="java.util.HashMap">
		INSERT INTO STT_SYS_KWD 
			(
				UNQ
			  , KWD
			  , KWD_TP
			  , REG_USR_ID
			  , REG_DTM
			  , USE_FLAG
			)		
		SELECT
			    nextval(SQ_STT_SYS_KWD)
			  , #{KWD}
			  , #{KWD_TP}
			  , #{G_USR_CD}
			  , NOW()
			  , #{USE_FLAG}         	  
	</insert>
	
	<update id="U_handleKeyword" parameterType="java.util.HashMap">
		UPDATE STT_SYS_KWD
		SET    KWD        = #{KWD}
			 , KWD_TP     = #{KWD_TP}
			 , CHG_DTM    = NOW()
			 , CHG_USR_ID = #{G_USR_CD}
			 , USE_FLAG   = #{USE_FLAG}	
		WHERE  UNQ        = #{UNQ}			
	</update>
	
 	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS050000 END   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
			
 	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS060000 START   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
			
	<!-- 검색 단어 사전 조회 -->
	<select id="R_getDictionaryList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT W.WORD_UNQ
		     , W.WORD_TP
		     , W.WORD_NM
		     , W.WORD_CONT
		     , W.USE_FLAG		
		     , (SELECT GROUP_CONCAT(S.SNM_NM) FROM STT_JOB_SCH_DIC_SNM S WHERE S.WORD_UNQ = W.WORD_UNQ AND S.USE_FLAG = 'Y') AS SNM_NM
		FROM   STT_JOB_SCH_DIC_WORD W
		<where>
			<if test="WORD_NM != ''">
		       (W.WORD_NM LIKE '%${WORD_NM}%')
			</if>
			<if test="USE_FLAG != ''">
		AND    W.USE_FLAG = #{USE_FLAG}
			</if>
			<if test="WORD_TP != ''">
		AND    W.WORD_TP = #{WORD_TP}
			</if>
		</where>
		ORDER BY W.REG_DTM DESC
	</select>
	
	<!-- 검색 유의어 사전 조회 -->
	<select id="R_getSimilarList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT WORD_UNQ
		     , SNM_NM
		     , SNM_CONT
		     , USE_FLAG		
		FROM   STT_JOB_SCH_DIC_SNM
		WHERE  WORD_UNQ = #{WORD_UNQ}
		ORDER BY REG_DTM DESC
	</select>	
	
	<!-- 검색 단어 사전 수정 -->
	<update id="U_handleDictionaryList" parameterType="java.util.HashMap">
		UPDATE STT_JOB_SCH_DIC_WORD
		SET    WORD_TP    = #{WORD_TP}
		     , WORD_NM    = #{WORD_NM}
		     , WORD_CONT  = #{WORD_CONT}
		     , USE_FLAG	  = #{USE_FLAG}
             , CHG_DTM    = DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
             , CHG_USR_ID = #{G_USR_CD}
		WHERE  WORD_UNQ   = #{WORD_UNQ}
	</update>
	
	<!-- 검색 단어 사전 추가 -->
	<insert id="C_handleDictionaryList" parameterType="java.util.HashMap">
		INSERT INTO STT_JOB_SCH_DIC_WORD (
			WORD_UNQ
		  , WORD_TP 
		  , WORD_NM  
		  , WORD_CONT 
		  , USE_FLAG 
          , REG_DTM  
          , REG_USR_ID 
		) VALUES (
			nextval(SQ_STT_JOB_SCH_DIC_WORD)
		  , #{WORD_TP}
		  , #{WORD_NM}
		  , #{WORD_CONT}
		  , #{USE_FLAG}
          , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
          , #{G_USR_CD}
		)
	</insert>
		
	<!-- 검색 유의어 사전수정 -->
	<update id="U_handleSimilarList" parameterType="java.util.HashMap">
		UPDATE STT_JOB_SCH_DIC_SNM
		SET    SNM_CONT   = #{SNM_CONT}
		     , USE_FLAG	  = #{USE_FLAG}
             , CHG_DTM    = DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
             , CHG_USR_ID = #{G_USR_CD}
		WHERE  WORD_UNQ   = #{WORD_UNQ}
		AND    SNM_NM     = #{SNM_NM}
	</update>
	
	<!-- 검색 유의어 사전 추가 -->
	<insert id="C_handleSimilarList" parameterType="java.util.HashMap">
		INSERT INTO STT_JOB_SCH_DIC_SNM (
			WORD_UNQ
		  , SNM_NM  
		  , SNM_CONT 
		  , USE_FLAG 
          , REG_DTM  
          , REG_USR_ID 
		) VALUES (
			#{WORD_UNQ}
		  , #{SNM_NM}
		  , #{SNM_CONT}
		  , #{USE_FLAG}
          , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
          , #{G_USR_CD}
		)
	</insert>
	
	<!-- 검색 사전 베포 -->
	<update id="U_setDictionarySvr" parameterType="java.util.HashMap">
		UPDATE STT_SYS_SVR
		SET    SCH_DIC_STATE   = 'N'
             , SCH_DIC_CHG_DTM = DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
		WHERE  SCH_DIC_USE_FLAG = 'Y'
	</update>
	
	<!-- @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   SYS060000 END   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ -->
	
 	
   	
   	
   	
   	
	<!-- 타겟 키워드 조회 -->
	<select id="R_getSnroKeywordTarget" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  KEYWORD
		      , SELECT_TARGET
		FROM    TBL_SNRO_KEYWORD_SCO
		WHERE   SNRO_CD = #{SNRO_CD}
	</select>
	
	<!-- 타겟 시나리오 프로세스 조회 -->
	<select id="R_getTargetSnro" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  *
		FROM    TBL_SNRO_MNG
		WHERE   SNRO_CD = #{SNRO_CD}
	</select>

	<!-- 고객 시나리오 프로세스 등록 -->
	<insert id="C_setCusProcessInfo" parameterType="java.util.HashMap">
		INSERT INTO TBL_SNRO_CUS_PROCESS (
			PH_NUMBER
		  , STEP
		  , STT
		  , SNRO_CD
		  , PROCESS_CD
		  , RTN_TTS_CD
		  , RTN_TTS_TEXT
		  , REG_DTM
		  , ERR_CODE
		  , ERR_MESSAGE
		  , NEXT
		  , TRY_CNT
		  , STT_DATE
		  , TTS_NM
		  , TTS_NB
		) VALUES (
			#{PH_NUMBER}
		  , #{STEP}
		  , #{STT}
		  , #{SNRO_CD}
		  , #{PROCESS_CD}
		  , #{RTN_TTS_CD}
		  , #{RTN_TTS_TEXT}
		  , DATE_FORMAT(NOW(), '%Y-%m-%d %H:%i:%s')
		  , #{ERR_CODE}
		  , #{ERR_MESSAGE}
		  , #{NEXT}
		  , #{TRY_CNT}
		  , #{STT_DATE}
		  , #{TTS_NM}
		  , #{TTS_NB}
		)
	</insert>
	
	<!-- 고객 시나리오 다음 프로세스 조회 -->
	<select id="R_getNextSnroProcess" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  *
		FROM    TBL_SNRO_PROCESS
		WHERE   SNRO_CD = #{SNRO_CD}
		AND     SORT_ORD = #{SORT_ORD} 
	</select>

	<!-- 고객 시나리오 프로세스 조회 -->
	<select id="R_getCusProcessInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT PH_NUMBER
		     , STEP
		     , STT
		     , SNRO_CD
		     , PROCESS_CD
		     , RTN_TTS_CD
		     , RTN_TTS_TEXT
		     , REG_DTM
		     , ERR_CODE
		     , ERR_MESSAGE 	
		     , TRY_CNT
		     , NEXT
		     , STT_DATE
		     , TTS_NM
		     , TTS_NB
		FROM   TBL_SNRO_CUS_PROCESS
		WHERE  PH_NUMBER = #{PH_NUMBER}
		ORDER BY REG_DTM DESC LIMIT 1		
	</select>
	
	<!-- 시나리오 인터페이스 조회 -->
	<select id="R_getInterList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT ITF_CD
		     , ITF_NM
		     , URL  	
		FROM   TBL_SNRO_INTERFACE
		ORDER BY ITF_CD
	</select>
	
	<!-- 시나리오 프로세스 조회 -->
	<select id="R_getSnroProcess" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT  P.SNRO_CD 
			  , P.PROCESS_TP 
			  , P.PROCESS_CD 
			  , P.SUCCESS
			  , P.SUCCESS_TTS
			  , (SELECT SNRO_TTS_EXPL FROM TBL_SNRO_TTS_INFO WHERE P.SUCCESS_TTS = SNRO_TTS_CD) AS SUCCESS_NM
			  , P.FAIL
			  , P.FAIL_TTS
			  , (SELECT SNRO_TTS_EXPL FROM TBL_SNRO_TTS_INFO WHERE P.FAIL_TTS = SNRO_TTS_CD) AS FAIL_NM
			  , P.SORT_ORD 
			  , IFNULL(M.SNRO_EXPL, I.ITF_NM) AS SNRO_EXPL
			  , M.REQ_SCO
			  , P.RTN_TARGET
		FROM    TBL_SNRO_PROCESS P
		LEFT OUTER JOIN TBL_SNRO_MNG M
		<if test="SNRO_CD == null or SNRO_CD == ''">
		ON      P.SNRO_CD = M.SNRO_CD
		</if>		
		<if test="SNRO_CD != null and SNRO_CD != ''">
		ON      P.PROCESS_CD = M.SNRO_CD		
		</if>		
		LEFT OUTER JOIN TBL_SNRO_INTERFACE I
		ON      P.PROCESS_CD = I.ITF_CD
		<if test="SNRO_CD == null or SNRO_CD == ''">
		WHERE   P.PROCESS_TP = 'INIT'
		AND     P.SUCCESS   != ''
		</if>
		<if test="SNRO_CD != null and SNRO_CD != ''">
		WHERE   P.SNRO_CD    = #{SNRO_CD}
		</if>	
		ORDER BY P.SORT_ORD 
	</select>	
	
	<!-- 시나리오 1 LEVEL 프로세스 조회 -->
	<select id="R_getSnroInitProcess" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT P.SNRO_CD
			 , P.PROCESS_TP
			 , '고객 발화 검출' AS PROCESS_TP_NM
			 , M.SNRO_EXPL
			 , 'fileFolder' AS PROCESS
			 , M.REQ_SCO
		FROM   TBL_SNRO_PROCESS P
		     , TBL_SNRO_MNG M
		WHERE  P.PROCESS_TP = 'INIT'
		AND    P.SNRO_CD   = M.SNRO_CD
		ORDER BY SNRO_CD
	</select>	
		
	<!-- 시나리오 TTS 조회 -->
	<select id="R_getSnroTtsList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT SNRO_TTS_CD
		     , SNRO_TTS_TEXT
		     , SNRO_TTS_EXPL
		     , USE_YN	  
		     , SNRO_TTS_TP	
		FROM   TBL_SNRO_TTS_INFO
		ORDER BY SNRO_TTS_CD
	</select>
	
	<!-- 시나리오 키워드 조회 -->
	<select id="R_getSnroKeyword" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT SNRO_CD
		     , KEYWORD
		     , SCO
		     , USE_YN	  	
		FROM   TBL_SNRO_KEYWORD_SCO
		WHERE  SNRO_CD = #{SNRO_CD}
		ORDER BY SCO DESC
	</select>
	
	<!-- 시나리오 조회 -->
	<select id="R_getSnroList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT SNRO_CD
		     , SNRO_EXPL
		     , TYPE_FLAG
		     , REQ_SCO	
		     , 'fileFolder' AS KEYWORD 	
		     , USE_YN	  	
		FROM   TBL_SNRO_MNG		
		<if test="SNRO_CD != null and SNRO_CD != ''">
		WHERE   SNRO_CD    = #{SNRO_CD}
		</if>
		ORDER BY SNRO_CD
	</select>
	
	

 </mapper>