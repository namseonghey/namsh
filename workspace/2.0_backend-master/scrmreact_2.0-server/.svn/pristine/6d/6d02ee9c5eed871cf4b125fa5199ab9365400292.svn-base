{"version":3,"sources":["components/Button/index.js","components/Charts/index.js","routes/popupRoute.js","containers/base/common/pwdInit.js","containers/base/common/pwdChg.js","containers/com/COM010010/index.js","containers/com/COM010020/index.js","store/modules/appModule.js","components/Dialog/index.js","components/FileUpload/index.js","components/Grid/components/date/index.js","components/Grid/components/checkbox/index.js","components/Grid/components/button/index.js","components/Grid/index.js","components/HtmlEditor/index.js","components/Input/index.js","components/Label/index.js","components/Layout/index.js","components/Menu/index.js","components/Progressbar/index.js","components/Player/index.js","components/SelectBox/index.js","components/Slide/index.js","components/Tab/index.js","components/Table/index.js","components/Tray/index.js","components/Textarea/index.js","components/Tree/index.js","store/modules/index.js","store/index.js","store/configure.js","common/index.js","containers/base/common/login.js","containers/com/COM010000/index.js","containers/qam/QAM010000/index.js","containers/qam/QAM020000/index.js","containers/qam/QAM030000/index.js","containers/qam/QAM040000/index.js","containers/qam/QAM050000/index.js","containers/sta/STA010000/index.js","containers/sta/STA020000/index.js","containers/stt/STT010000/index.js","containers/stt/STT020000/index.js","containers/stt/STT030010/index.js","containers/stt/STT030020/index.js","containers/stt/STT030000/index.js","containers/stt/STT040000/index.js","containers/stt/STT050000/index.js","containers/sys/SYS010000/index.js","containers/sys/SYS020000/index.js","containers/sys/SYS030000/index.js","containers/sys/SYS040000/index.js","containers/sys/SYS050000/index.js","containers/sys/SYS060000/index.js","containers/sys/SYS070000/index.js","containers/sam/SAM000000/index.js","containers/sam/SAM010000/index.js","containers/sam/SAM020000/index.js","containers/sam/SAM030000/index.js","routes/index.js","containers/base/main/index.js","containers/base/footer/index.js","containers/base/side/index.js","containers/base/header/index.js","containers/base/index.js","containers/App.js","index.js","../config/polyfills.js"],"names":["BasicButton","props","state","disbaled","disabled","id","this","onClick","style","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","visibility","hidden","value","React","Component","defaultProps","IconButton","className","classes","data","ScrmLineBarChart","e","onMouseEnter","onMouseMove","onMouseLeave","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","options","XAsisKey","map","item","key","type","stroke","color","ScrmRadialBarChart","innerRadius","outerRadius","startAngle","endAngle","minAngle","label","fill","position","background","clockWise","iconSize","layout","verticalAlign","align","popRoute","component","validation","StrLib","isNull","param","ComLib","openDialog","name","telNo","transaction","transId","console","log","transManager","TransManager","setTransId","setTransUrl","constants","url","init","setCallBack","callback","addConfig","dao","base","crudh","create","datasetsend","datasetrecv","addDataset","USR_CD","USR_NM","TEL_NO","birth","agent","err","alert","res","dsRecvData","password","onClose","event","button","target","input","onChange","setState","open","bind","placeholder","setStateValue","document","getElementById","popupdivid","remove","serviceid","dsPwdInfo","getValue","setdata","common","passwd","columnid","read","sqlmapid","getTransRecords","dsChkCurPwdRst","dsChkNewPwdRst","click","DataLib","datalist","getInstance","CUR_PWD","NEW_PWD","CON_PWD","undefined","location","setStateRecords","records","SRCH_YN","BORD_MNG_NO","srchFileParam","dsNoteInfo","dsNoteFileInfo","dsModifyInfo","TITLE","VALD_DT","DateLib","getToday","CONT","CONT_DV","DEL_YN","REG_DT","REG_USR","MFY_ER","MFY_DT","grid","onRowClicked","Object","assign","getRowJSON","index","REG_CENT","REG_DTM","REG_ID","CHG_ID","CHG_DTM","Fragment","ref","header","headerName","field","colId","valueFormatter","getFormatterDate","cellEditor","cellEditorParams","values","setGridComCodeComboCellVal","setGridComCodeComboCellNm","readOnly","toolbarHidden","length","Slide","addTray","createAction","delTray","delAllTray","selectTray","prevTray","nextTray","addPop","delPop","delAllPop","selectPop","handleActions","popup","payload","popupList","concat","filter","action","menu","tray","indexOf","MNU_ID","selected","parseInt","findIndex","element","AlertDialog","isOpen","containerClassName","defaultPosition","x","y","noBackdrop","clickBackdropToClose","padding","float","alignItems","message","ConfirmDialog","returnVal","onReturnVal","positions","PopupDialog","onMinimize","AppModuleAction","onCallbackFunc","modal","onMouseDown","modaless","positionOffset","overflow","comp","ModalLoading","backdropStyle","connect","appModule","dispatch","bindActionCreators","appModuleActions","InputFileUpload","getUploadParams","handleChangeStatus","status","meta","mete","setProgressPercent","progressEvent","uploadPercent","Math","floor","loaded","total","uploadStatus","handleSubmit","files","allFiles","validate","showProgressbar","formData","FormData","Array","from","forEach","f","append","file","upload","updata","gifnoc","ERR_CODE","setTimeout","percent","inputContent","inputWithFilesContent","submitButtonContent","onChangeStatus","onSubmit","styles","dropzone","preview","inputLabel","fontColor","DateComponent","date","Date","getStringDate","TimeComponent","time","format","disableClock","maxTime","RangeDateComponent","onStrtDtChange","strtDate","onEndDtChange","endDate","STRT_DT","END_DT","getDateYymmdd","display","RangeTimeComponent","onStrtTmChange","strtTime","onEndTmChange","endTime","STRT_TM","END_TM","replace","getFormatterTime","CheckboxRenderer","checkedHandler","checked","column","node","setDataValue","DelRowButton","context","componentParent","onDeleteRow","Grid","onCellValueChanged","oldValue","newValue","rowData","getRecords","recid","newScrmObj","crud","orgrecords","update","row","rowIndex","col","colDef","onCellClicked","onCellDoubleClicked","onCellFocused","onRowDoubleClicked","onCellEditingStopped","gridApi","getRenderedNodes","req","onRowDataChanged","keys","sizeColumnsToFit","onSelectionChanged","onRowSelected","getSelectedNodes","destroy","Number","moveRow","onInsertRow","addRow","getDisplayedRowCount","onExcelDown","getDisplayedRowAtIndex","setSelected","doFilter","setQuickFilter","insertRow","applyTransaction","add","insertColumnData","setFocusedCell","startEditingCell","colKey","getSelectedRowIndex","getSelectedRows","getDeSelectedRows","deSelectRows","forEachNode","isSelected","push","editStart","autoSizeFit","onGridReady","obj","fromEntries","Map","api","columnApi","rowSpan","params","columnDefs","prevProps","prevState","snapshot","noName","areaName","addRowBtn","delRowBtn","dnlExcelBtn","suppressAutoSize","alwaysShowVerticalScroll","components","frameworkComponents","rangeDate","rangeTime","checkbox","selectbox","SelectboxRenderer","headerCheckbox","HeaderCheckboxRender","delButton","CentListSelectBox","suppressMovableColumns","immutableColumns","multiSortKey","headerHeight","rowHeight","defaultColDef","resizable","sortable","sort","editable","autoHeight","floatingFilter","autoGroupColumnDef","rowDragManaged","suppressDragLeaveHidesColumns","suppressScrollOnNewData","suppressRowClickSelection","stopEditingWhenGridLosesFocus","localeText","noRowsToShow","rowSelection","colResizeDefault","paging","pagination","paginationPageSize","paginationAutoPageSize","HtmlEditor","modules","toolbar","size","font","list","indent","clipboard","matchVisual","formats","theme","Checkbox","keyProp","htmlFor","MultiCheckBox","getElementsByName","dataset","i","Radio","setRadio","defaultSelected","selectedOption","Textfield","rtnVal","minLength","maxLength","InputCalendar","onCalendarOpen","onCalendarClose","closeCalendar","disableCalendar","maxDate","minDate","required","returnValue","RangeInputCalendar","stId","startDate","endId","Label","AppPanel","children","HeadPanel","MiddlePanel","MainPanel","ComponentPanel","FooterPanel","FlexPanel","FullPanel","SubFullPanel","LFloatArea","RFloatArea","RelativeGroup","TrayPanel","HeaderMenu","setMenuDivOpen","PARE_MNU_ID","MNU_NM","subMenu","subKey","openMenu","ProgressBar","default","symbol","error","success","Selectbox","prop","getCentList","a","dsCentComboInfo","comboItem","CENT_CD","CENT_NM","getTeamList","centCd","dsTeamComboInfo","TEAM_CD","TEAM_NM","getUserList","teamCd","dsUsrComboInfo","MulitSelectBox","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","expended","openCheckbox","checkboxes","onCheckAll","text","baseOption","onCheckboxClick","rtnText","checkedList","toString","addEventListener","removeEventListener","displayCount","SlidePreview","src","process","alt","filepath","SlideContainer","onDownload","reqOptions","method","headers","responseType","axios","resData","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","removeChild","onPreview","mdi","DIALOG","dialog","render","unmountComponentAtNode","ext","doc","xls","ppt","pdf","img","CustomSlide","setSlideInfo","setSlideContent","idx","FILE_NM","onDownloadAll","onSelectPrev","slider","slickPrev","onSelectNext","slickNext","settings","dots","slidesToShow","slidesToScroll","initialSlide","speed","responsive","breakpoint","infinite","textAlign","c","Tabs","onClickTab","active","Children","toArray","child","tab","tabWidth","Tab","TabPanel","Table","setColGroup","colGrp","setBody","setRow","rowArray","colArray","setColumn","colJson","colSpan","head","tbData","footer","TrayDiv","selectMenu","onSelect","removeMenu","Tree","parentElement","querySelector","classList","toggle","setComboItem","parn_key","parn_id","html","span","ul","li","innerText","onclick","combineReducers","configure","devTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","datetime","POP_UP","PLAYER","LOADING","select","argument","all","none","menuId","isJson","JSON","parse","setSession","sessionStorage","setItem","stringify","getSession","getItem","setGridHeader","rtnArr","getOwnPropertyNames","colVal","msg","Dialog","openPop","callbackFunc","arrPopTag","tag","tagName","substring","popDiv","substr","store","Promise","resolve","reject","then","catch","openPlayer","callId","arrPlayerPop","getCommCodeList","sBigCtgCd","commCodeList","PARENT_CODE","getCentStndVl","strStndCd","strTargetCol","strRtn","arrStndVl","STND_CD","APY_YN","getInitScreen","rtn","iScrnId","setStateDs","strDatasetId","setRecordsToDs","nRowIndex","strColumnId","strValue","setValueToDs","arrRecords","setStateInitRecords","initRecordsToDs","convComboList","args","arr","getMsgCont","msgcd","strMsg","objMsg","MSG_CD","MSG_CONT","hasOwnProperty","setServerInfos","serverInfos","localStorage","prod","host","hostname","port","dev","title","localbuild","local","objDs","arrTeamList","blnActive","arrUsrList","usr","USE_YN","sValue","getTrim","String","valueOf","getPos","sOrg","sFind","nStart","getPosCase","toLowerCase","getPosReverse","pos","getPosReverseCase","getReplace","sRepFrom","sRepTo","sRet","getReplaceCase","getSexCd","sRrNo","strRno","getNumStr","getLPad","sPad","nCnt","getRPad","getRight","nSize","getLenB","sVal","len","charCodeAt","getLen3B","getFull2Half","sFull","sHalf","unescape","charAt","getHalf2Full","rTmp","iTmp","fromCharCode","isNum","sNum","point_cnt","ret","isAlpha","search","isAlNum","isKor","arg","str","sResult","getLastDateNum","sDate","nMonth","isLeapYear","nY","getLastDate","nLastDate","getAddDate","nOffset","nYear","nDate","objDate","getFullYear","getMonth","getDate","getAddMonth","nsDate","sToday","getTodayTime","getHours","getMinutes","getSeconds","getDiffDate","sStartDate","sEndDate","vFromDate","vToDate","getDiffMonth","nStartMon","NaN","year","month","day","setValue","setRecords","initRecords","get","arrOrgRecs","idxA","idxB","orgdata","appendRecords","initialize","rowtype","getValueByRecId","setValueByRecId","getRow","lastIndexOf","find","Function","findFirst","findLast","filterexpr","lookup","record","isUpdated","arrCol","_","transdata","epytwor","reyolpme","datasets","setAccessToken","setReyolpme","arrUser","contentType","json","setBeforeSend","beforeSend","setError","timeout","setAsync","async","setProgress","progress","makeTransData","config","addSequence","sequence","addIterator","iterator","addSendDataset","addRecvDataset","token","accessToken","replcaceSpChar","doLoading","bVisible","objLoadDiv","onUploadProgress","baseURL","post","response","loadProgressBar","agentAsync","agentSync","retry","errorcode","SUCCESS","ERR_MESSAGE","erorr","asyncdata","dataType","ERROR","systemid","procedure","handle","batch","dir","datasetmap","datatype","script","xml","Login","dsLoginInfo","onKeyDown","keyCode","dsRst","foo","dsUserInfo","dsCommCodeInfo","dsMenuInfo","dsCentStvlInfo","dsCentList","dsTeamList","dsUserList","dsMsgList","dsLogin","PWD","CONN_IP","to","pathname","View","job","hour","selectedIndex","selectboxProps","multiSelectboxProps","dsSrvDailyInfo","dsSrvDailyInfoTest","dsValItemList","dsValItemStndInfo","dsValContList","dsAllValStndList","dsValTblStndList","headerCheckboxSelection","checkboxSelection","dsValScrptList","dsScrptValTblInfo","dsDeAsgnValTgtList","dsQaList","dsAsgValTgtList","dsCallSpList","dsValTgtCtrCallSp","txt","dsUsrTopLankInfo","dsUsrAvgByTeamInfo","dsUsrList","dsValCallList","dsFileList","dsSttResultInfo","dsStudyList","STT030010","STT030020","dsMisSenList","dsKeywordList","dsBigCdRecv","dsSmlCdRecv","BIG_CD","dsBigCdList","dsSmlCdList","btnSearchProps","btnBigSaveProps","btnSmlSaveProps","grdBigCdProps","grdSmlCdProps","dsGrp","dsAuthInfo","dsPrgmInfo","dsCentStndValList","dsStndValInfo","buttonProps","option1","textFieldProps","string","number","radio","radioProps","singleCheckProp","multiCheckProps","inputcalendar","calendarProps","rangeCalendarProps","chartProps","popupProps","confirm","treeProps","depth","autoFocus","playerProps","gridProps","TEST1","TEST2","TEST3","TEST4","TEST5","TEST6","TEST7","TEST8","Index","uploadProps","val1","val2","dataList","dataListTest","radioValue","checkValue","stateDataList","flag","getRowCount","checkList","appRoute","path","exact","SAM010000","COM010000","QAM010000","QAM020000","QAM030000","QAM040000","QAM050000","STA010000","STA020000","STT010000","STT020000","STT030000","STT040000","STT050000","SYS010000","SYS020000","SYS030000","SYS040000","SYS050000","SYS060000","SYS070000","SAM000000","SAM020000","Main","closeMenu","onPrevMove","prevMenu","onNextMove","nextMenu","closeAllMenu","trayProp","Footer","Header","pop","dsUser","close","AppMain","MNU_KND","onbeforeunload","onunload","App","history","createBrowserHistory","require","enable"],"mappings":"kuBAEMA,E,kDACF,WAAaC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CAAEC,SAAW,EAAKF,MAAMG,UAFnB,E,qDAYlB,OACI,4BAAQC,GAAMC,KAAKL,MAAMI,GAAIE,QAAWD,KAAKL,MAAMM,QAASH,SAAUE,KAAKL,MAAMG,SACzEI,MAAO,CACLC,UAAWH,KAAKL,MAAMS,GACtBC,YAAaL,KAAKL,MAAMW,GACxBC,aAAcP,KAAKL,MAAMa,GACzBC,WAAYT,KAAKL,MAAMe,GACvBC,WAAcX,KAAKL,MAAMiB,OAAU,SAAY,YAGtDZ,KAAKL,MAAMkB,W,GAvBEC,IAAMC,WAA1BrB,EAKEsB,aAAe,CACrBZ,GAAI,OACJE,GAAI,MACJE,GAAI,MACJE,GAAI,MACJZ,UAAU,G,MAkBNmB,E,uKAEF,OACE,4BAAQC,UAAYlB,KAAKL,MAAMwB,QAASpB,GAAMC,KAAKL,MAAMI,GAAIE,QAAWD,KAAKL,MAAMM,c,GAHhEa,IAAMC,W,GAOLD,IAAMC,U,OChC1BK,EAAO,CACX,CACC,KAAQ,QACR,GAAM,MACN,GAAM,KACN,KAAQ,WAET,CACC,KAAQ,QACR,GAAM,MACN,GAAM,KACN,KAAQ,WAET,CACC,KAAQ,QACR,IAAO,MACP,GAAM,KACN,KAAQ,WAET,CACC,KAAQ,QACR,GAAM,KACN,GAAM,KACN,KAAQ,WAET,CACC,KAAQ,QACR,IAAO,KACP,GAAM,KACN,KAAQ,WAET,CACC,KAAQ,MACR,IAAO,KACP,GAAM,KACN,KAAQ,WAET,CACC,KAAQ,SACR,GAAM,KACN,GAAM,KACN,KAAQ,YAGLC,E,4MACLpB,QAAU,SAACqB,K,EAGXC,aAAe,SAACD,K,EAGhBE,YAAc,SAACF,K,EAGfG,aAAe,SAACH,K,uDAIf,OACC,yBAAKJ,UAAU,uBACd,kBAAC,IAAD,CAAWQ,MAAO1B,KAAKL,MAAM+B,MAAOC,OAAQ3B,KAAKL,MAAMgC,OAAQP,KAAMpB,KAAKL,MAAMyB,KAAMQ,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IACpI,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAASlC,KAAKL,MAAMwC,QAAQC,WACnC,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MAEEpC,KAAKL,MAAMwC,QAAQD,QAAQG,KAAI,SAACC,EAAMC,GACrC,OAAO,kBAAC,IAAD,CAAMC,KAAK,WAAWN,QAASI,EAAKC,IAAKA,IAAKA,EAAKE,OAAQH,EAAKI,iB,GAxBhD5B,IAAMC,WAgC/B4B,E,uKAEJ,OACC,yBAAKzB,UAAU,kBAEb,kBAAC,IAAD,CACCQ,MAAO,IACPC,OAAQ,IACRiB,YAAY,MACZC,YAAY,MACZzB,KAAMA,EACN0B,WAAY,IACZC,SAAU,GAEV,kBAAC,IAAD,CAAWC,SAAU,GAAIC,MAAO,CAAEC,KAAM,OAAQC,SAAU,eAAiBC,YAAU,EAACC,WAAW,EAAMnB,QAAQ,OAC/G,kBAAC,IAAD,CAAQoB,SAAU,GAAI5B,MAAO,IAAKC,OAAQ,IAAK4B,OAAO,WAAWC,cAAc,SAASC,MAAM,UAC9F,kBAAC,IAAD,Y,GAhB2B3C,IAAMC,W,OC3E1B2C,EAAW,CACpB,CAAE3D,GAAI,UAAY4D,U,kDCHlB,WAAYhE,GAAO,IAAD,8BACd,cAAMA,IAqBViE,WAAa,SAAC7D,GACV,OAAQA,GAEJ,IAAK,eACD,OAAI8D,GAAOC,OAAO,EAAKlE,MAAMmE,MAAMhE,KAC/BiE,GAAOC,WAAW,IAAK,oDAChB,GAEPJ,GAAOC,OAAO,EAAKlE,MAAMmE,MAAMG,OAC/BF,GAAOC,WAAW,IAAK,iFAChB,IAEPJ,GAAOC,OAAO,EAAKlE,MAAMmE,MAAMI,SAC/BH,GAAOC,WAAW,IAAK,0EAChB,KApCL,EA+ClBG,YAAc,SAACC,GACXC,QAAQC,IAAI,qBACZ,IAAIC,EAAe,IAAIC,GACvB,IACI,OAAQJ,GAEJ,IAAK,eACDG,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIC,MACpDN,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACnBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMC,OAEpCC,YAAY,aACZC,YAAY,eAEhBf,EAAagB,WAAW,aAAc,CAAC,CAAEC,OAAS,EAAK7F,MAAMmE,MAAMhE,GAAI2F,OAAQ,EAAK9F,MAAMmE,MAAMG,KAAMyB,OAAQ,EAAK/F,MAAMmE,MAAM6B,SAC/HpB,EAAaqB,SAMvB,MAAOC,GACLxB,QAAQC,IAAIuB,GACZC,MAAMD,KAzEI,EAiFlBd,SAAW,SAACgB,GACR1B,QAAQC,IAAI,kBACZD,QAAQC,IAAIyB,GACZ,IACI,OAAQA,EAAIjG,IACR,IAAK,eACDuE,QAAQC,IAAIyB,EAAI5E,MAChB2E,MAAMC,EAAI5E,KAAK6E,WAAWC,UAC1B,EAAKvG,MAAMwG,WAKrB,MAAOL,GACLxB,QAAQC,IAAIuB,GACZC,MAAMD,KAhGI,EAwGlBM,MAAQ,CACJC,OAAS,CACLpG,QAAU,SAACqB,GACP,OAAQA,EAAEgF,OAAOvG,IACb,IAAK,oBACG,EAAK6D,WAAW,iBAChB,EAAKQ,YAAY,gBAErB,MACJ,IAAK,mBACD,EAAKzE,MAAMwG,aAM3BI,MAAQ,CACJC,SAAW,SAAClF,GACR,OAAQA,EAAEgF,OAAOvG,IACb,IAAK,YAAiB,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BmE,MAAK,2BAAO,EAAKnE,MAAMmE,OAAlB,IAAyBhE,GAAKuB,EAAEgF,OAAOzF,WAAU,MAC1G,IAAK,aAAiB,EAAK4F,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BmE,MAAK,2BAAO,EAAKnE,MAAMmE,OAAlB,IAAyBG,KAAO5C,EAAEgF,OAAOzF,WAAU,MAC5G,IAAK,eAAiB,EAAK4F,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BmE,MAAK,2BAAO,EAAKnE,MAAMmE,OAAlB,IAAyBI,MAAQ7C,EAAEgF,OAAOzF,eA1H/G,EAAKjB,MAAQ,CACT8G,MAAO,EACP3C,MAAQ,CACJhE,GAAK,GACLmE,KAAO,GACPC,MAAQ,KAIhB,EAAKiC,MAAMC,OAAOpG,QAAU,EAAKmG,MAAMC,OAAOpG,QAAQ0G,KAA1B,gBAC5B,EAAKP,MAAMG,MAAMC,SAAW,EAAKJ,MAAMG,MAAMC,SAASG,KAA1B,gBAbd,E,kGAsId,OACI,yBAAKzF,UAAU,gBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAY,oBACb,qCACA,2BAAOhB,MAAO,CAACwB,MAAO,QAASc,KAAK,OAAOzC,GAAK,YAAYc,MAAOb,KAAKJ,MAAMmE,MAAMhE,GAAI6G,YAAa,8DAAkBJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAExJ,yBAAKtF,UAAY,oBACb,+CACA,2BAAOhB,MAAO,CAACwB,MAAO,QAASc,KAAK,OAAOzC,GAAK,aAAac,MAAOb,KAAKJ,MAAMmE,MAAMG,KAAM0C,YAAa,qDAAcJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAEvJ,yBAAKtF,UAAY,oBACb,2DACA,2BAAOhB,MAAO,CAACwB,MAAO,QAASc,KAAK,OAAOzC,GAAK,eAAec,MAAOb,KAAKJ,MAAMmE,MAAMI,MAAOyC,YAAa,iEAAgBJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAE5J,yBAAKtF,UAAY,sBACb,yBAAKA,UAAY,kBAAiB,4BAAQnB,GAAG,oBAAoBE,QAAWD,KAAKoG,MAAMC,OAAOpG,SAAU,iBACxG,yBAAKiB,UAAY,kBAAiB,4BAAQnB,GAAG,mBAAmBE,QAAWD,KAAKoG,MAAMC,OAAOpG,SAAU,wB,GAxJzGa,IAAMC,YDKxB,CAAEhB,GAAI,SAAW4D,U,kDEMpB,WAAYhE,GAAO,IAAD,8BACjB,cAAMA,IAsBPyG,MAAQ,CACPG,MAAO,CACNC,SAAU,SAAClF,GACV,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,WACJiE,GAAO6C,cAAP,eAA2B,YAAa,EAAG,SAAUvF,EAAEgF,OAAOzF,OAC9D,MACD,IAAK,YACJmD,GAAO6C,cAAP,eAA2B,YAAa,EAAG,UAAWvF,EAAEgF,OAAOzF,OAC/D,MACD,IAAK,YACJmD,GAAO6C,cAAP,eAA2B,YAAa,EAAG,UAAWvF,EAAEgF,OAAOzF,OAC/D,MACD,IAAK,YACJmD,GAAO6C,cAAP,eAA2B,YAAa,EAAG,UAAWvF,EAAEgF,OAAOzF,UAKlEwF,OAAQ,CACPpG,QAAS,SAACqB,GACT,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,mBACA,EAAK6D,WAAW,eAAe,EAAKQ,YAAY,cACpD,MACD,IAAK,kBAEJ0C,SAASC,eAAe,EAAKpH,MAAMqH,YAAYC,aAlDjC,EA8DlBrD,WAAa,SAACsD,GACb,OAAQA,GACR,IAAK,aACJ,GAAIrD,GAAOC,OAAO,EAAKlE,MAAMuH,UAAUC,SAAS,EAAG,WAElD,OADApD,GAAOC,WAAW,IAAK,oEAChB,EAER,GAAIJ,GAAOC,OAAO,EAAKlE,MAAMuH,UAAUC,SAAS,EAAG,YAElD,OADApD,GAAOC,WAAW,IAAK,uFAChB,EAER,GAAIJ,GAAOC,OAAO,EAAKlE,MAAMuH,UAAUC,SAAS,EAAG,YAElD,OADApD,GAAOC,WAAW,IAAK,6FAChB,EAER,GAAI,EAAKrE,MAAMuH,UAAUC,SAAS,EAAG,aAAe,EAAKxH,MAAMuH,UAAUC,SAAS,EAAG,WAEpF,OADApD,GAAOC,WAAW,IAAK,sHAChB,EAER,GAAIJ,GAAOC,OAAO,EAAKlE,MAAMuH,UAAUC,SAAS,EAAG,YAElD,OADApD,GAAOC,WAAW,IAAK,8FAChB,EAER,GAAI,EAAKrE,MAAMuH,UAAUC,SAAS,EAAG,aAAe,EAAKxH,MAAMuH,UAAUC,SAAS,EAAG,WAEpF,OADApD,GAAOC,WAAW,IAAK,kIAChB,EAST,OAFA,EAAKoD,QAAQH,IAEN,GAhGU,EAsGlBG,QAAU,SAACH,GACFA,GAvGS,EAkHlB9C,YAAc,SAAC8C,GACd,IAAI1C,EAAe,IAAIC,GACvB,IACC,OAAQyC,GACR,IAAK,aACJ1C,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMmC,OACpCjC,YAAa,YACbkC,SAAU,YAEXhD,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMmC,OACpCjC,YAAa,YACbkC,SAAU,YAEXhD,EAAaS,UAAU,CACrBC,IAAKV,EAAaI,UAAUM,IAAIC,KACjCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,qBACTpC,YAAY,YACZC,YAAY,mBAEbf,EAAaS,UAAU,CACrBC,IAAKV,EAAaI,UAAUM,IAAIC,KACjCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,kBACTpC,YAAY,YACZC,YAAY,mBAEbf,EAAagB,WAAW,YAAa,EAAK5F,MAAMuH,UAAUQ,mBAC1DnD,EAAaqB,QACb,MACD,IAAK,aACJrB,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMmC,OACpCjC,YAAa,YACbkC,SAAU,YAEXhD,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMmC,OACpCjC,YAAa,YACbkC,SAAU,YAEXhD,EAAaS,UAAU,CACrBC,IAAKV,EAAaI,UAAUM,IAAIC,KACjCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,kBACTpC,YAAY,cAEbd,EAAagB,WAAW,YAAa,EAAK5F,MAAMuH,UAAUQ,mBAC1DnD,EAAaqB,SAGb,MAAOC,GACRxB,QAAQC,IAAIuB,KAlLI,EAyLlBd,SAAW,SAACgB,GACX,IACC,OAAQA,EAAIjG,IACZ,IAAK,aACyC,QAAzCiG,EAAI5E,KAAKwG,eAAe,GAAxB,OACH5D,GAAOC,WAAW,IAAK,sDAC4B,MAAzC+B,EAAI5E,KAAKwG,eAAe,GAAxB,OACV5D,GAAOC,WAAW,IAAK,6DAC4B,MAAzC+B,EAAI5E,KAAKwG,eAAe,GAAxB,SACmC,MAAzC5B,EAAI5E,KAAKyG,eAAe,GAAxB,OACH7D,GAAOC,WAAW,IAAK,2GAC4B,MAAzC+B,EAAI5E,KAAKyG,eAAe,GAAxB,QACN,EAAKjE,WAAW,eAAe,EAAKQ,YAAY,eAGtD,MACD,IAAK,aAGJ0C,SAASC,eAAe,aAAae,SAGrC,MAAOhC,GACRxB,QAAQC,IAAIuB,KA9Mb,EAAKlG,MAAQ,CACZ8G,MAAM,EACNS,UAAWY,GAAQC,SAASC,YAAY,CAAC,CAACxC,OAAQ,GAAIyC,QAAS,GAAIC,QAAS,GAAIC,QAAS,OAG1F,EAAKhC,MAAMC,OAAOpG,QAAU,EAAKmG,MAAMC,OAAOpG,QAAQ0G,KAA1B,gBAC5B,EAAKP,MAAMG,MAAMC,SAAW,EAAKJ,MAAMG,MAAMC,SAASG,KAA1B,gBARX,E,qEAeW0B,IAAxBrI,KAAKL,MAAM2I,WACdtE,GAAOuE,gBAAgBvI,KAAM,YAAaA,KAAKL,MAAM2I,SAAS1I,MAAMmE,OACpEO,QAAQC,IAAIvE,KAAKJ,MAAMuH,c,+BAuMxB,OACC,yBAAKjG,UAAclB,KAAKL,MAAMwC,QAAW,iBAAmB,cAC3D,yBAAKjB,UAAY,kBAChB,yBAAKA,UAAY,oBAChB,qDACA,2BAAOhB,MAAS,CAACwB,MAAO,QAASc,KAAO,OAAOzC,GAAK,WAAWc,MAASb,KAAKJ,MAAMuH,UAAUqB,QAAQ,GAA7B,OAA2C5B,YAAe,2DAAeJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAE/K,yBAAKtF,UAAY,oBAChB,wEACA,2BAAOhB,MAAS,CAACwB,MAAO,QAASc,KAAO,WAAWzC,GAAK,YAAYc,MAASb,KAAKJ,MAAMuH,UAAUqB,QAAQ,GAA7B,QAA4C5B,YAAe,8EAAmBJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAEzL,yBAAKtF,UAAY,oBAChB,wEACA,2BAAOhB,MAAS,CAACwB,MAAO,QAASc,KAAO,WAAWzC,GAAK,YAAYc,MAASb,KAAKJ,MAAMuH,UAAUqB,QAAQ,GAA7B,QAA4C5B,YAAe,8EAAmBJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAEzL,yBAAKtF,UAAY,oBAChB,wEACA,2BAAOhB,MAAS,CAACwB,MAAO,QAASc,KAAO,WAAWzC,GAAK,YAAYc,MAASb,KAAKJ,MAAMuH,UAAUqB,QAAQ,GAA7B,QAA4C5B,YAAe,oFAAoBJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAE1L,yBAAKtF,UAAY,sBAChB,yBAAKA,UAAY,kBAAiB,4BAAQnB,GAAK,mBAAmBE,QAAWD,KAAKoG,MAAMC,OAAOpG,SAAU,iBACzG,yBAAKiB,UAAY,kBAAiB,4BAAQnB,GAAK,kBAAkBE,QAAWD,KAAKoG,MAAMC,OAAOpG,SAAU,wB,GAjPzFa,IAAMC,YFDvB,CAAEhB,GAAI,YAAc4D,U,kDGAvB,WAAYhE,GAAQ,IAAD,8BAClB,cAAMA,IAmBPiE,WAAa,SAAC7D,GACb,OAAQA,GACP,IAAK,gBACJ,EAAKqE,YAAY,mBAvBD,EAiCnBA,YAAc,SAACC,GACd,IAAIG,EAAe,IAAIC,GACvB,IACC,OAAQJ,GACP,IAAK,gBACJG,EAAaE,WAAWL,GACxBG,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,iBACZC,YAAY,eAEbf,EAAagB,WAAW,iBAAkB,CAAC,CAAEiD,QAAU,OACvDjE,EAAaqB,QACb,MAED,IAAK,gBACJrB,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,wBACTpC,YAAY,qBACZC,YAAY,mBAEbf,EAAagB,WAAW,qBAAsB,CAAC,CAACkD,YAAc,EAAK9I,MAAM+I,iBACzEnE,EAAaqB,SAKd,MAAOC,GACRxB,QAAQC,IAAIuB,GACZC,MAAMD,KAxEW,EA+EnBd,SAAW,SAACgB,GACX,OAAQA,EAAIjG,IACX,IAAK,gBACJ,EAAK0G,SAAL,2BACK,EAAK7G,OADV,IAEEgJ,WAAa5C,EAAI5E,KAAKwH,WACtBC,eAAiB,GACjBC,aAAe,CAAEC,MAAO,GAAIC,QAAUC,GAAQC,WAAYC,KAAM,GAAIC,QAAS,GAAIC,OAAS,GAAIC,OAAS,GAAIC,QAAU,GAAKC,OAAQ,GAAIC,OAAQ,OAEhJ,MACD,IAAK,gBACJ,EAAKhD,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BiJ,eAAiB7C,EAAI5E,KAAKyH,oBA1FxC,EAmGnBzC,MAAQ,CACPsD,KAAO,CACNC,aAAgB,SAACrI,GAChB,OAAQA,EAAEvB,IACT,IAAK,cACJ,EAAK0G,SAAL,2BACI,EAAK7G,OADT,IAEKkJ,aAAec,OAAOC,OAAO,EAAKjK,MAAMkJ,aAAcf,GAAQ+B,WAAWxI,EAAEyI,MAAO,EAAKnK,MAAMgJ,aAC7FD,cAAgBrH,EAAEF,KAAKsH,eACzB,kBAAM,EAAKtE,YAAY,wBA1G9B,EAAKxE,MAAQ,CACZ+I,cAAgB,GAChBC,WAAa,GACbC,eAAiB,GACjBC,aAAe,CAAEJ,YAAa,GAAIK,MAAO,GAAIC,QAAUC,GAAQC,WAAYC,KAAM,GAAIC,QAAS,GAAIY,SAAU,GAAIX,OAAS,GAAIY,QAAU,GAAIC,OAAS,GAAKC,OAAQ,GAAIC,QAAS,KAE/K,EAAKhE,MAAMsD,KAAKC,aAAe,EAAKvD,MAAMsD,KAAKC,aAAahD,KAA7B,gBARb,E,gEAclB3G,KAAKoE,YAAY,mB,+BA0GjB,OACC,kBAAC,IAAMiG,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAQtK,GAAK,cAAcuK,IAAI,cAAc3I,OAAO,QAClD4I,OAAU,CACT,CAAIC,WAAa,KAAeC,MAAQ,cAAgBC,MAAQ,cAAgBhJ,MAAO,IACvF,CAAI8I,WAAa,2BAAWC,MAAQ,UAAgBC,MAAQ,UAAgBhJ,MAAO,IAClFiJ,eAAiB,SAAC5G,GAAD,OAAYF,GAAO+G,iBAAiB7G,EAAMlD,SAC5D,CAAI2J,WAAa,2BAAWC,MAAQ,UAAgBC,MAAQ,UAAgBhJ,MAAO,IAClFiJ,eAAiB,SAAC5G,GAAD,OAAYF,GAAO+G,iBAAiB7G,EAAMlD,SAC5D,CAAI2J,WAAa,eAAaC,MAAQ,QAAgBC,MAAQ,QAAgBhJ,MAAO,KACrF,CAAI8I,WAAa,2BAAWC,MAAQ,UAAgBC,MAAQ,UAAgBhJ,MAAO,IAClFmJ,WAAY,qBACZC,iBAAkB,CAAEC,OAAS/G,GAAOgH,2BAA2B,QAC/DL,eAAiB,SAAC5G,GAAD,OAAWC,GAAOiH,0BAA0BlH,EAAMlD,MAAO,SAC3E,CAAI2J,WAAa,2BAAWC,MAAQ,UAAgBC,MAAQ,UAAehJ,MAAO,KAClF,CAAI8I,WAAa,qBAAYC,MAAQ,SAAgBC,MAAQ,SAAehJ,MAAO,MAEpFN,KAAQpB,KAAKJ,MAAMgJ,WACnBe,aAAgB3J,KAAKoG,MAAMsD,KAAKC,gBAGnC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAY5J,GAAG,cAAec,MAAOb,KAAKJ,MAAMkJ,aAAaK,KAAM+B,UAAU,EAAMC,eAAe,EAAMxJ,OAAQ,OAEjH,kBAAC,GAAD,KACwC,IAArC3B,KAAKJ,MAAMiJ,eAAeuC,OAAgB,kBAACC,GAAD,CAAOjK,KAAMpB,KAAKJ,MAAMiJ,eAAgBlH,OAAQ,MAAgB,8BAAO,mE,GAtJrGb,IAAMC,YHKrB,CAAEhB,GAAI,YAAc4D,U,uKIHhB,OACI,kBAAC,IAAM0G,SAAP,KACI,kBAAC,GAAD,W,GAJGvJ,IAAMC,a,wECQZuK,EAAUC,YAPN,iBAQJC,EAAUD,YAPH,oBAQPE,EAAaF,YAPF,wBAQXG,EAAaH,YAPN,oBAQPI,EAAWJ,YAPF,sBAQTK,EAAWL,YAPN,kBASLM,EAAUN,YAlBP,gBAmBHO,EAAUP,YAlBJ,mBAmBNQ,EAAYR,YAlBF,uBAmBVS,EAAYT,YAlBN,mBA0BJU,eAAa,mBA7BZ,gBA8BH,SAACrM,EAAD,GAAiC,IAAbsM,EAAY,EAAtBC,QACrB,OAAO,2BAAKvM,GAAZ,IAAmBwM,UAAYxM,EAAMwM,UAAUC,OAAOH,QAF5B,cA5BT,mBAgCH,SAACtM,EAAD,GAAiC,IAAbsM,EAAY,EAAtBC,QACxB,OAAO,2BAAKvM,GAAZ,IAAmBwM,UAAYxM,EAAMwM,UAAUE,QAAO,SAAAhK,GAAI,OAAIA,EAAKvC,KAAOmM,EAAMnM,WALtD,cA3BL,uBAkCH,SAACH,EAAO2M,GAC1B,OAAO,2BAAK3M,GAAZ,IAAoBwM,UAAY,QARN,cA1BT,mBAoCH,SAACxM,EAAD,GAAiC,IAAbsM,EAAY,EAAtBC,QACxB,OAAO,2BAAKvM,GAAZ,IAAmBwM,UAAYxM,EAAMwM,UAAUE,QAAO,SAAAhK,GAAI,OAAIA,EAAKvC,KAAOmM,EAAMnM,WAXtD,cAzBX,iBAsCH,SAACH,EAAD,GAAgC,IAAZ4M,EAAW,EAArBL,QACtB,OAAIvM,EAAM6M,KAAKC,QAAQ9M,EAAM6M,KAAKH,QAAO,SAAAhK,GAAI,OAAIA,EAAKqK,SAAWH,EAAKG,UAAQ,IAAM,EAC5E,2BACH/M,GADJ,IAEC6M,KAAM7M,EAAM6M,KAAKJ,OAAOG,GACxBI,SAAWJ,IAGL,2BACH5M,GADJ,IAEC6M,KAAM7M,EAAM6M,KACZG,SAAWJ,OAxBa,cAxBR,oBAoDH,SAAC5M,EAAD,GAAgC,IAAZ4M,EAAW,EAArBL,QACzB,OAAoE,IAAhEU,SAASjN,EAAM6M,KAAKK,WAAU,SAAAC,GAAO,OAAIA,IAAYP,MACjD,2BACH5M,GADJ,IAEC6M,KAAO7M,EAAM6M,KAAKH,QAAO,SAAAhK,GAAI,OAAIA,EAAKqK,SAAWH,EAAKG,UACtDC,SAAWhN,EAAM6M,KAAKI,SAASjN,EAAM6M,KAAKK,WAAU,SAAAC,GAAO,OAAIA,EAAQJ,SAAWH,EAAKG,WAAW,KAG5F/M,KApCkB,cAvBJ,wBA8DH,SAACA,EAAO2M,GAC3B,OAAO,2BACH3M,GADJ,IAEC6M,KAAO,CAAC7M,EAAM6M,KAAK,IACnBG,SAAWhN,EAAM6M,KAAK,QA3CG,cAtBR,oBAoEH,SAAC7M,EAAD,GAAgC,IAAZ4M,EAAW,EAArBL,QACzB,OAAO,2BACHvM,GADJ,IAEC6M,KAAM7M,EAAM6M,KACZG,SAAWJ,OAlDc,cArBN,sBA0EH,SAAC5M,EAAD,GAAgC,IAAZ4M,EAAW,EAArBL,QAC3B,OAAoE,IAAhEU,SAASjN,EAAM6M,KAAKK,WAAU,SAAAC,GAAO,OAAIA,IAAYP,MACjD,2BACH5M,GADJ,IAEC6M,KAAM7M,EAAM6M,KACZG,SAAWJ,IAGL,2BACH5M,GADJ,IAEC6M,KAAM7M,EAAM6M,KACZG,SAAWhN,EAAM6M,KAAKI,SAASjN,EAAM6M,KAAKK,WAAU,SAAAC,GAAO,OAAIA,IAAYP,MAAS,QAhE5D,cApBV,kBAwFH,SAAC5M,EAAD,GAAgC,IAAZ4M,EAAW,EAArBL,QACvB,OAAGU,SAASjN,EAAM6M,KAAKK,WAAU,SAAAC,GAAO,OAAIA,IAAYP,QAAW5M,EAAM6M,KAAKrB,OAAO,EAC7E,2BACHxL,GADJ,IAEC6M,KAAM7M,EAAM6M,KACZG,SAAWJ,IAGL,2BACH5M,GADJ,IAEC6M,KAAM7M,EAAM6M,KACZG,SAAWhN,EAAM6M,KAAKI,SAASjN,EAAM6M,KAAKK,WAAU,SAAAC,GAAO,OAAIA,IAAYP,MAAS,QA/E5D,GANV,CACjBI,SAAW,GACXH,KAAO,GACPL,UAAY,KCnBPY,E,4MAWL7G,QAAU,WAAQ,EAAKxG,MAAMwG,W,uDAE5B,OACC,kBAAC,IAAD,CACC8G,OAAQjN,KAAKL,MAAM+G,KACnBP,QAASnG,KAAKmG,QACd+G,mBAAoB,mBACpBC,gBAAiB,CAACC,EAAG,EAAGC,EAAG,GAC3BC,YAAY,EACZC,sBAAsB,GAEtB,yBAAKrM,UAAY,4BAChB,yBAAKA,UAAY,mCAChB,4BAAQhB,MAAO,CAACsN,QAAS,MAAOC,MAAO,QAAS/L,MAAQ,OAAQC,OAAS,OAAQ+L,WAAY,UAAWzN,QAAUD,KAAKmG,SAAvH,SAED,yBAAKjF,UAAY,iCAChB,4BAAKlB,KAAKL,MAAMgO,gB,GA3BI7M,IAAMC,WAA1BiM,EACEhM,aAAe,CACrB0F,MAAM,EACNiH,QAAU,GACVxH,QAAU,WAAO,OAAO,I,IA8BpByH,E,kDACL,WAAajO,GAAQ,IAAD,8BACnB,cAAMA,IAiBPM,QAAU,SAACqB,GACV,OAAQA,EAAEgF,OAAOvG,IAChB,IAAK,aAAgB,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BiO,WAAY,KAAO,kBAAM,EAAK1H,aAAY,MAC7F,IAAK,YACL,QAAU,EAAKM,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BiO,WAAY,KAAQ,kBAAM,EAAK1H,eAtBrD,EAyBpBA,QAAU,WACT,EAAKxG,MAAMwG,UACX,EAAKxG,MAAMmO,YAAY,EAAKlO,MAAMiO,YAzBlC,EAAKjO,MAAQ,CACZiO,WAAY,GAHM,E,qDA+BnB,OACC,kBAAC,IAAD,CACCZ,OAAQjN,KAAKL,MAAM+G,KACnByG,gBAAiB,CAACC,EAAG,EAAGC,EAAG,GAC3BH,mBAAoB,mBACpBI,YAAY,GAEZ,yBAAKpM,UAAY,4BAChB,yBAAKA,UAAY,mCAChB,4BAAQhB,MAAO,CAACsN,QAAS,MAAOC,MAAO,QAAS/L,MAAQ,OAAQC,OAAS,OAAQ+L,WAAY,UAAWzN,QAAUD,KAAKC,QAAQ0G,KAAK3G,OAApI,SAED,yBAAKkB,UAAY,iCAChB,4BAAKlB,KAAKL,MAAMgO,SAChB,4BAAQ5N,GAAG,aAAaG,MAAO,CAAC6N,UAAU,WAAYN,MAAO,SAAU/L,MAAO,OAAQC,OAAS,OAAQtB,YAAa,OAAQJ,QAAUD,KAAKC,QAAQ0G,KAAK3G,OAAxJ,UACA,4BAAQD,GAAG,YAAYG,MAAO,CAAC6N,UAAU,WAAYN,MAAO,SAAU/L,MAAO,OAAQC,OAAS,OAAQlB,WAAY,OAAQR,QAAUD,KAAKC,QAAQ0G,KAAK3G,OAAtJ,6B,GA9CsBc,IAAMC,WAA5B6M,EAOE5M,aAAe,CACrB0F,MAAM,EACNiH,QAAW,GACXG,YAAc,WAAS,OAAO,GAC9B3H,QAAS,WAAS,OAAO,I,IA0CrB6H,E,kDACL,WAAarO,GAAQ,IAAD,8BACnB,cAAMA,IAcPwG,QAAU,SAAC7E,GACV,EAAK3B,MAAMwG,QAAQ7E,IAhBA,EAkBpB2M,WAAa,SAAC3M,GACa,EAAK3B,MAAxBuO,gBACSrC,OAAO,CAAC9L,GAAK,EAAKJ,MAAMqH,WAAY9C,KAAO,EAAKvE,MAAMuE,OACtE4C,SAASC,eAAe,EAAKpH,MAAMqH,YAAYpG,QAAS,GArBrC,EAwBpBuN,eAAiB,SAAC/M,GAAU,EAAKzB,MAAMwO,eAAe/M,IAtBrD,EAAKxB,MAAQ,CACZ8G,MAAO,EACP0H,OAAQ,GAET,EAAKjI,QAAU,EAAKA,QAAQQ,KAAb,gBACf,EAAKsH,WAAa,EAAKA,WAAWtH,KAAhB,gBAPC,E,qDAyBT,IAAD,OAET,OACC,kBAAC,IAAD,CACC0H,YAAe,SAAC/M,KAChB2L,OAAQjN,KAAKL,MAAM+G,KACnB4G,WAAYtN,KAAKL,MAAM2O,UAEvB,kBAAC,IAAD,CACCrO,QAAW,SAACqB,KACZ6L,gBAAmBnN,KAAKL,MAAMwD,SAC9BoL,eAAkB,CAACnB,EAAG,OAAQC,EAAG,IAEjC,yBAAKnM,UAAY,2BAA2BhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAMwC,QAAQT,MAAOC,OAAQ3B,KAAKL,MAAMwC,QAAQR,SAC/G,yBAAKT,UAAY,mCAChB,yBAAKhB,MAAO,CAACuN,MAAO,SAClBzN,KAAKL,MAAMuE,MAEb,4BAAQhE,MAAO,CAACsN,QAAS,MAAOC,MAAO,QAAS/L,MAAQ,OAAQC,OAAS,OAAQ+L,WAAY,UAAWzN,QAAUD,KAAKmG,SAAvH,QAEEnG,KAAKL,MAAM2O,SACT,4BAAQpO,MAAO,CAACsN,QAAS,MAAOC,MAAO,QAAS/L,MAAQ,OAAQC,OAAS,OAAQ+L,WAAY,UAAWzN,QAAUD,KAAKiO,YAAvH,KACA,MAIL,yBAAK/M,UAAY,gCAAgChB,MAAO,CAACsO,SAAU,SAEjE9K,EAAS4I,QAAO,SAAAhK,GAAI,OAAIA,EAAKvC,KAAO,EAAKJ,MAAMkF,OAAKxC,KAAI,SAACoM,EAAMlM,GAC9D,OAAO,kBAACkM,EAAK9K,UAAN,CAAgBqD,WAAY,EAAKrH,MAAMqH,WAAYmH,eAAgB,EAAKA,eAAgB5L,IAAK,OAASkM,EAAK1O,GAAK,IAAMwC,EAAK4D,QAAS,EAAKA,QAAShE,QAAW,EAAKxC,MAAMwC,qB,GAvD9JrB,IAAMC,WAA1BiN,EAUEhN,aAAe,CACrB0F,MAAM,EACN4H,UAAW,EACXnL,SAAW,CAACiK,EAAI,EAAGC,EAAG,I,IAyET,GACdL,cAAaY,gBAAec,a,kDArB5B,aAAe,IAAD,8BACb,gBACK9O,MAAQ,CACZqN,QAAQ,GAHI,E,qDAOb,OACC,kBAAC,IAAD,CACCA,OAAUjN,KAAKL,MAAMsN,OACrBE,gBAAmB,CAACC,EAAG,EAAGC,EAAG,GAE7BC,YAAc,EACdqB,cAAe,CAACvL,WAAY,qB,GAdLtC,IAAMC,WAuBhCiN,YAAcY,aACb,SAAChP,GAAD,MAAY,CACXwM,UAAYxM,EAAMiP,UAAUzC,cAE7B,SAAC0C,GAAD,MAAe,CACdZ,gBAAkBa,YAAmBC,EAAkBF,MAL3CF,CAOZZ,I,wCCrLGiB,I,yDACL,WAAatP,GAAQ,IAAD,8BACnB,cAAMA,IAmBPuP,gBAAkB,WACjB,MAAO,CAAErK,IAAK,6BArBK,EAuBpBsK,mBAAqB,WAAWC,GAAY,IAApBC,EAAmB,EAAnBA,KACvB,EAAK1P,MAAMwP,mBAAmB,CAAEpP,GAAK,EAAKH,MAAMG,GAAIqB,KAAO,CAACgO,OAASA,EAAQE,KAAMD,MAxBhE,EA0BpBE,mBAAqB,SAACC,GACrB,EAAK/I,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B6P,cAAeC,KAAKC,MAA8B,IAAvBH,EAAcI,OAAgBJ,EAAcK,UACpE,MAA7B,EAAKjQ,MAAM6P,eACd,EAAKhJ,SAAL,2BACI,EAAK7G,OADT,IACgBkQ,aAAc,cA9BZ,EAkCpBC,aAAe,SAACC,EAAOC,GAClB,EAAKC,SAASF,IACjB,EAAKvJ,SAAL,2BACI,EAAK7G,OADT,IAECuQ,iBAAiB,EACjBH,MAAQA,KACN,WACF1L,QAAQC,IAAI,EAAK3E,OACjB,IAAIwQ,EAAW,IAAIC,SACnBC,MAAMC,KAAK,EAAK3Q,MAAMoQ,OAAOQ,SAAQ,SAACC,GAAD,OAAOL,EAASM,OAAO,QAASD,EAAEE,SAKvE,IAAInM,EAAe,IAAIC,GACvBD,EAAaE,WAAW,eACxBF,EAAaG,YAAYH,EAAaI,UAAUC,IAAI+L,QACpDpM,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBG,MAAOZ,EAAaI,UAAUQ,MAAMwL,OACpCtL,YAAY,eAEbd,EAAagB,WAAW,aAAc,CAAC,CAACqL,OAAQT,KAChD5L,EAAaqB,YAzDI,EA4EpBb,SAAW,SAACgB,GACX,IACC,OAAQA,EAAIjG,IACX,IAAK,SAC6B,IAA7BiG,EAAI5E,KAAK0P,OAAOC,SACnB,EAAKtK,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BkQ,aAAe,aAC3C,WACD,EAAKnQ,MAAMoQ,aAAa,CAAEhQ,GAAK,EAAKH,MAAMG,GAAIiQ,MAAQ,EAAKpQ,MAAMoQ,QACjEgB,WAAW,EAAKvK,SAAL,2BAAkB,EAAK7G,OAAvB,IAA+BoQ,MAAQ,KAAMG,iBAAiB,EAAOV,cAAgB,EAAGK,aAAe,MAAM,QAGzH,EAAKrJ,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BkQ,aAAc,YAK9C,MAAOhK,GACRxB,QAAQC,IAAIuB,GACZC,MAAMD,KA9FY,EAiGpBoK,SAAW,SAACF,GAOX,OALAA,EAAMQ,SAAQ,SAAClO,GAAmBuK,SAASvK,EAAI,KAAJ,WAKvC0N,EAAM5E,OAAS,MAClBpH,GAAOC,WAAW,IAAK,kHAChB,IAxGR,EAAKrE,MAAQ,CACZG,GAAK,EAAKJ,MAAMI,IAAM,GACtBiQ,MAAQ,KACRP,cAAe,EACfK,aAAc,GACdK,iBAAiB,GAElB,EAAKjB,gBAAkB,EAAKA,gBAAgBvI,KAArB,gBACvB,EAAKwI,mBAAqB,EAAKA,mBAAmBxI,KAAxB,gBAC1B,EAAKoJ,aAAe,EAAKA,aAAapJ,KAAlB,gBACpB,EAAK4I,mBAAqB,EAAKA,mBAAmB5I,KAAxB,gBAC1B,EAAK3B,SAAW,EAAKA,SAAS2B,KAAd,gBAbG,E,qDAgHnB,OACC,kBAAC,IAAM0D,SAAP,KACKrK,KAAKJ,MAAMuQ,gBACZ,kBAAC,YAAD,CAAUc,QAASjR,KAAKJ,MAAM6P,cAAeL,OAAQpP,KAAKJ,MAAMkQ,eAChE,KAEH,kBAAC,KAAD,CACChQ,SAAYE,KAAKL,MAAMG,SACvBoR,aAAa,sFACbC,sBAAwB,2BACxBC,oBAAsB,qBACtBlC,gBAAiBlP,KAAKkP,gBACtBmC,eAAgBrR,KAAKmP,mBACrBmC,SAAUtR,KAAK+P,aAEfwB,OACC,CACCC,SAAU,CAAE7P,OAAQ3B,KAAKL,MAAMgC,QAC/B8P,QAAW,CAAE9P,OAAQ,OAAQ6L,QAAS,QACtCkE,WAAa,CAAEC,UAAW,iB,GApIH7Q,IAAMC,YAA9BkO,GAgBEjO,aAAe,CACrBW,OAAS,IACTwN,mBAAqB,aACrBY,aAAe,cA0HajP,IAAMC,UAQPD,IAAMC,U,wDCzJ7B6Q,G,4MACFhS,MAAQ,CAAEiS,KAAM,IAAIC,M,EAMpBtL,SAAW,SAAAqL,GAAI,OAAI,EAAKpL,SAAS,CAAEoL,U,kEAJN,OAArB7R,KAAKL,MAAMkB,OAAkBb,KAAKL,MAAMkB,Q,iCAM5C,OAAOoI,GAAQ8I,cAAc/R,KAAKJ,MAAMiS,Q,gCAEjC,OAAO,I,+BAEd,OAAS,kBAAC,KAAD,CAAYrL,SAAUxG,KAAKwG,SAAU3F,MAAOb,KAAKJ,MAAMiS,W,GAb5C/Q,IAAMC,WAiB5BiR,G,4MACFpS,MAAQ,CAAEqS,KAAM,S,EAChBzL,SAAW,SAAAyL,GAAI,OAAI,EAAKxL,SAAS,CAAEwL,U,yDACtB,OAAOjS,KAAKJ,MAAMqS,O,gCACpB,OAAO,I,+BAEd,OAAS,kBAAC,KAAD,CAAYzL,SAAUxG,KAAKwG,SAAU3F,MAAOb,KAAKJ,MAAMqS,KAAMC,OAAO,OAAOC,cAAc,EAAMC,QAAS,iB,GAN7FtR,IAAMC,WAS5BsR,G,kDACF,WAAa1S,GAAQ,IAAD,8BAChB,cAAMA,IAQV2S,eAAiB,SAAAT,GAAI,OAAI,EAAKpL,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+B2S,SAAWV,MAT/C,EAUpBW,cAAgB,SAAAX,GAAI,OAAI,EAAKpL,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+B6S,QAAUZ,MAR7D,EAAKjS,MAAQ,CAAE2S,SAAU,GAAIE,QAAU,IAFvB,E,sDAQT,OAAO,I,iCAId,IAAIF,EAAWtJ,GAAQ8I,cAAc/R,KAAKJ,MAAM2S,UAC5CE,EAAUxJ,GAAQ8I,cAAc/R,KAAKJ,MAAM6S,SAE/C,OAAI5O,GAAOC,OAAO2O,IAAY5O,GAAOC,OAAOyO,IACxCvS,KAAKL,MAAMyB,KAAKsR,QAAU,GAC1B1S,KAAKL,MAAMyB,KAAKuR,OAAS,GAClB,IAEH9O,GAAOC,OAAO2O,IACdzS,KAAKL,MAAMyB,KAAKsR,QAAUH,EACnBA,GAEP1O,GAAOC,OAAOyO,IACdvS,KAAKL,MAAMyB,KAAKuR,OAASF,EAClBA,IAEXzS,KAAKL,MAAMyB,KAAKsR,QAAUH,EAC1BvS,KAAKL,MAAMyB,KAAKuR,OAASF,EAClBF,EAAWE,K,0CAItBzS,KAAKyG,SAAS,CAAC8L,SAAWtJ,GAAQ2J,cAAc5S,KAAKL,MAAMyB,KAAKsR,SAAUD,QAAUxJ,GAAQ2J,cAAc5S,KAAKL,MAAMyB,KAAKuR,Y,+BAG1H,OACI,yBAAKzS,MAAO,CAAC2S,QAAU,SACnB,0BAAM3S,MAAO,CAACG,YAAc,QAAQ,4DACpC,kBAAC,KAAD,CAAYmG,SAAUxG,KAAKsS,eAAgBzR,MAAOb,KAAKJ,MAAM2S,WAC7D,0BAAMrS,MAAO,CAACO,WAAY,MAAOJ,YAAc,QAA/C,OACA,0BAAMH,MAAO,CAACG,YAAc,QAAQ,6DACpC,kBAAC,KAAD,CAAYmG,SAAUxG,KAAKwS,cAAe3R,MAAOb,KAAKJ,MAAM6S,e,GA5C3C3R,IAAMC,WAAjCsR,GAKKrR,aAAe,CAClB0R,QAAU,GAAIC,OAAS,I,IA2CzBG,G,kDACF,WAAanT,GAAQ,IAAD,8BAChB,cAAMA,IAQVoT,eAAiB,SAAAd,GAAI,OAAI,EAAKxL,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+BoT,SAAWf,MAT/C,EAUpBgB,cAAgB,SAAAhB,GAAI,OAAI,EAAKxL,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+BsT,QAAUjB,MAR7D,EAAKrS,MAAQ,CAAEoT,SAAU,QAASE,QAAS,SAC3C,EAAKH,eAAiB,EAAKA,eAAepM,KAApB,gBACtB,EAAKsM,cAAgB,EAAKA,cAActM,KAAnB,gBAJL,E,uDAYhB,OAAI9C,GAAOC,OAAO9D,KAAKJ,MAAMsT,UAAYrP,GAAOC,OAAO9D,KAAKJ,MAAMoT,WAC9DhT,KAAKL,MAAMyB,KAAK+R,QAAU,GAC1BnT,KAAKL,MAAMyB,KAAKgS,OAAS,GAClB,IAEHvP,GAAOC,OAAO9D,KAAKJ,MAAMoT,WACzBhT,KAAKL,MAAMyB,KAAKgS,OAASpT,KAAKJ,MAAMsT,QAAQG,QAAQ,IAAK,IAClDrT,KAAKJ,MAAMsT,QAAQG,QAAQ,IAAK,KAEvCxP,GAAOC,OAAO9D,KAAKJ,MAAMsT,UACzBlT,KAAKL,MAAMyB,KAAK+R,QAAUnT,KAAKJ,MAAMoT,SAASK,QAAQ,IAAK,IACpDrT,KAAKJ,MAAMoT,SAASK,QAAQ,IAAK,MAE5CrT,KAAKL,MAAMyB,KAAK+R,QAAUnT,KAAKJ,MAAMoT,SAASK,QAAQ,IAAK,IAC3DrT,KAAKL,MAAMyB,KAAKgS,OAASpT,KAAKJ,MAAMsT,QAAQG,QAAQ,IAAK,IAClDrT,KAAKJ,MAAMoT,SAASK,QAAQ,IAAK,IAAMrT,KAAKJ,MAAMsT,QAAQG,QAAQ,IAAK,O,0CAIlFrT,KAAKyG,SAAS,CAACuM,SAAWnP,GAAOyP,iBAAiBtT,KAAKL,MAAMyB,KAAK+R,SAAUD,QAAUrP,GAAOyP,iBAAiBtT,KAAKL,MAAMyB,KAAKgS,Y,gCAEvH,OAAO,I,+BAEd,OACI,yBAAKlT,MAAO,CAAC2S,QAAU,SACnB,0BAAM3S,MAAO,CAACG,YAAc,QAAQ,4DACpC,kBAAC,KAAD,CAAYmG,SAAUxG,KAAK+S,eAAgBlS,MAAOb,KAAKJ,MAAMoT,SAAUd,OAAO,QAAQC,cAAc,EAAMC,QAAS,aACnH,0BAAMlS,MAAO,CAACO,WAAY,MAAOJ,YAAc,QAA/C,OACA,0BAAMH,MAAO,CAACG,YAAc,QAAQ,6DACpC,kBAAC,KAAD,CAAYmG,SAAUxG,KAAKiT,cAAepS,MAAOb,KAAKJ,MAAMsT,QAAShB,OAAO,QAAQC,cAAc,EAAMC,QAAS,kB,GA1ChGtR,IAAMC,WAAjC+R,GAOK9R,aAAe,CAClBmS,QAAU,GAAIC,OAAS,I,ICxFzBG,G,kDACF,WAAY5T,GAAQ,IAAD,8BACf,cAAMA,IACD6T,eAAiB,EAAKA,eAAe7M,KAApB,gBAFP,E,2DAOJP,GACX,IAAIvF,EAAQ,IACRuF,EAAME,OAAOmN,UACb5S,EAAQ,KAEZ,IAAI6J,EAAQ1K,KAAKL,MAAM+T,OAAOhJ,MAC9B1K,KAAKL,MAAMgU,KAAKC,aAAalJ,EAAO7J,K,+BAIpC,OACI,2BAAO2B,KAAK,WAAYvC,QAASD,KAAKwT,eAAgBC,QAA+B,MAArBzT,KAAKL,MAAMkB,Y,GAnBxDC,IAAMC,WAA/BwS,GAKKvS,aAAe,CAClBH,MAAQ,KAiBD0S,UCHAM,G,kDAjBX,WAAalU,GAAQ,IAAD,8BAChB,cAAMA,IAGVM,QAAU,SAACqB,GACPgD,QAAQC,IAAI,EAAK5E,OACjB,EAAKA,MAAMmU,QAAQC,gBAAgBC,YAAY,EAAKrU,QAJpD,EAAKM,QAAU,EAAKA,QAAQ0G,KAAb,gBAFC,E,qDAShB,OACI,kBAAC,IAAM0D,SAAP,KACI,kBAAC,EAAD,CAAQxJ,MAAM,eAAKZ,QAASD,KAAKC,e,GAZtBa,IAAMC,WCU3BkT,I,8EACL,WAAatU,GAAQ,IAAD,8BACnB,gBAgEDuU,mBAAqB,SAAC5S,GACrB,GAAIA,EAAE6S,WAAa7S,EAAE8S,SAAU,CAC9B,IAAIC,EAAU,EAAK1U,MAAMyB,KAAKkT,aAC1BlT,EAAOE,EAAEF,KACTiT,EAAQ,EAAK1U,MAAMyB,KAAKsL,QAAQ,QAASpL,EAAEF,KAAKmT,QAAhD,UAAuEC,GAAW5P,UAAU6P,KAAKpP,SAChG/D,EAAE8S,WAAa,EAAKzU,MAAMyB,KAAKsT,WAAW,EAAK/U,MAAMyB,KAAKsL,QAAQ,QAASpL,EAAEF,KAAKmT,QAAQjT,EAAEoS,OAAOhJ,OAClGtJ,EAAI,UAAgBoT,GAAW5P,UAAU6P,KAAKhN,OACjDrG,EAAI,QAAcoT,GAAW5P,UAAU6P,KAAKE,QAGzCvT,EAAI,UAAgBoT,GAAW5P,UAAU6P,KAAKE,SACjDvT,EAAI,QAAcoT,GAAW5P,UAAU6P,KAAKhN,OAI/CmC,OAAOC,OAAOwK,EAAQ,EAAK1U,MAAMyB,KAAKsL,QAAQ,QAASpL,EAAEF,KAAKmT,QAASjT,EAAEF,MACzE,EAAKzB,MAAMuU,mBAAmB,CAC5BnU,GAAK,EAAKJ,MAAMI,GACfqB,KAAOiT,EACPtK,MAAQzI,EAAEqS,KAAK5T,GACf6U,IAAKtT,EAAEuT,SACPC,IAAKxT,EAAEoS,OAAOhJ,MACdiJ,KAAOrS,EAAEqS,KACT9I,WAAavJ,EAAEyT,OAAOlK,WACtBC,iBAAmBxJ,EAAEyT,OAAOjK,iBAC5BqJ,SAAW7S,EAAE6S,SACbC,SAAW9S,EAAE8S,aA3FE,EA+FpBY,cAAgB,SAAC1T,GACM,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,IACzC,EAAKJ,MAAMqV,cAAc,CAAEjV,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,MAjG1D,EAmGpBkV,oBAAsB,SAAC3T,GACA,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,IACzC,EAAKJ,MAAMsV,oBAAoB,CAAElV,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,MArGhE,EAuGpBmV,cAAgB,SAAC5T,GACM,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,IACzC,EAAKJ,MAAMuV,cAAc,CAAEnV,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,MAzG1D,EA2GpB4J,aAAe,SAACrI,GACO,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,IACzC,EAAKJ,MAAMgK,aAAa,CAAE5J,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,MA7GzD,EA+GpBoV,mBAAqB,SAAC7T,GACC,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,IACzC,EAAKJ,MAAMwV,mBAAmB,CAAEpV,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,MAjH/D,EAmHpBqV,qBAAuB,SAAC9T,GACvBgD,QAAQC,IAAI,wBACZD,QAAQC,IAAIjD,GACU,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,KACzC,EAAKH,MAAMyV,QAAQC,mBAAmB9E,SAAQ,SAACzD,EAAShD,GACvD,EAAKpK,MAAM4K,OAAOiG,SAAQ,SAAAlO,GACzB,GAAIA,EAAKiT,KACJ1R,GAAOC,OAAOiJ,EAAQ3L,KAAKkB,EAAKmI,QAEnC,OADAzG,GAAOC,WAAW,IAAK8F,EAAQ,gBAAQzH,EAAKkI,WAAa,iFAClD,QAMX,EAAK7K,MAAMyV,qBAAqB,CAAErV,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,OAlIjE,EAoIpByV,iBAAmB,gBACSnN,IAAvB,EAAKzI,MAAMyV,SAAgD,OAAvB,EAAKzV,MAAMyV,SAA+D,IAA3CzL,OAAO6L,KAAK,EAAK7V,MAAMyV,SAASjK,QACtG,EAAKxL,MAAMyV,QAAQK,oBAtID,EAyIpBC,mBAAqB,SAACrU,KAzIF,EA4IpBsU,cAAgB,SAACtU,GACM,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,IACzC,EAAKJ,MAAMiW,cAAc,CAAE7V,GAAK,EAAKJ,MAAMI,GAAIqB,KAAOE,EAAEF,KAAM2I,MAAQzI,EAAEqS,KAAK5T,MA9I1D,EAgJpBiU,YAAc,SAAC1S,GACd,GAAsB,OAAlB,EAAK3B,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,GAEzC,GAAqD,IAAjD,EAAKH,MAAMyV,QAAQQ,mBAAmBzK,OACzCpH,GAAOC,WAAW,IAAK,iEACjB,CACN,IAAIoQ,EAAU,EAAK1U,MAAMyB,KAAKkT,aAC9BD,EAAQ/H,QAAO,SAAAhK,GAAI,OAAIA,EAAI,UAAgBkS,GAAW5P,UAAU6P,KAAKqB,WAAStF,SAAQ,SAAClO,EAAMyH,GAC5F,EAAKnK,MAAMyV,QAAQQ,mBAAmBrF,SAAQ,SAACzD,GAC1ChD,IAAUgM,OAAOhJ,EAAQhN,MACxBuC,EAAI,UAAgBkS,GAAW5P,UAAU6P,KAAKpP,OACjD/C,EAAI,QAAckS,GAAW5P,UAAU6P,KAAKxN,OAE5C3E,EAAI,QAAckS,GAAW5P,UAAU6P,KAAKqB,eAMhD,IAAI/L,EAAQ,EAAKnK,MAAMyV,QAAQQ,mBAAmB,EAAKjW,MAAMyV,QAAQQ,mBAAmBzK,OAAO,GAAnF,SACZ,EAAKzL,MAAMqU,YAAY,CACrBjU,GAAK,EAAKJ,MAAMI,GACfqB,KAAOiT,EAAQ/H,QAAO,SAAAhK,GAAI,OAAIA,EAAI,UAAgBkS,GAAW5P,UAAU6P,KAAKxN,UAC5EjC,SAAW,WACX,EAAKgR,QAAQjM,QAxKE,EA6KpBkM,YAAc,SAAC3U,GAEd,GADAgD,QAAQC,IAAI,eACU,OAAlB,EAAK5E,MAAMI,SAAiCsI,IAAlB,EAAK1I,MAAMI,GAAzC,CAEA,IAAIsU,EAAU,EAAK1U,MAAMyB,KACrB2I,EAAQsK,EAAQ6B,SACpB5R,QAAQC,IAAIwF,GAEZ,EAAKpK,MAAMsW,YAAY,CACrBlW,GAAK,EAAKJ,MAAMI,GACfqB,KAAOiT,EAAQC,aACfvK,MAAQA,EACR/E,SAAW,WACX,EAAKgR,QAAQ,EAAKpW,MAAMyV,QAAQc,uBAAuB,QA1LvC,EA8LpBC,YAAc,SAAC9U,KA9LK,EAiMpB0U,QAAU,SAACjM,GACVzF,QAAQC,IAAI,WACZD,QAAQC,IAAI,EAAK3E,MAAMyV,QAAQgB,uBAAuBtM,SAEG1B,IAArD,EAAKzI,MAAMyV,QAAQgB,uBAAuBtM,GAC7C,EAAKnK,MAAMyV,QAAQgB,uBAAuB,EAAKzW,MAAMyV,QAAQc,uBAAuB,GAAGG,aAAY,GAE/F,EAAK1W,MAAMyV,QAAQc,uBAAyBpM,EAC/C,EAAKnK,MAAMyV,QAAQgB,uBAAuBtM,GAAOuM,aAAY,GAE7D,EAAK1W,MAAMyV,QAAQgB,uBAAuB,EAAKzW,MAAMyV,QAAQc,uBAAuB,GAAGG,aAAY,IA3MlF,EAgNpBC,SAAW,SAAC1V,GACX,EAAKjB,MAAMyV,QAAQmB,eAAe3V,IAjNf,EAmNpB4V,UAAY,WACX,EAAK7W,MAAMyV,QAAQqB,iBAAiB,CAACC,IAAM,IAAIrG,MAAM,EAAK1Q,MAAMgX,oBAChE,EAAKhX,MAAMyV,QAAQwB,eAAe,EAAKjX,MAAMyV,QAAQc,uBAAuB,EAAGvM,OAAO6L,KAAK,EAAK7V,MAAMgX,kBAAkB,GAAI,IAC5H,EAAKhX,MAAMyV,QAAQyB,iBAAiB,CACnCjC,SAAU,EAAKjV,MAAMyV,QAAQc,uBAAuB,EACpDY,OAAQnN,OAAO6L,KAAK,EAAK7V,MAAMgX,kBAAkB,MAxN/B,EA2NpBI,oBAAsB,WACrB,OAAqD,IAAjD,EAAKpX,MAAMyV,QAAQQ,mBAAmBzK,OAClC,KAED2K,OAAO,EAAKnW,MAAMyV,QAAQQ,mBAAmB,GAAG9V,KA/NpC,EAiOpBkX,gBAAkB,WACjB,OAAoD,IAAhD,EAAKrX,MAAMyV,QAAQ4B,kBAAkB7L,OACjC,GAED,EAAKxL,MAAMyV,QAAQ4B,mBArOP,EAuOpBC,kBAAoB,WACnB,IAAIC,EAAe,GAInB,OAHA,EAAKvX,MAAMyV,QAAQ+B,aAAY,SAACzD,EAAM5J,GAChC4J,EAAK0D,cAAcF,EAAaG,KAAK3D,EAAKvS,SAEzC+V,GA5OY,EA+OpBI,UAAY,SAAC3C,EAAKE,GACjB,EAAKlV,MAAMyV,QAAQwB,eAAejC,EAAKE,GACvC,EAAKlV,MAAMyV,QAAQyB,iBAAiB,CAAEjC,SAAWD,EAAKmC,OAASjC,KAjP5C,EAmPpB0C,YAAc,WACb,EAAK5X,MAAMyV,QAAQK,oBApPA,EAsPpB+B,YAAc,SAACrR,GACd9B,QAAQC,IAAI,eACZ,IAAImT,EAAM9N,OAAO+N,YAAY,IAAIC,IAAI,EAAKjY,MAAM4K,OAAOlI,KAAK,SAAAuS,GAAS,MAAO,CAACA,EAAInK,MAAO,SACxFnG,QAAQC,IAAImT,GACZ,EAAKjR,SAAL,2BACI,EAAK7G,OADT,IACgByV,QAASjP,EAAMyR,IAAKC,UAAW1R,EAAM0R,UAAWlB,iBAAmBc,KAChF,gBACyBrP,IAAvB,EAAKzI,MAAMyV,SAAgD,OAAvB,EAAKzV,MAAMyV,SAA+D,IAA3CzL,OAAO6L,KAAK,EAAK7V,MAAMyV,SAASjK,QACtG4F,YAAW,kBAAM,EAAKpR,MAAMyV,QAAQK,qBAAoB,QA9PvC,EAkQpBqC,QAAU,SAACC,GAKV,OAJA1T,QAAQC,IAAI,WACZD,QAAQC,IAAIyT,GACZ1T,QAAQC,IAAIyT,EAAO5W,KAAK4W,EAAM,OAAN,QAEjBA,GArQP,EAAKpY,MAAQ,CACZyV,QAAU,GACVyC,UAAY,GACZG,WAAY,GACZ5D,QAAS,GACTuC,iBAAmB,IAEpB,EAAK5B,cAAmB,EAAKA,cAAcrO,KAAnB,gBACxB,EAAKsO,oBAAuB,EAAKA,oBAAoBtO,KAAzB,gBAC5B,EAAKuO,cAAmB,EAAKA,cAAcvO,KAAnB,gBACxB,EAAKgD,aAAkB,EAAKA,aAAahD,KAAlB,gBACvB,EAAKiP,cAAmB,EAAKA,cAAcjP,KAAnB,gBACxB,EAAKwO,mBAAuB,EAAKA,mBAAmBxO,KAAxB,gBAC5B,EAAKuN,mBAAuB,EAAKA,mBAAmBvN,KAAxB,gBAC5B,EAAK8Q,YAAiB,EAAKA,YAAY9Q,KAAjB,gBACtB,EAAKyO,qBAAwB,EAAKA,qBAAqBzO,KAA1B,gBAC7B,EAAK6O,iBAAqB,EAAKA,iBAAiB7O,KAAtB,gBAC1B,EAAKgP,mBAAuB,EAAKA,mBAAmBhP,KAAxB,gBAC5B,EAAKqN,YAAiB,EAAKA,YAAYrN,KAAjB,gBACtB,EAAKsP,YAAiB,EAAKA,YAAYtP,KAAjB,gBArBH,E,gEAwDnBrC,QAAQC,IAAI,4B,yCAGM2T,EAAWC,EAAWC,GACxC9T,QAAQC,IAAI,sBACZD,QAAQC,IAAI2T,GACZ5T,QAAQC,IAAIvE,KAAKL,S,+BAmOjB,OADA2E,QAAQC,IAAI,eAEX,kBAAC,IAAM8F,SAAP,KACC,yBAAKnK,MAAO,CAAC2S,QAAU,QAASnR,MAAM,OAAQC,OAAS,SACtD,kBAAC,GAAD,KAEG3B,KAAKL,MAAM0Y,OACX,KACC,yBAAKnX,UAAY,iCACjB,kCAASlB,KAAKL,MAAM2Y,SAAYtY,KAAKL,MAAM2Y,SAAW,qBAAtD,OAIJ,kBAAC,GAAD,KACGtY,KAAKL,MAAM4Y,UAAa,4BAAQtY,QAASD,KAAKiW,aAAtB,KAAoD,KAC5EjW,KAAKL,MAAM6Y,UAAa,4BAAQvY,QAASD,KAAKgU,aAAtB,KAAoD,KAC5EhU,KAAKL,MAAM8Y,YAAe,4BAAQxY,QAASD,KAAKoW,aAAtB,SAAoD,OAGlF,yBAAKlV,UAAU,kBAAkBhB,MAAQ,CAACwB,MAAM,OAAQC,OAAQ3B,KAAKL,MAAMgC,SAC1E,kBAAC,eAAD,CACC8V,YAAazX,KAAKyX,YAClBiB,kBAAoB,EACpBC,0BAA4B,EAC5BC,WAAc,GAGdC,oBAAuB,CACtBhH,KAAOD,GACPkH,UAAYzG,GACZ0G,UAAYjG,GACZb,KAAOD,GACPgH,SAAUzF,GACV0F,UAAYC,GACZC,eAAiBC,GACjBC,UAAYxF,GACZyF,kBAAoBA,IAErBC,uBAA0BvZ,KAAKL,MAAM4Z,uBACrCzF,QAAW,CAAEC,gBAAkB/T,MAC/BwZ,kBAAoB,EACpBC,aAAgB,OAChBC,aAAgB,GAChBC,UAAa,GACbC,cAAiB,CACfC,WAAW,EACVC,SAAW9Z,KAAKL,MAAMoa,KACtBC,UAAW,EACXC,YAAa,EACb3N,OAAStM,KAAKL,MAAM2M,OACpB4N,eAAgBla,KAAKL,MAAMua,gBAE9BC,mBAAsBna,KAAKL,MAAMwa,oBAAsB,GACvDC,eAAkBpa,KAAKL,MAAMya,eAC7BC,+BAA+B,EAC/BC,wBAA2Bta,KAAKL,MAAM2a,wBACtCC,0BAA6Bva,KAAKL,MAAM4a,0BACxCC,+BAAiC,EAOjCvC,WAAcjY,KAAKL,MAAM4K,OAEzB8J,QAAYrU,KAAKL,MAAMyB,KAAKkT,aAAahI,QAAO,SAAAhK,GAAI,OAAIA,EAAI,UAAgBkS,GAAW5P,UAAU6P,KAAKqB,WACtG2E,WAAc,CAACC,aAAc,4FAC7BC,aAAe3a,KAAKL,MAAMgb,aAC1BC,iBAAmB,QAInBjR,aAAgB3J,KAAK2J,aACrBqL,cAAiBhV,KAAKgV,cACtBC,oBAAuBjV,KAAKiV,oBAC5Bf,mBAAsBlU,KAAKkU,mBAC3BkB,qBAAyBpV,KAAKoV,qBAC9BI,iBAAoBxV,KAAKwV,iBACzBG,mBAAsB3V,KAAK2V,mBAC3BC,cAAiB5V,KAAK4V,sB,GAjXT9U,IAAMC,YAAnBkT,GAyBEjT,aAAe,CACrBjB,GAAK,KACLqB,KAAO,GACPmJ,OAAS,GACTgP,wBAAyB,EACzBa,gBAAiB,EACjBE,yBAA0B,EAC1BC,2BAA4B,EAC5BR,MAAO,EACPzN,QAAS,EACT4N,gBAAgB,EAChBS,aAAe,SACfpC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdoC,OAAS,CACRC,YAAa,EACbC,mBAAqB,IACrBC,wBAAyB,GAE1BrR,aAAe,aACfuL,cAAgB,aAChBF,cAAgB,aAChBC,oBAAsB,aACtBf,mBAAqB,aACrBiB,mBAAqB,aACrBC,qBAAwB,aACxBO,mBAAsB,aACtBC,cAAiB,aACjB5B,YAAc,c,IAkUVkF,G,uKAEJ,OACC,4BAAQ1S,SAAY,SAAClF,GAAD,OAAOgD,QAAQC,IAAI,KACtC,4BAAQ1D,MAAM,KAAd,gBACA,4BAAQA,MAAM,KAAd,iC,GAL4BC,IAAMC,WAUhCqY,G,kDACL,WAAYzZ,GAAQ,IAAD,8BAClB,cAAMA,IACD6T,eAAiB,EAAKA,eAAe7M,KAApB,gBAFJ,E,2DAIJP,GAAQ,IAAD,OACjBvF,EAAQ,IACRuF,EAAME,OAAOmN,UAChB5S,EAAQ,KAETb,KAAKL,MAAMkY,IAAIT,aAAY,SAACzD,EAAM5J,GAAY4J,EAAKC,aAAa,EAAKjU,MAAM+T,OAAOhJ,MAAO7J,Q,+BAGzF,OACC,2BAAO2B,KAAK,WAAYvC,QAASD,KAAKwT,qB,GAdN1S,IAAMC,WAkB1BkT,M,0CC3ZTgH,I,yDACF,WAAatb,GAAQ,IAAD,8BAChB,cAAMA,IAWVub,QAAU,CACNC,SAAY,EAAKxb,MAAMwL,eAAiB,CACpC,CAAC,OAAQ,SAAU,YAAa,SAAU,cAC1C,CAAC,CAAEiQ,KAAM,CAAC,SAAS,EAAO,QAAS,SAAW,CAAEC,KAAM,IAAM,CAAE3Y,MAAO,IAAM,CAAEU,WAAY,KACzF,CAAC,CAAEkY,KAAM,WAAa,CAAEA,KAAM,UAAY,CAAEC,OAAQ,MAAQ,CAAEA,OAAQ,MAAQ,CAAE9X,MAAO,KACvF,CAAC,UAEL+X,UAAW,CAAEC,aAAa,IAnBV,EAqBpBC,QAAU,CAAE,SAAU,OAAQ,SAAU,YAAa,SAAU,aAAc,OAAQ,QAAS,OAAQ,SAAU,SAAU,OAAQ,QAAS,QAAS,QAAS,aAAc,QArBvJ,EAuBpBlV,SAAW,SAAClF,GAAQ,EAAK3B,MAAM6G,SAAS,CAAEzG,GAAI,EAAKJ,MAAMI,GAAIc,MAAQS,KApBjE,EAAK1B,MAAQ,GAEb,EAAK4G,SAAY,EAAKA,SAASG,KAAd,gBALD,E,qDAyBhB,OACI,kBAAC,IAAM0D,SAAP,KACI,kBAAC,KAAD,wUAQsBrK,KAAKL,MAAMgC,OARjC,uJAcA,kBAAC,KAAD,CAAYga,MAAQ,OACR5b,GAAMC,KAAKL,MAAMI,GACjBc,MAASb,KAAKL,MAAMkB,MACpB2F,SAAYxG,KAAKwG,SACjB0U,QAASlb,KAAKkb,QACdQ,QAAS1b,KAAK0b,QACd9U,YAAa,qDACbsE,SAAUlL,KAAKL,MAAMuL,SACrBhK,UAAY,+B,GAlDfJ,IAAMC,YAAzBka,GAQKja,aAAe,CAClBmK,eAAgB,EAChBD,UAAW,EACX1E,SAAW,cA6CJyU,UCzDTW,G,kDACL,WAAYjc,GAAQ,IAAD,8BAClB,cAAMA,IAUPM,QAAU,SAACqB,GACV,EAAK3B,MAAMM,QAAQ,CAAEF,GAAK,EAAKJ,MAAMI,GAAIuG,OAAShF,EAAEgF,OAAQyD,MAAQ,EAAKpK,MAAMoK,MAAO0J,QAAU3M,SAASC,eAAezF,EAAEgF,OAAOvG,IAAI0T,WAZnH,EAcnBjN,SAAW,SAAClF,GACX,EAAK3B,MAAM6G,SAAS,CAAEzG,GAAK,EAAKJ,MAAMI,GAAIuG,OAAShF,EAAEgF,OAAQyD,MAAQ,EAAKpK,MAAMoK,MAAO0J,QAAU3M,SAASC,eAAezF,EAAEgF,OAAOvG,IAAI0T,WAbtI,EAAKjN,SAAW,EAAKA,SAASG,KAAd,gBAChB,EAAK1G,QAAU,EAAKA,QAAQ0G,KAAb,gBAHG,E,qDAkBlB,OACC,yBAAKzF,UAAU,2BACd,2BAAQsB,KAAO,WACbzC,GAAM,OAASC,KAAKL,MAAMI,GAAK,IAAMC,KAAKL,MAAMoK,MAAQ,IAAM/J,KAAKL,MAAMkc,QACzEhb,MAASb,KAAKL,MAAMkc,QACpB3X,KAAQlE,KAAKL,MAAMI,GACnB0T,QAAmC,MAAvBzT,KAAKL,MAAM8T,QACvBxT,QAAWD,KAAKC,QAChBuG,SAAYxG,KAAKwG,WAEnB,2BAAOsV,QAAS,OAAS9b,KAAKL,MAAMI,GAAK,IAAMC,KAAKL,MAAMoK,MAAQ,IAAM/J,KAAKL,MAAMkc,SAAnF,IAA8F7b,KAAKL,MAAMkB,MAAzG,U,GA7BmBC,IAAMC,WAAvB6a,GAME5a,aAAe,CACrB+I,MAAQ,EACR9J,QAAU,aACVuG,SAAW,c,IAyBPuV,G,kDACL,WAAapc,GAAQ,IAAD,8BACnB,cAAMA,IAQPM,QAAU,SAACqB,GACV,EAAK3B,MAAMM,QAAQ,CAACqG,OAAQhF,EAAEgF,OAAQvG,GAAK,EAAKJ,MAAMI,GAAIgK,MAAQzI,EAAEyI,MAAO0J,QAASnD,MAAMC,KAAKzJ,SAASkV,kBAAkB1a,EAAEgF,OAAOpC,OAAO5C,EAAEyI,OAAO0J,WAVhI,EAYpBjN,SAAW,SAAClF,GACX,EAAK3B,MAAM6G,SAAS,CAACF,OAAQhF,EAAEgF,OAAQvG,GAAK,EAAKJ,MAAMI,GAAIgK,MAAQzI,EAAEyI,MAAO0J,QAASnD,MAAMC,KAAKzJ,SAASkV,kBAAkB1a,EAAEgF,OAAOpC,OAAO5C,EAAEyI,OAAO0J,WAXpJ,EAAKjN,SAAW,EAAKA,SAASG,KAAd,gBAChB,EAAK1G,QAAU,EAAKA,QAAQ0G,KAAb,gBAHI,E,qDAeT,IAAD,OACT,OACC,kBAAC,IAAM0D,SAAP,KAECrK,KAAKL,MAAMsc,QAAQ5Z,KAAI,SAACC,EAAM4Z,GAC7B,OACC,kBAAC,GAAD,CACC3Z,IAAO,YAAc2Z,EACrBnc,GAAM,EAAKJ,MAAMI,GACjBgK,MAASmS,EACTrb,MAASyB,EAAK,EAAK3C,MAAMkB,OACzBgb,QAAYvZ,EAAK,EAAK3C,MAAMkc,SAC5BpI,QAAWnR,EAAI,MACfkE,SAAY,EAAKA,SACjBvG,QAAW,EAAKA,kB,GA9BKa,IAAMC,WAA5Bgb,GAME/a,aAAe,CACrBf,QAAU,aACVuG,SAAW,c,IA+BP2V,G,kDACL,WAAaxc,GAAQ,IAAD,8BACnB,cAAMA,IASP6G,SAAW,SAAClF,GACX,EAAK3B,MAAM6G,SAAS,CAAEzG,GAAI,EAAKJ,MAAMI,GAAIc,MAAQS,EAAEgF,OAAOzF,SAXvC,EAgBpBub,SAAW,SAACzc,GACX,OACCA,EAAMsc,QAAQ5Z,KAAI,SAACC,EAAM4Z,GACxB,OACC,yBAAK3Z,IAAK,aAAe2Z,EAAGhb,UAAW,wBACtC,2BAAQqB,IAAK,SAAU2Z,EACrBnc,GAAM,OAASmc,EAAI,IAAMvc,EAAMkc,QAC/BrZ,KAAK,QACL0B,KAAMvE,EAAMI,GACZc,MAAOyB,EAAK3C,EAAMkc,SAClBpI,QACqB,OAAnB9T,EAAMiN,SACLjN,EAAM0c,kBAAoBH,EAC1Bvc,EAAMiN,WAAatK,EAAK3C,EAAMkc,SAEjC3Q,SAAY,EAAKvL,MAAMuL,SACvBpL,SAAY,EAAKH,MAAMG,SACvB0G,SAAY,EAAKA,WAEnB,2BAAQjE,IAAK,eAAiB2Z,EAC5BJ,QAAS,OAASI,EAAI,IAAMvc,EAAMkc,QAClC3Q,SAAY,EAAKvL,MAAMuL,SACvBpL,SAAY,EAAKH,MAAMG,UAEvBwC,EAAK3C,EAAMkB,aAtCjB,EAAKjB,MAAS,CACb0c,eAAiB,EAAK3c,MAAMiN,UAAY,EAAKjN,MAAMsc,QAAQ,EAAKtc,MAAM0c,iBAAiB,EAAK1c,MAAMkc,UAEnG,EAAKrV,SAAW,EAAKA,SAASG,KAAd,gBALG,E,kGAiDnB,OADArC,QAAQC,IAAI,kBAEX,yBAAKrD,UAAU,iBAAiBhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,QACvD1B,KAAKoc,SAASpc,KAAKL,Y,GApDLmB,IAAMC,WAApBob,GAQEnb,aAAe,CACrBwF,SAAW,c,IAgDP+V,G,4MACLC,OAAS,SAAC3b,GACT,OAAQ,EAAKlB,MAAM6C,MAClB,IAAK,UAAY,OAAO3B,EAAMwS,QAAQ,UAAU,IAChD,IAAK,UAAY,OAAOxS,EAAMwS,QAAQ,+CAA+C,IACrF,IAAK,UAAY,OAAOxS,EAAMwS,QAAQ,aAAa,IACnD,QACC,OAAIxP,GAAOC,OAAOjD,GACV,GAEAA,I,uDAIA,IAAD,OACT,OACC,yBAAKK,UAAU,iBAAiBhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,QACzD,2BAAQc,KAAK,OACXzC,GAAMC,KAAKL,MAAMI,GACjBmE,KAAQlE,KAAKL,MAAMuE,KACnBrD,MAASb,KAAKwc,OAAOxc,KAAKL,MAAMkB,OAChC+F,YAAe5G,KAAKL,MAAMiH,YAC1B6V,UAAczc,KAAKL,MAAM8c,UACzBC,UAAa1c,KAAKL,MAAM+c,UACxBxR,SAAYlL,KAAKL,MAAMuL,SACvBpL,SAAYE,KAAKL,MAAMG,SACvB0G,SAAY,SAAClF,GAAD,OAAO,EAAK3B,MAAM6G,SAASlF,W,GA1BrBR,IAAMC,WAmDxB4b,IAlBwB7b,IAAMC,U,kDAmBnC,WAAapB,GAAQ,IAAD,8BACnB,cAAMA,IAeP6G,SAAW,SAACqL,GACX,EAAKlS,MAAM6G,SAAS,CAACF,OAAQ,CAAEvG,GAAI,EAAKJ,MAAMI,GAAIc,MAAOoI,GAAQ8I,cAAcF,OAjB5D,EAmBpB+K,eAAiB,WAChB,EAAKjd,MAAMid,eAAe,CAACtW,OAAS,CAACvG,GAAK,EAAKJ,MAAMI,GAAIc,MAAQ,EAAKlB,MAAMkB,UApBzD,EAsBpBgc,gBAAkB,WACjB,EAAKld,MAAMid,eAAe,CAACtW,OAAS,CAACvG,GAAK,EAAKJ,MAAMI,GAAIc,MAAQ,EAAKlB,MAAMkB,UApB5E,EAAK2F,SAAW,EAAKA,SAASG,KAAd,gBAChB,EAAKiW,eAAiB,EAAKA,eAAejW,KAApB,gBACtB,EAAKkW,gBAAkB,EAAKA,gBAAgBlW,KAArB,gBALJ,E,qDA0BnB,OACE,kBAAC,KAAD,CACCzF,UAAU,kBACVL,MAAOoI,GAAQ2J,cAAc5S,KAAKL,MAAMkB,OACxCic,cAAiB9c,KAAKL,MAAMmd,cAC5Bhd,SAAYE,KAAKL,MAAMG,SACvBid,gBAAmB/c,KAAKL,MAAMod,gBAC9B7K,OAAUlS,KAAKL,MAAMuS,OACrBjF,OAAUjN,KAAKL,MAAMsN,OACrB+P,QAAWhd,KAAKL,MAAMqd,QACtBC,QAAWjd,KAAKL,MAAMsd,QACtBC,SAAYld,KAAKL,MAAMud,SACvBC,YAAend,KAAKL,MAAMwd,YAC1B3W,SAAUxG,KAAKwG,SACfoW,eAAkB5c,KAAK4c,eACvBC,gBAAmB7c,KAAK6c,sB,GA1CD/b,IAAMC,YAA5B4b,GAQE3b,aAAe,CACrB8b,eAAgB,EAChBhd,UAAW,EACXid,iBAAkB,EAClB7K,OAAS,UACTjF,QAAS,EACTiQ,UAAW,EACXC,YAAc,S,IAiCVC,G,uKACM,IAAD,OACT,OACC,kBAAC,IAAM/S,SAAP,KACC,kBAAC,KAAD,CAAYtK,GAAIC,KAAKL,MAAM0d,KAAMnc,UAAU,kBACxCsF,SAAc,SAAAqL,GAAI,OAAI,EAAKlS,MAAM6G,SAAS,CAACF,OAAQ,CAAEvG,GAAI,EAAKJ,MAAM0d,KAAMxc,MAAOoI,GAAQ8I,cAAcF,OACvGhR,MAAQoI,GAAQ2J,cAAc5S,KAAKL,MAAM2d,aAC5C,kBAAC,KAAD,CAAYvd,GAAIC,KAAKL,MAAM4d,MAAOrc,UAAU,kBACzCsF,SAAc,SAAAqL,GAAI,OAAI,EAAKlS,MAAM6G,SAAS,CAACF,OAAQ,CAAEvG,GAAI,EAAKJ,MAAM4d,MAAO1c,MAAOoI,GAAQ8I,cAAcF,OACxGhR,MAAOoI,GAAQ2J,cAAc5S,KAAKL,MAAM8S,gB,GATd3R,IAAMC,WCzNxByc,G,uKAbb,OACC,yBAAKtc,UAAU,kBACd,8BAAOlB,KAAKL,MAAMkB,OAEhBb,KAAKL,MAAM4V,IACV,0BAAMrV,MAAO,CAACwC,MAAQ,QAAS,KAC/B,U,GARa5B,IAAMC,WCEpB0c,I,8KAGO,OAAS,yBAAKvc,UAAY,kBAAjB,IAAoClB,KAAKL,MAAM+d,SAA/C,S,GAHC5c,IAAMC,YAAvB0c,GACEzc,aAAe,CAAEU,MAAO,Q,IAI1Bic,G,uKAGO,OAAS,yBAAKzc,UAAY,mBAAjB,IAAqClB,KAAKL,MAAM+d,SAAhD,S,GAHE5c,IAAMC,WAAxB4c,GACE3c,aAAe,CAAEU,MAAO,Q,IAI1Bkc,G,uKAEO,OAAS,yBAAK1c,UAAY,qBAAjB,IAAuClB,KAAKL,MAAM+d,SAAlD,S,GAFI5c,IAAMC,WAQ1B8c,IAJkB/c,IAAMC,U,uKAMjB,OAAS,yBAAKG,UAAY,kBAAkBhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,QAA7D,IAAuE1B,KAAKL,MAAM+d,SAAlF,S,GAFE5c,IAAMC,YAIxB+c,G,uKAIJ,OACC,yBAAK5c,UAAY,uBAAuBhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,MAAOC,OAAQ3B,KAAKL,MAAMgC,SAC1F3B,KAAKL,MAAM+d,c,GANa5c,IAAMC,WAA7B+c,GACE9c,aAAe,CAAEU,MAAO,O,IAU1Bqc,G,uKAEO,OAAS,yBAAK7c,UAAY,qBAAjB,IAAuClB,KAAKL,MAAM+d,SAAlD,S,GAFI5c,IAAMC,WAI1Bid,G,uKAEO,OAAQ,yBAAK9c,UAAY,mBAAjB,IAAqClB,KAAKL,MAAM+d,SAAhD,S,GAFG5c,IAAMC,WAIxBkd,G,uKAEO,OAAQ,yBAAK/c,UAAY,kBAAkBhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,QAA7D,IAAuE1B,KAAKL,MAAM+d,SAAlF,S,GAFG5c,IAAMC,WAIxBmd,G,uKAEO,OAAQ,yBAAKhd,UAAY,qBAAqBhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,MAAOC,OAAQ3B,KAAKL,MAAMgC,SAA1F,IAAqG3B,KAAKL,MAAM+d,SAAhH,S,GAFM5c,IAAMC,WAI3Bod,G,uKAEO,OAAQ,yBAAKjd,UAAY,mBAAjB,IAAqClB,KAAKL,MAAM+d,SAAhD,S,GAFI5c,IAAMC,WAIzBqd,G,uKAEO,OAAQ,yBAAKld,UAAY,mBAAjB,IAAqClB,KAAKL,MAAM+d,SAAhD,S,GAFI5c,IAAMC,WAIzBsd,G,uKAEO,OAAQ,yBAAKnd,UAAY,oBAAoBhB,MAAO,CAACwB,MAAQ1B,KAAKL,MAAM+B,QAAhE,IAA0E1B,KAAKL,MAAM+d,SAArF,S,GAFO5c,IAAMC,WAI5Bud,G,uKAIJ,OAAQ,yBAAKpd,UAAU,mBAAf,IAAmClB,KAAKL,MAAM+d,SAA9C,S,GAJc5c,IAAMC,WAAxBud,GACEtd,aAAe,CAAEU,MAAO,O,cC/D1B6c,G,kDACL,WAAY5e,GAAS,IAAD,8BACnB,cAAMA,IAKP6e,eAAiB,WAChB,EAAK/X,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B8G,MAAQ,EAAK9G,MAAM8G,SALjD,EAAK9G,MAAQ,CACZ8G,MAAO,GAHW,E,qDAST,IAAD,OACT,OACC,kBAAC,IAAM2D,SAAP,KACC,yBAAKnJ,UAAU,8BACd,wBAAIA,UAAU,uBAEZlB,KAAKL,MAAM6M,KAAKF,QAAO,SAAAhK,GAAI,OAAIuB,GAAOC,OAAOxB,EAAKmc,gBAAepc,KAAI,SAACC,EAAMC,GAC3E,OAAO,wBAAIrB,UAAU,sBAAsBqB,IAAK,QAAUA,EAAKtC,QAAS,EAAKue,gBAAiBlc,EAAKoc,aAKvG,yBAAKxd,UAAalB,KAAKJ,MAAM8G,KAAQ,0BAA4B,2BAC/D,wBAAIxF,UAAU,uBAEZlB,KAAKL,MAAM6M,KAAKF,QAAO,SAAAhK,GAAI,OAAIuB,GAAOC,OAAOxB,EAAKmc,gBAAcpc,KAAI,SAACC,EAAMC,GAC1E,OACC,wBAAIrB,UAAU,sBAAsBqB,IAAK,YAAcA,EAAKtC,QAAS,EAAKue,gBACzE,wBAAItd,UAAU,0BAEZ,EAAKvB,MAAM6M,KAAKF,QAAO,SAAAE,GAAI,OAAIA,EAAKiS,cAAgBnc,EAAKqK,UAAQtK,KAAI,SAACsc,EAASC,GAC9E,OAAO,wBAAK1d,UAAU,yBAAyBqB,IAAK,WAAaqc,EAAQ7e,GAAI,WAAa4e,EAAQhS,OAC/F1M,QACC,SAACqB,GACA,EAAK3B,MAAMkf,SAASF,GACpB,EAAKlY,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B8G,MAAO,OAJnC,IAOFiY,EAAQD,OAPN,oB,GA/BI5d,IAAMC,W,IAoDZD,IAAMC,U,mBC1BV+d,ICvBMhe,IAAMC,U,uKDDzB,OACC,yBAAKG,UAAU,qBACd,kBAAC,YAAD,CAAUsB,KAAMxC,KAAKL,MAAMwC,QAAQK,KAAMyO,QAASjR,KAAKL,MAAMyB,KAAMgO,OAAQpP,KAAKL,MAAMwC,QAAQiN,OAC3FuM,MACC,CACCoD,QAAU,CACTC,OAAQhf,KAAKL,MAAMyB,KAAO,IAC1BsB,MAAQ,QAETuc,MAAQ,CACPD,OAAQhf,KAAKL,MAAMyB,KAAO,IAC1BsB,MAAQ,OAETwc,QAAU,CACTF,OAAQhf,KAAKL,MAAMyB,KAAO,IAC1BsB,MAAQ,iB,GAjBQ5B,IAAMC,YEE1Boe,G,kDACL,WAAYxf,GAAQ,IAAD,8BAClB,cAAMA,IAOP6G,SAAW,SAAClF,GACX,EAAK3B,MAAM6G,SAAS,CAACF,OAAShF,EAAEgF,OAAQvG,GAAK,EAAKJ,MAAMI,MAPxD,EAAKyG,SAAW,EAAKA,SAASG,KAAd,gBAFE,E,qDAalB,OADArC,QAAQC,IAAI,uBAEX,yBAAKrD,UAAU,kBAAkBhB,MAAO,CAACwB,MAAQ1B,KAAKL,MAAM+B,QAC3D,4BACC3B,GAAMC,KAAKL,MAAMI,GAEjBc,MAASb,KAAKL,MAAMkB,MACpBf,SAAYE,KAAKL,MAAMG,SACvB0G,SAAYxG,KAAKwG,UAGhBxG,KAAKL,MAAMsc,QAAQ3P,QAAO,SAAAhK,GAAI,OAAkB,OAAfA,EAAKzB,YAAiCwH,IAAf/F,EAAKzB,SAAqBwB,KAAI,SAAC+c,EAAM7c,GAC5F,OAAQ,4BAAQ1B,MAAOue,EAAKve,MAAO0B,IAAK6c,EAAKve,MAAQ,IAAM0B,GAAO6c,EAAKlb,e,GAzBtDpD,IAAMC,WAAxBoe,GAKEne,aAAe,CACrB4L,SAAW,EACXpG,SAAW,c,IA0BP8S,G,kDACL,WAAa3Z,GAAQ,IAAD,8BACnB,cAAMA,IAOP0f,YARoB,sBAQN,8BAAAC,EAAA,uEAGR9a,EAAe,IAAIC,IACVC,WAAW,gBACxBF,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,yBACTpC,YAAY,kBACZC,YAAY,oBAEbf,EAAagB,WAAW,kBAAmB,CAAC,CAAEiD,QAAU,OAb5C,SAcMjE,EAAaqB,QAdnB,OAgB6B,KAFnCG,EAdM,QAgBH5E,KAAKme,gBAAgBnU,QAM7B,EAAK3E,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B4f,UAAYxZ,EAAI5E,KAAKme,gBAAgBld,KAAI,SAACC,GACvE,MAAO,CAAEzB,MAAQyB,EAAKmd,QAAUvb,KAAO5B,EAAKod,eAvBlC,kDA2BZ1b,GAAOC,WAAW,IAAK,oGA3BX,0DANb,EAAKrE,MAAQ,CAAE4f,UAAY,IAFR,E,gEAMnBxf,KAAKqf,gB,+BAiCL,OAAS,kBAAC,GAAD,CAAW7c,KAAMxC,KAAKL,MAAM6C,KAAMzC,GAAMC,KAAKL,MAAMI,GAAIc,MAASb,KAAKL,MAAMkB,MAAOsB,QAAWnC,KAAKJ,MAAM4f,UAAWhZ,SAAYxG,KAAKL,MAAM6G,e,GAxCrH1F,IAAMC,WAAhCuY,GAKEtY,aAAe,CAAEwB,KAAO,M,kDAuC/B,WAAa7C,GAAQ,IAAD,8BACnB,cAAMA,IAePggB,YAhBoB,sBAgBN,8BAAAL,EAAA,uEAGR9a,EAAe,IAAIC,IACVC,WAAW,gBACxBF,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,yBACTpC,YAAY,kBACZC,YAAY,oBAEbf,EAAagB,WAAW,kBAAmB,CAAC,CAAEia,QAAU,EAAK9f,MAAMigB,UAbvD,SAcIpb,EAAaqB,QAdjB,OAiB4B,KAHpCG,EAdQ,QAiBJ5E,KAAKye,gBAAgBzU,QAM5B,EAAK3E,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+B4f,UAAYxZ,EAAI5E,KAAKye,gBAAgBxd,KAAI,SAACC,GACtE,MAAO,CAAEzB,MAAQyB,EAAKwd,QAAU5b,KAAO5B,EAAKyd,eAxBpC,kDA6BZ/b,GAAOC,WAAW,IAAK,oGA7BX,0DAdb,EAAKrE,MAAQ,CAAE4f,UAAY,IAFR,E,gEASnBxf,KAAK2f,YAAY3f,KAAKL,MAAMigB,U,yCAEV1H,GACdA,EAAU0H,SAAW5f,KAAKL,MAAMigB,QACnC5f,KAAK2f,YAAY3f,KAAKL,MAAMigB,U,+BAoC7B,OAAS,kBAAC,GAAD,CAAWpd,KAAMxC,KAAKL,MAAM6C,KAAMzC,GAAMC,KAAKL,MAAMI,GAAIc,MAASb,KAAKL,MAAMkB,MAAOsB,QAAWnC,KAAKJ,MAAM4f,UAAWhZ,SAAUxG,KAAKL,MAAM6G,e,GAlDnH1F,IAAMC,YAK9BC,aAAe,CACrB4e,OAAS,GACTpd,KAAO,M,kDA+CR,WAAa7C,GAAQ,IAAD,8BACnB,cAAMA,IAkBPqgB,YAnBoB,sBAmBN,8BAAAV,EAAA,uEAER9a,EAAe,IAAIC,IACVC,WAAW,gBACxBF,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,wBACTpC,YAAY,kBACZC,YAAY,mBAEbf,EAAagB,WAAW,kBAAmB,CAAC,CAAEia,QAAU,EAAK9f,MAAMigB,OAAQE,QAAU,EAAKngB,MAAMsgB,UAZpF,SAaIzb,EAAaqB,QAbjB,OAe2B,KAFnCG,EAbQ,QAeJ5E,KAAK8e,eAAe9U,QAM3B,EAAK3E,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+B4f,UAAYxZ,EAAI5E,KAAK8e,eAAe7d,KAAI,SAACC,GACvE,MAAO,CAAEzB,MAAQyB,EAAKmD,OAASvB,KAAO5B,EAAKoD,cAtBjC,kDA2BZ1B,GAAOC,WAAW,IAAK,oGA3BX,0DAjBb,EAAKrE,MAAQ,CACZ4f,UAAY,IAHM,E,gEAOnBxf,KAAKggB,gB,yCAEa9H,GACdA,EAAU0H,SAAW5f,KAAKL,MAAMigB,QAAU1H,EAAU+H,SAAWjgB,KAAKL,MAAMsgB,QAC7EjgB,KAAK2f,gB,+BAuCN,OAAS,kBAAC,GAAD,CAAWnd,KAAMxC,KAAKL,MAAM6C,KAAMzC,GAAMC,KAAKL,MAAMI,GAAIc,MAASb,KAAKL,MAAMkB,MAAOsB,QAAWnC,KAAKJ,MAAM4f,UAAWhZ,SAAYxG,KAAKL,MAAM6G,e,GAnDtH1F,IAAMC,YAe7BC,aAAe,CACrB4e,OAAS,GACTK,OAAS,GACTzd,KAAO,K,IAoCH2d,G,kDACL,WAAaxgB,GAAQ,IAAD,uBACnB,cAAMA,IA6BPygB,mBAAqB,SAAC9e,GACrB,IAAM+e,EAAUC,IAASC,YAAT,gBACVF,GAAYA,EAAQG,SAASlf,EAAEgF,UACpCQ,SAASC,eAAe,EAAKpH,MAAMI,IAAIG,MAAM2S,QAAU,OACvD,EAAKpM,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B6gB,UAAW,OAlCvB,EAqCpBC,aAAe,WACd,IAAIC,EAAa7Z,SAASC,eAAe,EAAKpH,MAAMI,IAC/C,EAAKH,MAAM6gB,UAIfE,EAAWzgB,MAAM2S,QAAU,OAC3B,EAAKpM,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B6gB,UAAU,OAJxCE,EAAWzgB,MAAM2S,QAAU,QAC3B,EAAKpM,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B6gB,UAAU,OAzCtB,EA+CpBG,WAAa,SAACtf,GACb,EAAKmF,SAAL,2BAAkB,EAAK7G,OAAvB,IACGihB,KAAOvf,EAAEmS,QAAW,2BAAS,MAC7BqN,WAAU,2BAAO,EAAKlhB,MAAMkhB,YAAlB,IAA8BrN,QAAWnS,EAAEmS,QAAW,IAAM,SACtE,WACF,EAAK9T,MAAM6G,SAAS,CACnBF,OAAShF,EAAEgF,OACXvG,GAAK,EAAKJ,MAAMI,GAChBkc,QAAU,EAAKtc,MAAMsc,QAAQ5Z,KAAI,SAACC,GAAmD,OAAzCA,EAAI,MAAahB,EAAEmS,QAAW,IAAM,IAAYnR,WAvD3E,EA2DpBkE,SAAW,SAAClF,GACX,OAAQA,EAAEgF,OAAOvG,IAChB,IAAM,eAAiB,EAAKJ,MAAMI,GAAK,QACtCuE,QAAQC,IAAI,iBACZ,MACD,IAAM,eAAiB,EAAK5E,MAAMI,GACjCuE,QAAQC,IAAI,sBAjEK,EAsEpBwc,gBAAkB,SAACzf,GAClB,IAAI0f,EAAU,KACVC,EAAc,KAOjBD,GALAC,EADG3f,EAAEgF,OAAOmN,QACE,EAAK9T,MAAMsc,QAAQ3P,QAAO,SAAAhK,GAAI,MAAsB,MAAlBA,EAAI,OAAqBA,IAAS,EAAK3C,MAAMsc,QAAQ3a,EAAEyI,UAAQ1H,KAAI,SAACC,GAAW,OAAOA,EAAK,EAAK3C,MAAMkB,UAExI,EAAKlB,MAAMsc,QAAQ3P,QAAO,SAAAhK,GAAI,MAAsB,MAAlBA,EAAI,OAAqBA,IAAS,EAAK3C,MAAMsc,QAAQ3a,EAAEyI,UAAQ1H,KAAI,SAACC,GAAW,OAAOA,EAAK,EAAK3C,MAAMkB,WAEvIuK,SAAW,EAAKzL,MAAMsc,QAAQ7Q,OAClC,2BAEgB,IAAvB6V,EAAY7V,OACJ,MAED6V,EAAYC,WAIxB,EAAKza,SAAL,2BAAmB,EAAK7G,OAAxB,IAAgCihB,KAAQG,EAAUF,WAAU,2BAAO,EAAKlhB,MAAMkhB,YAAlB,IAA8BrN,QAAWwN,EAAY7V,SAAW,EAAKzL,MAAMsc,QAAQ7Q,OAAU,IAAM,SAC7J,WACD,EAAKzL,MAAM6G,SAAS,CACnBzG,GAAK,EAAKJ,MAAMI,GAChBuG,OAAShF,EAAEgF,OACX2V,QAAU,EAAKtc,MAAMsc,QAAQ5Z,KAAI,SAACC,EAAMyH,GAIvC,OAHIA,IAAUzI,EAAEyI,QACfzH,EAAI,MAAahB,EAAEmS,QAAW,IAAM,KAE9BnR,WA9FV,IAAIue,EAAO,MAHQ,OAIe,IAA9B,EAAKlhB,MAAMsc,QAAQ7Q,SAErByV,EADG,EAAKlhB,MAAMsc,QAAQ3P,QAAO,SAAAhK,GAAI,MAAsB,MAAlBA,EAAI,SAAmB8I,SAAW,EAAKzL,MAAMsc,QAAQ7Q,OACnF,2BAEA,EAAKzL,MAAMsc,QAAQ3P,QAAO,SAAAhK,GAAI,MAAsB,MAAlBA,EAAI,SAAmBD,KAAI,SAAA0K,GAAa,OAAOA,EAAQ,EAAKpN,MAAMkB,UAASqgB,YAGtH,EAAKthB,MAAQ,CACZ6gB,UAAW,EACXI,KAAOA,EACPC,WAAa,CACZjF,QAAU,YACVhb,MAAQ,2BACR4S,QAAU,MAGZ,EAAKmN,WAAa,EAAKA,WAAWja,KAAhB,gBAClB,EAAKoa,gBAAkB,EAAKA,gBAAgBpa,KAArB,gBACvB,EAAKH,SAAW,EAAKA,SAASG,KAAd,gBAtBG,E,gEAyBnBG,SAASqa,iBAAiB,QAASnhB,KAAKogB,oBAAoB,K,6CAG5DtZ,SAASsa,oBAAoB,QAASphB,KAAKogB,oBAAoB,K,+BA4E/D,OACC,yBAAKlf,UAAU,2BACd,yBAAKA,UAAclB,KAAKL,MAAMG,SAAY,6CAA+C,oCACvFG,QAAUD,KAAKL,MAAMG,SAAY,SAACwB,GAAQ,OAAO,MAAUtB,KAAK0gB,aAAcxgB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,MAAOmR,QAAS,SAEzH,yBAAK3R,UAAU,0CAA0ChB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,QAClF,8BAAO1B,KAAKJ,MAAMihB,OAEnB,yBAAK3gB,MAAO,CAACwB,MAAM,OAAQ+L,MAAO,QAASpN,YAAa,MAAOmD,cAAe,WAC7E,uBAAGtC,UAAYlB,KAAKJ,MAAM6gB,SAAY,WAAa,iBAGrD,yBAAKvf,UAAU,kCAAkCnB,GAAKC,KAAKL,MAAMI,GAAIG,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,MAAOC,OAAkC,GAA1B3B,KAAKL,MAAM0hB,aAAoB,OAC5I,kBAAC,GAAD,CACCthB,GAAM,eAAiBC,KAAKL,MAAMI,GAAK,QACvC8b,QAAW,uBAAyB7b,KAAKL,MAAMI,GAC/Cc,MAASb,KAAKJ,MAAMkhB,WAAWjgB,MAC/B4S,QAAWzT,KAAKJ,MAAMkhB,WAAWrN,QACjCxT,QAAWD,KAAK4gB,WAChBpa,SAAYxG,KAAKwG,WAElB,kBAAC,GAAD,CACCzG,GAAK,eAAiBC,KAAKL,MAAMI,GACjCkc,QAAWjc,KAAKL,MAAMsc,QACtBJ,QAAW7b,KAAKL,MAAMkc,QACtBhb,MAASb,KAAKL,MAAMkB,MACpBf,UAAY,EACZG,QAAWD,KAAK+gB,wB,GApIOjgB,IAAMC,W,qBChL7BugB,I,0NAUFrhB,QAAU,WAAQ,EAAKN,MAAMwG,W,uDAEzB,OACG,yBAAKjF,UAAU,2BAA2BhB,MAAO,CAAC2S,QAAU7S,KAAKL,MAAM+G,KAAQ,QAAU,SACpF,0BAAMxF,UAAU,2BAA2BjB,QAAUD,KAAKC,SAA1D,QACA,yBAAKiB,UAAU,yBAAyBqgB,IAAKC,6BAAgCxhB,KAAKL,MAAMuE,KAAMud,IAAI,KAClG,yBAAK1hB,GAAG,oC,GAhBGe,IAAMC,YAA3BugB,GACKtgB,aAAe,CAClB0F,MAAM,EACNgb,SAAW,GACXvb,QAAU,WAAO,OAAO,I,IAkB1Bwb,G,kDACF,WAAahiB,GAAQ,IAAD,8BAChB,cAAMA,IAaViiB,WAdoB,sBAcP,kCAAAtC,EAAA,6DACThb,QAAQC,IAAI,YACNsd,EAAa,CACfC,OAAQ,MACRjd,IAAK2c,wCAA2C,EAAK7hB,MAAMuE,KAC3D6d,QAAS,CACL,eAAgB,oBAEpBC,aAAc,QART,kBAWiBC,IAAMJ,GAXvB,OAWCK,EAXD,OAYCrd,EAAMsd,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,EAAQ9gB,SACnDmhB,EAAOzb,SAAS0b,cAAc,MAC/BC,KAAO5d,EACZ0d,EAAKG,aAAa,WAAY,EAAK/iB,MAAMuE,MACzC4C,SAAS6b,KAAKC,YAAYL,GAC1BA,EAAKza,QACLhB,SAAS6b,KAAKE,YAAYN,GAlBrB,yDAoBLve,GAAOC,WAAW,IAAK,oGApBlB,mBAqBE,GArBF,0DAdO,EAsCpB6e,UAAY,WAER,GADAxe,QAAQC,IAAI,kBACsD8D,IAA7DvB,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,SAAsF,OAA7Dlc,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,QAAmB,CAC/I,IAAIC,EAASnc,SAAS0b,cAAc,OACpCS,EAAOljB,GAAKyU,GAAW5P,UAAUme,IAAIC,OACrClc,SAAS6b,KAAKC,YAAYK,GAE9B3C,IAAS4C,OACL,kBAAC,GAAD,CAAgBxc,MAAM,EAAM7B,IAAK,EAAKlF,MAAMkF,IAAKX,KAAM,EAAKvE,MAAMuE,KAAMiC,QAAU,WAAQma,IAAS6C,uBAAuBrc,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,YAC3Jlc,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,UA7CrE,EAAKpjB,MAAQ,CACTwjB,IAAM,CACFC,IAAM,CAAC,MAAO,OAAQ,MAAO,OAC7BC,IAAM,CAAC,MAAO,QACdC,IAAM,CAAC,MAAO,QACdC,IAAM,CAAC,OACPC,IAAM,CAAC,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SAG7F,EAAK7B,WAAa,EAAKA,WAAWjb,KAAhB,gBAClB,EAAKmc,UAAY,EAAKA,UAAUnc,KAAf,gBAZD,E,qDAmDhB,OACI,kBAAC,IAAM0D,SAAP,KACI,yBAAKnJ,UAAW,uBAAuBhB,MAAO,CAACsN,QAAS,MAAO9L,MAA4B,GAApB1B,KAAKL,MAAMgC,OAAe,KAAMA,OAA6B,GAApB3B,KAAKL,MAAMgC,OAAe,OACtI,yBAAKT,UAAW,kBAAmBjB,QAAWD,KAAK8iB,UAAW5iB,MAAO,CAACyB,OAA8B,GAApB3B,KAAKL,MAAMgC,OAAgB,GAAK,OAC5G,8BAAO3B,KAAKL,MAAMuE,OAEtB,yBAAKhD,UAAU,uBAAuBjB,QAAWD,KAAK4hB,WAAY1hB,MAAO,CAACyB,OAAQ,SAC9E,yBAAK5B,GAAG,cAAcwhB,IAAK,uBAAwBE,IAAI,GAAG/f,MAAM,SAChE,iD,GA5DKZ,IAAMC,WAoE7B2iB,G,kDACF,WAAa/jB,GAAQ,IAAD,8BAChB,cAAMA,IAKVgkB,aAAe,SAAChkB,GAEZ,MADW,IAPK,EAUpBikB,gBAAkB,SAACthB,GACf,OACIA,EAAKD,KAAI,SAACjB,EAAMyiB,GACZ,OAAO,kBAAC,GAAD,CAAgBthB,IAAK,mBAAqBshB,EAAK3f,KAAM9C,EAAK0iB,QAASjf,IAAM2c,4BAA+BpgB,EAAK0iB,QAAUniB,OAAQ,EAAKhC,MAAMgC,aAbzI,EAiBpBoiB,cAAgB,WACZzf,QAAQC,IAAI,iBAlBI,EAoBpByf,aAAe,WAAQ,EAAKC,OAAOC,aApBf,EAqBpBC,aAAe,WAAQ,EAAKF,OAAOG,aAnB/B,EAAKJ,aAAe,EAAKA,aAAard,KAAlB,gBACpB,EAAKwd,aAAe,EAAKA,aAAaxd,KAAlB,gBAHJ,E,qDAsBV,IAAD,OACC0d,EAAW,CACTC,MAAM,EACNC,aAAcxO,OAAO/V,KAAKL,MAAMyB,KAAKgK,SAAW,EAAIpL,KAAKL,MAAMyB,KAAKgK,OAAS,EAC7EoZ,eAAgB,EAChBC,aAAc,EACdC,MAAO,IACPC,WAAY,CACR,CAAEC,WAAY,KAAMP,SAAU,CAAEE,aAAc,EAAGC,eAAgB,EAAGK,UAAU,EAAMP,MAAM,IAC1F,CAAEM,WAAY,IAAKP,SAAU,CAAEE,aAAc,EAAGC,eAAgB,IAChE,CAAEI,WAAY,IAAKP,SAAU,CAAEE,aAAc,EAAGC,eAAgB,MAG5E,OACI,kBAAC,IAAMna,SAAP,KACI,yBAAKnK,MAAO,CAAC2S,QAAU,OAAQnR,MAAO,OAAQC,OAAQ3B,KAAKL,MAAMgC,OAAS,OACtE,yBAAKT,UAAU,kBAAkBhB,MAAO,CAACwB,MAAQ,MAAOojB,UAAW,SAAUjjB,IAAK,MAAOE,KAAM,OAAQ9B,QAAWD,KAAKgkB,cACnH,uCAEJ,yBAAK9jB,MAAO,CAACwB,MAAQ,QACjB,kBAAC,KAAD,eAAQ4I,IAAK,SAAAya,GAAC,OAAK,EAAKd,OAASc,IAAQV,GACpCrkB,KAAK4jB,gBAAgB5jB,KAAKL,MAAMyB,QAGzC,yBAAKF,UAAU,kBAAkBhB,MAAO,CAACwB,MAAQ,MAAOojB,UAAW,SAAUjjB,IAAK,MAAOE,KAAM,OAAQ9B,QAAWD,KAAKmkB,cACnH,6C,GAhDErjB,IAAMC,WAA1B2iB,GAMK1iB,aAAe,CAAEW,OAAQ,KAiDrB+hB,UCzJTsB,G,kDAKF,WAAYrlB,GAAQ,IAAD,8BACf,cAAMA,IASVslB,WAAa,SAAClb,GACV,EAAKtD,SAAS,CAAEye,OAAQnb,IACxB,EAAKpK,MAAMM,QAAQ8J,IAVnB,EAAKnK,MAAQ,CACTslB,OAAgE,IAAvDpkB,IAAMqkB,SAASC,QAAQ,EAAKzlB,MAAM+d,UAAUtS,OAC3C,EACAtK,IAAMqkB,SAASC,QAAQ,EAAKzlB,MAAM+d,UAAUpR,QAAO,SAAA+Y,GAAK,MAA4B,SAAxBA,EAAM1lB,MAAMkT,WAAoB,GAAGlT,MAAMoK,OALpG,E,qDAcR,IAAD,OACN,OACI,kBAAC,IAAMM,SAAP,KACI,yBAAKnK,MAAO,CAACK,aAAc,SACvB,wBAAIW,UAAW,gBAEPJ,IAAMqkB,SAASC,QAAQplB,KAAKL,MAAM+d,UAAUpR,QAAO,SAAA+Y,GAAK,MAA4B,SAAxBA,EAAM1lB,MAAMkT,WAAoBxQ,KAAI,SAACijB,GACzF,OACI,kBAAC,GAAD,CAAKvlB,GAAI,EAAKJ,MAAMI,GAAIwlB,SAAW,EAAK5lB,MAAM4lB,SAAUL,OAAS,EAAKtlB,MAAMslB,OAAQ3iB,IAAM+iB,EAAI3lB,MAAMoK,MAAOA,MAAQub,EAAI3lB,MAAMoK,MAAO9G,MAASqiB,EAAI3lB,MAAMsD,MAAOhD,QAAW,EAAKglB,kBAOtM,yBAAK/jB,UAAU,qBAAqBhB,MAAO,CAACyB,OAAQ3B,KAAKL,MAAMgC,SAEvDb,IAAMqkB,SAASC,QAAQplB,KAAKL,MAAM+d,UAAUpR,QAAO,SAAA+Y,GAAK,MAA4B,SAAxBA,EAAM1lB,MAAMkT,WAAoBxQ,KAAI,SAACgjB,GAC7F,GAAIA,EAAM1lB,MAAMoK,QAAU,EAAKnK,MAAMslB,OACrC,OAAOG,EAAM1lB,MAAM+d,kB,GAtC5B5c,IAAMC,WAAnBikB,GAYKhkB,aAAe,CAClBf,QAAU,SAACqB,GAAO,OAAO,I,IAiC3BkkB,G,4MAOFvlB,QAAU,WACN,EAAKN,MAAMM,QAAQ,EAAKN,MAAMoK,Q,uDAG9B,IAAI7I,EAAY,kBAIhB,OAHIlB,KAAKL,MAAMulB,SAAWllB,KAAKL,MAAMoK,QACjC7I,GAAa,2BAGb,wBAAIA,UAAYA,EAAWhB,MAAO,CAACwB,MAAO1B,KAAKL,MAAM4lB,UAAWtlB,QAAUD,KAAKC,SAA/E,IAA0FD,KAAKL,MAAMsD,MAArG,S,GAhBMnC,IAAMC,WAoBlB0kB,G,uKAME,OAAS,yBAAK1lB,GAAIC,KAAKL,MAAMI,GAAImB,UAAU,kBAAlC,IAAqDlB,KAAKL,MAAM+d,SAAhE,S,GANM5c,IAAMC,WAAvB0kB,GACKzkB,aAAe,CAClB+I,MAAQ,EACR9G,MAAQ,O,ICpBDyiB,G,4MAjDXC,YAAc,SAACC,GACX,YAAevd,IAAXud,GAGsB,IAAlBA,EAAOxa,OAFJ,KAKIwa,EAAOvjB,KAAI,SAACujB,EAAQ7b,GACvB,OAAQ,yBAAKxH,IAAK,OAASwH,EAAO7J,MAAO,CAACwB,MAAOkkB,EAAOlkB,a,EAKxEmkB,QAAU,SAAClD,GACP,YAAata,IAATsa,EACO,KAEA,EAAKmD,OAAOnD,I,EAG3BmD,OAAS,SAACC,GACN,OAAOA,EAAS1jB,KAAI,SAAC2jB,EAAUjc,GAC3B,OAAQ,wBAAIxH,IAAK,MAAQwH,GAAQ,EAAKkc,UAAUD,Q,EAIxDC,UAAY,SAACD,GACT,OAAOA,EAAS3jB,KAAI,SAAC6jB,EAASnc,GAC1B,MACoB,MAAjBmc,EAAQ1jB,KAAiB,wBAAItB,UAAU,gBAAgBqB,IAAK,UAAYwH,EAAOoc,QAAWD,EAAQC,QAASpO,QAAWmO,EAAQnO,SAAUmO,EAAQrlB,OACvH,wBAAIK,UAAU,gBAAgBqB,IAAK,UAAYwH,EAAOoc,QAAWD,EAAQC,QAASpO,QAAWmO,EAAQnO,SAAUmO,EAAQrlB,W,uDAKvJ,OACI,2BAAOK,UAAY,aAAanB,GAAMC,KAAKL,MAAMI,GAAIG,MAAO,CAACwB,MAAO1B,KAAKL,MAAM+B,QAC3E,kCACM1B,KAAK2lB,YAAY3lB,KAAKL,MAAMimB,SAEX,OAApB5lB,KAAKL,MAAMymB,WAAqC/d,IAApBrI,KAAKL,MAAMymB,KAAsB,+BAAQpmB,KAAKL,MAAMymB,MAAgB,gCACnG,+BACMpmB,KAAK6lB,QAAQ7lB,KAAKL,MAAM0mB,SAEL,OAAtBrmB,KAAKL,MAAM2mB,aAAyCje,IAAtBrI,KAAKL,MAAM2mB,OAAwB,+BAAQtmB,KAAKL,MAAM2mB,QAAkB,qC,GA7CrGxlB,IAAMC,WCkBpBwlB,ICnBiBzlB,IAAMC,UDCVD,IAAMC,U,kDAmBvB,WAAYpB,GAAS,IAAD,8BAChB,cAAMA,IAMR6mB,WAAa,SAAC7mB,GACV2E,QAAQC,IAAI5E,GAEZ,EAAKA,MAAMyB,KAAKiB,KAAI,SAACE,EAAK2Z,GACnBvc,EAAMgN,SAAWpK,EAAIoK,OAEyB,OAA1C7F,SAASC,eAAepH,EAAMgN,UAC7B7F,SAASC,eAAepH,EAAMgN,QAAQzM,MAAM2S,QAAU,QAGtD,EAAKlT,MAAM8mB,SAAS9mB,IAImB,OAAxCmH,SAASC,eAAexE,EAAIoK,cAA4DtE,IAAxCvB,SAASC,eAAexE,EAAIoK,UAC3E7F,SAASC,eAAexE,EAAIoK,QAAQzM,MAAM2S,QAAU,YAtBlD,EA4BlB6T,WAAa,SAACla,GACVlI,QAAQC,IAAIiI,GAEZ,EAAK7M,MAAMwG,QAAQqG,IA7BrB,EAAK5M,MAAQ,GAFG,E,qDAiCP,IAAD,OAEN,OACI,kBAAC,IAAMyK,SAAP,KACI,kBAAC,GAAD,KACA,yBAAKnJ,UAAU,iBACX,4BAEQlB,KAAKL,MAAMyB,KAAKiB,KAAI,SAACC,EAAMC,GACvB,OACA,wBAAIA,IAAK,gBAAkBA,EAAKxC,GAAI,WAAauC,EAAKqK,OAAQ1M,QAAS,EAAKumB,WAAW7f,KAAK,EAAMrE,IAC9F,yBAAKpB,UAAU,wBAAwBoB,EAAKoc,QAC5C,kBAAC,EAAD,CAAYvd,QAAQ,0BAA0BpB,GAAG,WAAWE,QAAS,EAAKymB,WAAW/f,KAAK,EAAMrE,iB,GA9C9GxB,IAAMC,YE2Cb4lB,G,kDA7Dd,WAAYhnB,GAAQ,IAAD,8BAClB,cAAMA,IAGPM,QAAU,SAACqB,GACVA,EAAEgF,OAAOsgB,cAAcC,cAAc,8BAA8BC,UAAUC,OAAO,6BACpFzlB,EAAEgF,OAAOwgB,UAAUC,OAAO,8BANR,EAQnBC,aAAe,WACd1iB,QAAQC,IAAI,gBACZ,EAAK5E,MAAMsc,QAAQ5Z,KAAI,SAACC,GACvB,MAAO,CACNC,IAAMD,EAAKvC,GACXknB,SAAW3kB,EAAK4kB,QAChBjkB,MAAQX,EAAKzB,MACb8S,KAAO,EAAKhU,MAAMsc,QAAQ3P,QAAO,SAAAqH,GAAI,OAAIA,EAAKuT,UAAY5kB,EAAKvC,UAE9DyQ,SAAQ,SAAClO,GACX,IAAI6kB,EAAO,KACPC,EAAOtgB,SAAS0b,cAAc,QAC9B6E,EAAKvgB,SAAS0b,cAAc,MAC5B8E,EAAKxgB,SAAS0b,cAAc,MAC5BlgB,EAAKqR,KAAKvI,OAAS,GACtBgc,EAAKG,UAAYjlB,EAAKW,MACtBmkB,EAAKlmB,UAAY,sBACjBkmB,EAAKI,QAAU,EAAKvnB,QAEpBonB,EAAGtnB,GAAKuC,EAAKC,IACb8kB,EAAGnmB,UAAY,6BAEfimB,EAAOG,GACF1E,YAAYwE,GACjBD,EAAKvE,YAAYyE,GACK,SAAlB/kB,EAAK2kB,SACRngB,SAASC,eAAe,EAAKpH,MAAMI,IAAI6iB,YAAYuE,GAEnDrgB,SAASC,eAAezE,EAAK2kB,UAAUrE,YAAYuE,MAGpDA,EAAOG,GACFC,UAAYjlB,EAAKW,MACA,SAAlBX,EAAK2kB,SACRngB,SAASC,eAAe,EAAKpH,MAAMI,IAAI6iB,YAAYuE,GAEnDrgB,SAASC,eAAezE,EAAK2kB,UAAUrE,YAAYuE,QA1CtD,EAAKlnB,QAAU,EAAKA,QAAQ0G,KAAb,gBAFG,E,gEAkDlB3G,KAAKgnB,iB,+BAGL,OACC,yBAAK9lB,UAAU,mBACd,wBAAIA,UAAU,qBAAqBnB,GAAIC,KAAKL,MAAMI,U,GAxDnCe,IAAMC,WCCV0mB,eAAiB,CAAE5Y,cCFnB6Y,GCEG,WAEjB,IAAMC,EAAWxF,OAAOyF,8BAAgCzF,OAAOyF,+BAG/D,OAFcC,YAAY3M,GAASyM,GDLrBD,GESTlT,GAAa,CAClB5P,UAAW,CACV6P,KAAM,CACLhN,KAAM,IACNpC,OAAQ,IACRsP,OAAQ,IACRmB,QAAS,IACT7O,OAAQ,KAET6gB,SAAU,CACT5V,OAAQ,oBAET6Q,IAAK,CACJC,OAAS,SACT+E,OAAS,QACTC,OAAS,SACTC,QAAU,YAEXC,OAAQ,CACPC,SAAU,CACTC,IAAK,IACLF,OAAQ,IACRG,KAAM,QAKJrkB,GAAS,CACd6a,SAAU,SAACyJ,GACAxhB,SAAS0b,cAAc,OAC7BziB,GAAKuoB,EACThI,IAAS4C,OAAQ,uCACfpc,SAASC,eAAeuhB,KAE3BxkB,OAAQ,SAAC4T,GACR,QAAmBrP,WAARqP,GAA6B,OAARA,EAAc,OAAO,GAEtD6Q,OAAQ,SAACnnB,GACR,IAEC,MAAwB,kBADbonB,KAAKC,MAAMrnB,GAErB,MAAOE,GACR,OAAO,IAGTonB,WAAY,SAAC3oB,EAAI2X,GACG,kBAARA,EACViR,eAAeC,QAAQ7oB,EAAIyoB,KAAKK,UAAUnR,IAE1CiR,eAAeC,QAAQ7oB,EAAI2X,IAG7BoR,WAAY,SAAC/oB,GACZ,OAAIiE,GAAOukB,OAAOI,eAAeI,QAAQhpB,IACjCyoB,KAAKC,MAAME,eAAeI,QAAQhpB,IAElC4oB,eAAeI,QAAQhpB,IAGhCipB,cAAgB,SAACze,GAChB,IAAI0e,EAAS,GAKb,OAJgBrf,OAAOsf,oBAAoB3e,GACjClI,KAAI,SAAC8mB,GACdF,EAAO3R,KAAK,CAAE9M,WAAaD,EAAO4e,GAAS1e,MAAQ0e,OAE7CF,GAERhlB,WAAa,SAACzB,EAAM4mB,EAAKpkB,GACxB,QAAkEqD,IAA7DvB,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,SAAsF,OAA7Dlc,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,QAAmB,CAClJ,IAAIC,EAASnc,SAAS0b,cAAc,OACpCS,EAAOljB,GAAKyU,GAAW5P,UAAUme,IAAIC,OACrClc,SAAS6b,KAAKC,YAAYK,GAE3B,GAAa,MAATzgB,EAAc,CACjB,QAAwB6F,WAAbrD,GAA8C,oBAAbA,EAC3C,OAAO,EAERsb,IAAS4C,OAAQ,kBAACmG,EAAOzb,cAAR,CAAsBlH,MAAM,EAAMiH,QAASyb,EAAMtb,YAAe9I,EACzEmB,QAAU,WAAQW,SAAS6b,KAAKE,YAAY/b,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,YACnGlc,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,cAEnD1C,IAAS4C,OAAQ,kBAACmG,EAAOrc,YAAR,CAAsBtG,MAAM,EAAMiH,QAASyb,EACpDjjB,QAAU,WAAQW,SAAS6b,KAAKE,YAAY/b,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,YACnGlc,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIC,UAGrDsG,QAAU,SAACzkB,EAAKX,EAAM/B,EAASonB,GAC9B,IAAIC,EAAY5f,OAAOmB,OAAOjE,SAAS6b,KAAKjF,UAAUpR,QACrD,SAAAmd,GAAG,MAAoB,QAAhBA,EAAIC,WACVpd,QACD,SAAAhK,GAAI,OAAIA,EAAKvC,GAAG4pB,UAAU,EAAGnV,GAAW5P,UAAUme,IAAIgF,OAAO3c,UAAYoJ,GAAW5P,UAAUme,IAAIgF,UAG/F6B,EAAS9iB,SAAS0b,cAAc,OAChCrf,EAAW,CAACiK,EAAG,EAAGC,EAAG,GACA,IAArBmc,EAAUpe,OACbwe,EAAO7pB,GAAKyU,GAAW5P,UAAUme,IAAIgF,OAAS,QAAUyB,EAAUpe,QAElEwe,EAAO7pB,GAAKyU,GAAW5P,UAAUme,IAAIgF,OAAS,SAAWhS,OAAOyT,EAAUA,EAAUpe,OAAS,GAAGrL,GAAG8pB,OAAQrV,GAAW5P,UAAUme,IAAIgF,OAAO3c,OAAS,QAAQA,SAAY,GAAG8V,WAC3K/d,EAAW,CAAEiK,EAAuB,GAAnBoc,EAAUpe,OAAciC,EAAsB,GAAnBmc,EAAUpe,SAEvDtE,SAAS6b,KAAKC,YAAYgH,GAE1BtJ,IAAS4C,OACR,kBAAC,IAAD,CAAU4G,MAAOA,IAChB,kBAACT,EAAOrb,YAAR,CACChH,WAAc4iB,EAAO7pB,GACrB2G,MAAM,EACN7B,IAAKA,EACLX,KAAMA,EACNoK,SAAUnM,EAAQmM,SAClBnL,SAAYA,EACZhB,QAASA,EACTgM,eAAgBob,EAChBpjB,QACC,WACC,OAAO,IAAI4jB,SAAU,SAACC,EAASC,GAC9B,IACC,GAAgC,oBAArB9nB,EAAQ6C,SAClB,IACC7C,EAAQ6C,WACP,MAAOc,GACRmkB,EAAOnkB,GAGTkkB,IACC,MAAO/K,GACRgL,EAAOhL,OAENiL,MAAK,WACPpjB,SAAS6b,KAAKE,YAAY+G,MACxBO,OAAM,SAAUlL,GAClB3a,QAAQC,IAAI0a,UAMhB2K,IAEHQ,WAAa,SAACC,GACb,IAAIC,EAAe1gB,OAAOmB,OAAOjE,SAAS6b,KAAKjF,UAAUpR,QACxD,SAAAmd,GAAG,MAAoB,QAAhBA,EAAIC,WACVpd,QACD,SAAAhK,GAAI,OAAIA,EAAKvC,GAAG4pB,UAAU,EAAGnV,GAAW5P,UAAUme,IAAIiF,OAAO5c,UAAYoJ,GAAW5P,UAAUme,IAAIiF,UAE/F4B,EAAS9iB,SAAS0b,cAAc,OAER,IAAxB8H,EAAalf,OAChBwe,EAAO7pB,GAAKyU,GAAW5P,UAAUme,IAAIgF,OAAS,QAAUuC,EAAalf,QAErEwe,EAAO7pB,GAAKyU,GAAW5P,UAAUme,IAAIgF,OAAS,SAAWhS,OAAOuU,EAAaA,EAAalf,OAAS,GAAGrL,GAAG8pB,OAAQrV,GAAW5P,UAAUme,IAAIgF,OAAO3c,OAAS,QAAQA,SAAY,GAAG8V,WAChKoJ,EAAalf,OAAiBkf,EAAalf,QAE7DtE,SAAS6b,KAAKC,YAAYgH,IA4C3BW,gBAAiB,SAACC,GACjB,IAAIC,EAAe,GACnB,OAAI5mB,GAAOC,OAAO6kB,eAAeI,QAAQ,gBAAyB0B,GAClEA,EAAejC,KAAKC,MAAME,eAAeI,QAAQ,iBAC7Bzc,QAAO,SAAAhK,GAAI,OAAIA,EAAKooB,cAAgBF,MAazDG,cAAe,SAACC,EAAWC,GAC1B,IAAIC,EAAS,GACTC,EAAY/mB,GAAO8kB,WAAW,iBAElC,GAAyB,kBAAdiC,EACV,IAAK,IAAIlH,EAAM,EAAGA,EAAMkH,EAAU3f,OAAQyY,IACrCkH,EAAUlH,GAAKmH,UAAYJ,IAE7BE,EAD6B,MAA1BC,EAAUlH,GAAKoH,OACTF,EAAUlH,GAAKgH,GAEH,WAAjBA,EAAoC,IAC1B,IAKlB,OAAOC,GAGRI,cAAe,WACd,IAAIC,EAAM,GACNC,EAAUpnB,GAAO2mB,cAAc,QAAS,WAG5C,OAFK9mB,GAAOC,OAAOsnB,KAClBD,EAAOnnB,GAAO8kB,WAAW,WAAWxc,QAAO,SAAAhK,GAAI,OAAIA,EAAKqK,SAAWye,KAAU,IACvED,GAURE,WAAY,SAAC3T,EAAK4T,EAActmB,GAC/B0S,EAAIjR,UAAS,SAAC7G,GAAY,OAAOmI,GAAQwjB,eAAe3rB,EAAO0rB,EAAc1rB,EAAM0rB,GAAc9iB,YAAa,WACrF,oBAAbxD,GAAyBA,QActC6B,cAAe,SAAC6Q,EAAK4T,EAAcE,EAAWC,EAAaC,EAAU1mB,GACpE0S,EAAIjR,UAAS,SAAC7G,GAAY,OAAOmI,GAAQ4jB,aAAa/rB,EAAO0rB,EAAcE,EAAWC,EAAaC,MAAc,WACxF,oBAAb1mB,GAAyBA,QAYtCuD,gBAAiB,SAACmP,EAAK4T,EAAcM,EAAY5mB,GAChD0S,EAAIjR,UAAS,SAAC7G,GAAY,OAAOmI,GAAQwjB,eAAe3rB,EAAO0rB,EAAcM,MAAgB,WACrE,oBAAb5mB,GAAyBA,QAYrC6mB,oBAAqB,SAACnU,EAAK4T,EAAcM,GACxClU,EAAIjR,UAAS,SAAC7G,GAAY,OAAOmI,GAAQ+jB,gBAAgBlsB,EAAO0rB,EAAcM,OAW/EG,cAAe,SAACH,EAAYI,GAC3B,IAAIC,EAAM,GACNL,EAAWxgB,OAAS,IACnB4gB,IAASxX,GAAW5P,UAAUsjB,OAAOC,SAASC,IACjD6D,EAAI3U,KAAK,CAACzW,MAAO,GAAIqD,KAAM,iBACjB8nB,IAASxX,GAAW5P,UAAUsjB,OAAOC,SAASD,QACxD+D,EAAI3U,KAAK,CAACzW,MAAO,GAAIqD,KAAM,kBAG7B,IAAK,IAAI6F,EAAQ,EAAGA,EAAQ6hB,EAAWxgB,OAAQrB,IAC9CkiB,EAAI3U,KAAK,CAACzW,MAAO+qB,EAAW7hB,GAAX,KAA2B7F,KAAM0nB,EAAW7hB,GAAX,UAEnD,OAAOkiB,GAWRC,WAAY,SAACC,EAAOH,GACnB,IAAII,EAAS,GACTC,EAASroB,GAAO8kB,WAAW,cAAcxc,QAAO,SAAA8c,GAAG,OAAIA,EAAIkD,SAAWH,KAI1E,GAHwBC,EAAH,GAAjBC,EAAOjhB,OAAsB,oBACnBihB,EAAO,GAAGE,cAEZlkB,GAAR2jB,GAAqBA,EAAKQ,eAAe,UAC5C,IAAK,IAAI3I,EAAM,EAAGA,EAAMmI,EAAK5gB,OAAQyY,IACpCuI,EAASA,EAAO/Y,QAAQ,IAAMwQ,EAAM,IAAKmI,EAAKnI,IAGhD,OAAOuI,GAGRK,eAAgB,WACf,IAAIC,EAAclE,KAAKC,MAAMkE,aAAa5D,QAAQ,UAC9C2D,EAAYE,KAAKC,MAAQ1K,OAAO7Z,SAASwkB,UAC5C9oB,GAAO0kB,WAAW,YAAa,KAC/B1kB,GAAO0kB,WAAW,UAAW,UAAYgE,EAAYE,KAAKC,KAAO,IAAMH,EAAYE,KAAKG,OAC9EL,EAAYM,IAAIH,MAAQ1K,OAAO7Z,SAASwkB,UAClD9oB,GAAO0kB,WAAW,YAAa,KAC/B1kB,GAAO0kB,WAAW,UAAW,UAAYgE,EAAYM,IAAIH,KAAO,IAAMH,EAAYM,IAAID,MACtFjmB,SAASmmB,MAAQ,eACPP,EAAYQ,WAAWL,MAAQ1K,OAAO7Z,SAASwkB,UACzD9oB,GAAO0kB,WAAW,YAAa,KAC/B1kB,GAAO0kB,WAAW,UAAW,UAAYgE,EAAYQ,WAAWL,KAAO,IAAMH,EAAYQ,WAAWH,MACpGjmB,SAASmmB,MAAQ,kBAEjBjpB,GAAO0kB,WAAW,YAAa,KAC/B1kB,GAAO0kB,WAAW,UAAW,UAAYgE,EAAYS,MAAMN,KAAO,IAAMH,EAAYS,MAAMJ,MAC1FjmB,SAASmmB,MAAQ,kBAInB5N,YAAa,WACZ,OAAOrb,GAAO8kB,WAAW,gBAE1BnJ,YAAa,SAACyN,GACb,IAAIC,EAAcrpB,GAAO8kB,WAAW,eAGpC,OAFKjlB,GAAOC,OAAOspB,EAAMhmB,SAAS,EAAG,cACpCimB,EAAcrpB,GAAO8kB,WAAW,eAAexc,QAAO,SAAAhK,GAAI,OAAIA,EAAKmd,UAAY2N,EAAMhmB,SAAS,EAAG,eAC3FimB,GAERrN,YAAa,SAACoN,EAAOE,GAChBtpB,GAAOF,OAAOwpB,KAAYA,GAAY,GAE1C,IAAIC,EAAavpB,GAAO8kB,WAAW,eAQnC,OAPKjlB,GAAOC,OAAOspB,EAAMhmB,SAAS,EAAG,cACpCmmB,EAAaA,EAAWjhB,QAAO,SAAAhK,GAAI,OAAIA,EAAKmd,UAAY2N,EAAMhmB,SAAS,EAAG,eACtEvD,GAAOC,OAAOspB,EAAMhmB,SAAS,EAAG,cACpCmmB,EAAaA,EAAWjhB,QAAO,SAAAhK,GAAI,OAAIA,EAAKwd,UAAYsN,EAAMhmB,SAAS,EAAG,eACvEkmB,IACHC,EAAaA,EAAWjhB,QAAO,SAAAkhB,GAAG,MAAmB,MAAfA,EAAIC,WAEpCF,IAIH1pB,GAAS,CAQdC,OAAQ,SAAC4pB,GAER,OADAA,EAAS7pB,GAAO8pB,QAAQD,GACS,cAA7BE,OAAOF,GAAQG,YACc,SAA7BD,OAAOF,GAAQG,YACc,KAA7BD,OAAOF,GAAQG,YACJ,OAAXH,IACW,KAAXA,IACY,KAAXA,GAAuD,cAApCE,OAAOF,EAAOtiB,QAAQyiB,WACxB,IAAlBH,EAAOtiB,aAcX0iB,OAAQ,SAACC,EAAMC,EAAOC,GACtB,OAAIpqB,GAAOC,OAAOiqB,IAASlqB,GAAOC,OAAOkqB,IAAkB,GACvDnqB,GAAOC,OAAOmqB,KAAWA,EAAS,GAC/BF,EAAKrhB,QAAQshB,EAAOC,KAa5BC,WAAY,SAACH,EAAMC,EAAOC,GACzB,OAAIpqB,GAAOC,OAAOiqB,IAASlqB,GAAOC,OAAOkqB,IAAkB,GACvDnqB,GAAOC,OAAOmqB,KAAWA,EAAS,GAC/BF,EAAKI,cAAczhB,QAAQshB,EAAMG,cAAeF,KAaxDG,cAAe,SAACL,EAAMC,EAAOC,GAC5B,GAAIpqB,GAAOC,OAAOiqB,IAASlqB,GAAOC,OAAOkqB,GAAU,OAAQ,EAG3D,IAAIK,EACJ,IAHIxqB,GAAOC,OAAOmqB,KAAWA,EAASF,EAAK3iB,OAAO,GAG7CijB,EAAMJ,EAAQI,GAAO,GACrBN,EAAKlE,OAAOwE,EAAKL,EAAM5iB,UAAY4iB,EADXK,KAI7B,OAAOA,GAaRC,kBAAmB,SAACP,EAAMC,EAAOC,GAChC,GAAIpqB,GAAOC,OAAOiqB,IAASlqB,GAAOC,OAAOkqB,GAAU,OAAQ,EAG3D,IAAIK,EACJ,IAHIxqB,GAAOC,OAAOmqB,KAAWA,EAASF,EAAK3iB,OAAO,GAG7CijB,EAAMJ,EAAQI,GAAO,GACrBN,EAAKlE,OAAQwE,EAAKL,EAAM5iB,QAAS+iB,gBAAkBH,EAAMG,cADjCE,KAI7B,OAAOA,GAaRE,WAAY,SAAER,EAAMS,EAAUC,GAC7B,GAAI5qB,GAAOC,OAAOiqB,GAAO,MAAO,GAChC,GAAIlqB,GAAOC,OAAO0qB,GAAW,OAAOT,EACpC,GAAIlqB,GAAOC,OAAO2qB,GAAS,OAAOV,EAGlC,IADA,IAAIM,EAAKJ,EAAS,EAAGS,EAAO,KAClB,CAET,IADAL,EAAMxqB,GAAOiqB,OAAOC,EAAMS,EAAUP,IAC1B,EAAG,CACZS,GAAQX,EAAKlE,OAAOoE,GACpB,MAEAS,GAAQX,EAAKlE,OAAOoE,EAAQI,EAAMJ,GAClCS,GAAQD,EACRR,EAASI,EAAMG,EAASpjB,OAG1B,OAAOsjB,GAaRC,eAAgB,SAAEZ,EAAMS,EAAUC,GACjC,GAAI5qB,GAAOC,OAAOiqB,GAAO,MAAO,GAChC,GAAIlqB,GAAOC,OAAO0qB,GAAW,OAAOT,EACpC,GAAIlqB,GAAOC,OAAO2qB,GAAS,OAAOV,EAGlC,IADA,IAAIM,EAAKJ,EAAS,EAAGS,EAAO,KAClB,CAET,IADAL,EAAMxqB,GAAOqqB,WAAWH,EAAMS,EAAUP,IAC9B,EAAG,CACZS,GAAQX,EAAKlE,OAAOoE,GACpB,MAEAS,GAAQX,EAAKlE,OAAOoE,EAAQI,EAAMJ,GAClCS,GAAQD,EACRR,EAASI,EAAMG,EAASpjB,OAG1B,OAAOsjB,GAWRE,SAAU,SAACC,GACV,IAAIC,EAASjrB,GAAOkrB,UAAUF,GAC9B,GAAIC,EAAO1jB,OAAS,EAAG,MAAO,GAM9B,OAHKyB,SAASiiB,EAAOjF,OAAO,EAAG,GAAI,IAAI,IAAO,EAAc,IAC5C,KAejBmF,QAAS,SAACjB,EAAMkB,EAAMC,GACrB,GAAIrrB,GAAOC,OAAOiqB,GAAO,MAAO,GAC5BlqB,GAAOC,OAAOmrB,KAAOA,EAAO,KAC5BprB,GAAOC,OAAOorB,KAAOA,EAAO,GAGhC,IADA,IAAIR,EAAO,GACFxS,EAAI,EAAGA,EAAIgT,EAAMhT,IACzBwS,GAAQO,EAGT,OAAOP,EAAQX,GAahBoB,QAAQ,SAACpB,EAAMkB,EAAMC,GACpB,GAAIrrB,GAAOC,OAAOiqB,GAAO,MAAO,GAC5BlqB,GAAOC,OAAOmrB,KAAOA,EAAO,KAC5BprB,GAAOC,OAAOorB,KAAOA,EAAO,GAGhC,IADA,IAAIR,EAAO,GACFxS,EAAI,EAAIA,EAAIgT,EAAOhT,IAC3BwS,GAAQO,EAGT,OAAOlB,EAAOW,GAcfU,SAAU,SAACrB,EAAMsB,GAChB,OAAIxrB,GAAOC,OAAOiqB,IAASlqB,GAAOC,OAAOurB,GAAe,GACpDtB,EAAK3iB,OAASikB,EAActB,EACpBA,EAAKlE,OAAOkE,EAAK3iB,OAASikB,EAAOA,IAW9CC,QAAS,SAACC,GACT,GAAI1rB,GAAOC,OAAOyrB,GAAO,OAAQ,EAGjC,IADA,IAAIC,EAAM,EACDtT,EAAI,EAAGA,EAAIqT,EAAKnkB,OAAQ8Q,IAC5BqT,EAAKE,WAAWvT,GAAK,IAAKsT,GAAO,EAChCA,GAAO,EAEb,OAAOA,GAWRE,SAAU,SAACH,GACV,GAAI1rB,GAAOC,OAAOyrB,GAAO,OAAQ,EAGjC,IADA,IAAIC,EAAM,EACDtT,EAAI,EAAGA,EAAIqT,EAAKnkB,OAAQ8Q,IAC5BqT,EAAKE,WAAWvT,GAAK,IAAKsT,GAAO,EAChCA,GAAO,EAEb,OAAOA,GAkBRG,aAAc,SAACC,GACd,GAAI/rB,GAAOC,OAAO8rB,GAAQ,MAAO,GAGjC,IADA,IAAIC,EAAQ,GACH3T,EAAI,EAAGA,EAAI0T,EAAMxkB,OAAQ8Q,IAAK,CACtC,IAAI6I,EAAI6K,EAAMH,WAAWvT,GACR2T,GAAP,QAAN9K,EAAsB+K,SAAS,OACzB/K,GAAK,OAAWA,GAAK,MAAiB+K,SAAS,KAAK/K,EAAE,OAAO7D,SAAS,KAClE0O,EAAMG,OAAO7T,GAE5B,OAAQ2T,GAWTG,aAAc,SAACH,GACd,GAAIhsB,GAAOC,OAAO+rB,GAAQ,MAAO,GAIjC,IAFA,IAAII,EAAO,GACPC,EAAO,GACFhU,EAAI,EAAGA,EAAI2T,EAAMzkB,OAAQ8Q,IAGAgU,EAD5BL,EAAMJ,WAAWvT,IAAM,IAAQ2T,EAAMJ,WAAWvT,IAAM,IAC9B,KAAxB2T,EAAMJ,WAAWvT,GAAkB4T,SAAS,KAAM,OAAO5O,SAAS,KAC1D2O,EAAMJ,WAAWvT,GAAK,MAE3B2T,EAAMJ,WAAWvT,GAGG,KAAxB2T,EAAMJ,WAAWvT,GAAW+T,GAAeC,EAC1CD,GAAQrC,OAAOuC,aAAaD,GAGlC,OAAOD,GAWRG,MAAO,SAACC,GACP,GAAIxsB,GAAOC,OAAOusB,GAAO,OAAO,EAIhC,IAFA,IAAIC,EAAY,EACZC,GAAM,EACDrU,EAAI,EAAGA,EAAImU,EAAKjlB,OAAQ8Q,IAAK,CACrC,IAAI6I,EAAIsL,EAAKN,OAAO7T,GACpB,GAAU,IAANA,GAAkB,MAAN6I,GAAmB,MAANA,EACxB,GAAIA,GAAK,KAAOA,GAAK,SACrB,IAAU,MAANA,EAMF,CACNwL,GAAM,EACN,MANA,KADAD,EACgB,EAAG,CAClBC,GAAM,EACN,aAOH,OAAOA,GAWRC,QAAS,SAACjB,GACT,OAAI1rB,GAAOC,OAAOyrB,MACdA,EAAKkB,OAAO,cAAgB,IAYjCC,QAAS,SAACnB,GACT,OAAI1rB,GAAOC,OAAOyrB,MACdA,EAAKkB,OAAO,iBAAmB,IAYpCE,MAAO,SAACpB,GACP,GAAI1rB,GAAOC,OAAOyrB,GAAO,OAAO,EAChC,IAAK,IAAIrT,EAAI,EAAGA,EAAIqT,EAAKnkB,OAAQ8Q,IAChC,KAAOqT,EAAKE,WAAWvT,GAAK,OAAUqT,EAAKE,WAAWvT,GAAK,OAAYqT,EAAKE,WAAWvT,IAAM,OAAUqT,EAAKE,WAAWvT,IAAM,OAAU,OAAO,EAE/I,OAAO,GAWRyR,QAAS,SAACiD,GACT,IAAIC,EAAM,IAAIjD,OAAOgD,GACrB,OAAY,OAARC,GAAwB,SAARA,GACc,cAA9B,IAAIjD,OAAOiD,GAAKhD,WACG,MAAnB,IAAID,OAAOiD,GAF4B,GAGpCA,EAAIxd,QAAQ,iBAAkB,KAWtC0b,UAAW,SAACrB,GACX,GAA+B,KAA3B7pB,GAAO8pB,QAAQD,GAAgB,MAAO,GAC1CA,EAAS7pB,GAAO8pB,QAAQD,GAIxB,IAFA,IAAIoD,EAAU,GAEL5U,EAAI,EAAGA,EAAEwR,EAAOtiB,OAAQ8Q,IADtB,aAEDxP,QAAQghB,EAAOqC,OAAO7T,KAAO,IAAG4U,GAAWpD,EAAOqC,OAAO7T,IAEnE,OAAO4U,IA0GH7nB,GAAU,CASf8nB,eAAgB,SAACC,GAEhB,IAAIC,EAEJ,MAHoB,iBAATD,IAAmBA,EAAQ,IAAIpD,OAAOoD,IAG7CntB,GAAOC,OAAOktB,IAAgB,EAGnB,KADfC,EAASpkB,SAASmkB,EAAMnH,OAAO,EAAE,GAAI,MACN,IAAXoH,GAA2B,IAAXA,GAA2B,IAAXA,GAA4B,IAAXA,GAA2B,KAAXA,GAA4B,KAAXA,EACzF,GACS,IAAXA,GACyB,IAA9BhoB,GAAQioB,WAAWF,GAA8B,GACrC,GAEL,IAcdE,WAAY,SAACF,GAEZ,IAASG,EAET,MAHoB,iBAATH,IAAmBA,EAAQ,IAAIpD,OAAOoD,KAG7CntB,GAAOC,OAAOktB,MAElBG,EAAKtkB,SAASmkB,EAAMrH,UAAU,EAAE,GAAI,KAC1B,IAAO,IACXwH,EAAK,MAAS,GAAMA,EAAK,MAAS,KAgBzCC,YAAa,SAACJ,GAEb,GADoB,iBAATA,IAAmBA,EAAQ,IAAIpD,OAAOoD,IAC7CntB,GAAOC,OAAOktB,GAAQ,MAAO,GACjC,IAAIK,EAAYpoB,GAAQ8nB,eAAeC,GACvC,OAAOA,EAAMnH,OAAO,EAAE,GAAKwH,EAAUnQ,YAYtCoQ,WAAY,SAACN,EAAOO,GAGnB,GAFoB,iBAATP,IAAmBA,EAAQ,IAAIpD,OAAOoD,IAE7CntB,GAAOC,OAAOktB,IAAUntB,GAAOC,OAAOytB,GAAU,MAAO,GAE3D,IAAIC,EAAQ3kB,SAASmkB,EAAMnH,OAAO,EAAG,IACjCoH,EAASpkB,SAASmkB,EAAMnH,OAAO,EAAG,IAClC4H,EAAQ5kB,SAASmkB,EAAMnH,OAAO,EAAG,IAAM0H,EAEvCG,EAAU,IAAI5f,KAAK0f,EAAOP,EAAS,EAAGQ,GAM1C,OAJYC,EAAQC,cAAczQ,WACrBrd,GAAOurB,SAAS,KAAOsC,EAAQE,WAAa,GAAI,GAClD/tB,GAAOurB,SAAS,IAAKsC,EAAQG,UAAW,IAgBpDC,YAAa,SAACd,EAAOO,GAGpB,GAFoB,iBAATP,IAAmBA,EAAQ,IAAIpD,OAAOoD,IAE7CntB,GAAOC,OAAOktB,IAAUntB,GAAOC,OAAOytB,GAAU,MAAO,GAC3DP,EAAQntB,GAAO8pB,QAAQqD,GAEvB,IAIIK,EAAW3C,EAJX8C,EAAS3kB,SAASmkB,EAAMnH,OAAO,EAAG,IAClCoH,EAAUpkB,SAASmkB,EAAMnH,OAAO,EAAG,IAAM0H,EACzCE,EAAS5kB,SAASmkB,EAAMnH,OAAO,EAAG,IAIlC6H,EAAU,IAAI5f,KAAK0f,EAAOP,EAAQQ,GAKtC/C,EAHYgD,EAAQC,cAAczQ,WACrBrd,GAAOurB,SAAS,KAAOsC,EAAQE,WAAa,GAAI,GAClD/tB,GAAOurB,SAAS,IAAKsC,EAAQG,UAAW,GAGnD,IAAIE,EAAUllB,SAAS6hB,EAAK7E,OAAO,EAAG,IAOtC,OANAwH,EAAYpoB,GAAQ8nB,eAAerC,GACnCA,EAAOA,EAAK7E,OAAO,EAAE,GAEG6E,GAApBqD,EAASV,EAAmBA,EAAUnQ,WAC5Brd,GAAOurB,SAAS,IAAM2C,EAAQ,GAAI7Q,YAYjDhY,SAAU,WACT,IAAIwoB,EAAU,IAAI5f,KACdkgB,EAAUN,EAAQC,cAAczQ,WAIpC,OAHA8Q,GAAUnuB,GAAOurB,SAAS,KAAOsC,EAAQE,WAAa,GAAI,GAC1DI,GAAUnuB,GAAOurB,SAAS,IAAMsC,EAAQG,UAAW,IAYpDI,aAAc,WACb,IAAIP,EAAU,IAAI5f,KACdkgB,EAAUN,EAAQC,cAAczQ,WAOpC,OANA8Q,GAAUnuB,GAAOurB,SAAS,KAAOsC,EAAQE,WAAa,GAAI,GAC1DI,GAAUnuB,GAAOurB,SAAS,IAAMsC,EAAQG,UAAW,GACnDG,GAAUnuB,GAAOurB,SAAS,IAAMsC,EAAQQ,WAAY,GACpDF,GAAUnuB,GAAOurB,SAAS,IAAMsC,EAAQS,aAAc,GACtDH,GAAUnuB,GAAOurB,SAAS,IAAMsC,EAAQU,aAAc,IAevDC,YAAa,SAACC,EAAYC,GAGzB,GAFAD,EAAazuB,GAAO8pB,QAAQ2E,GAC5BC,EAAW1uB,GAAO8pB,QAAQ4E,GACtB1uB,GAAOC,OAAOwuB,IAAezuB,GAAOC,OAAOyuB,GAAW,MAAO,GAEjE,IAAIC,EAAY,IAAI1gB,KAAKjF,SAAS0lB,EAAS5I,UAAU,EAAE,GAAK,IAAK9c,SAAS0lB,EAAS5I,UAAU,EAAE,GAAG,EAAI,IAAK9c,SAAS0lB,EAAS5I,UAAU,EAAE,GAAI,KACzI8I,EAAU,IAAI3gB,KAAKjF,SAASylB,EAAW3I,UAAU,EAAE,GAAK,IAAK9c,SAASylB,EAAW3I,UAAU,EAAE,GAAG,EAAI,IAAK9c,SAASylB,EAAW3I,UAAU,EAAE,GAAI,KAEjJ,OAAO9c,UAAU2lB,EAAYC,GAAb,QAcjBC,aAAc,SAACJ,EAAYC,GAC1B,IAAII,EAGJ,OAFAL,EAAazuB,GAAO8pB,QAAQ2E,GAC5BC,EAAW1uB,GAAO8pB,QAAQ4E,GACtB1uB,GAAOC,OAAOwuB,IAAezuB,GAAOC,OAAOyuB,GAAkBK,KAEjED,EAAoD,GAAxC9lB,SAASylB,EAAWzI,OAAO,EAAG,GAAI,IAAWhd,SAASylB,EAAWzI,OAAO,EAAG,GAAI,IAC3C,GAAtChd,SAAS0lB,EAAS1I,OAAO,EAAG,GAAI,IAAWhd,SAAS0lB,EAAS1I,OAAO,EAAG,GAAI,IAEnE8I,IAWnB5gB,cAAe,SAAC2f,GACf,GAAI7tB,GAAOC,OAAO4tB,GAAU,MAAO,GAEnC,IAAImB,EAAOnB,EAAQC,cACfmB,EAAS,EAAIpB,EAAQE,WACzBkB,EAAQA,GAAS,GAAKA,EAAQ,IAAMA,EACpC,IAAIC,EAAMrB,EAAQG,UAGlB,OAAOgB,EAAOC,GAFdC,EAAMA,GAAO,GAAKA,EAAM,IAAMA,IAa/BngB,cAAe,SAACoe,GACf,OAAIntB,GAAOC,OAAOktB,GAAe,GACZ,IAAjBA,EAAM5lB,OAAqB,IAAI0G,KAAKjF,SAASmkB,EAAMrH,UAAU,EAAG,IAAK9c,SAASmkB,EAAMrH,UAAU,EAAG,IAAM,EAAG9c,SAASmkB,EAAMrH,UAAU,EAAG,KAC9H,KAIR5hB,GAAU,CAaf4jB,aAAc,SAACxT,EAAWmT,EAAcE,EAAWC,EAAaC,GAC/D,IAAI0B,EAAQjV,EAAUmT,GAEtB,OADA8B,EAAM4F,SAASxH,EAAWC,EAAaC,GAChC,eAAEJ,EAAe8B,IAazB7B,eAAgB,SAACpT,EAAWmT,EAAcM,GACzC,IAAIwB,EAAQjV,EAAUmT,GAEtB,OADA8B,EAAM6F,WAAWrH,GACV,eAAEN,EAAe8B,IAYzBtB,gBAAiB,SAAC3T,EAAWmT,EAAcM,GAC1C,IAAIwB,EAAQjV,EAAUmT,GAEtB,OADA8B,EAAM8F,YAAYtH,GACX,eAAEN,EAAe8B,IAEzBplB,SAAU,CACTQ,QAAS,GACTkM,WAAY,GACZnK,OAAQ,GACR6Q,KAAM,WAAY,OAAOpb,KAAKwI,QAAQ4C,QACtC+nB,IAAK,SAASppB,GACb,OAAI/J,KAAKwI,QAAQ4C,OAAS,EAAUpL,KAAKwI,QAAQuB,GACrC,MAEbuK,WAAY,WACX,OAAOtU,KAAKwI,SAEbb,gBAAiB,WAIhB,IAHA,IAAIikB,EAAapD,KAAKC,MAAMD,KAAKK,UAAU7oB,KAAKwI,UAC5C4qB,EAAapzB,KAAK0U,WAEb2e,EAAO,EAAGA,EAAOzH,EAAWxgB,OAAQioB,IAC5C,IAAK,IAAIC,EAAO,EAAGA,EAAOF,EAAWhoB,OAAQkoB,IACxC1H,EAAWyH,GAAM9e,QAAU6e,EAAWE,GAAM/e,QAAOqX,EAAWyH,GAAME,QAAUH,EAAWE,IAG/F,OAAO1H,GAERqH,WAAY,SAASzqB,GACpBxI,KAAKwI,QAAUA,GAEhBgrB,cAAe,SAAShrB,GACvBxI,KAAKwI,QAAUxI,KAAKwI,QAAQ6D,OAAO7D,GACnCxI,KAAK0U,WAAa1U,KAAK0U,WAAWrI,OAAOmc,KAAKC,MAAMD,KAAKK,UAAUrgB,MAEpE0qB,YAAa,SAAS1qB,QAECH,IADtBG,EAAUA,GAAW,IACT4C,SACXpL,KAAKyzB,WAAWjrB,GAChBxI,KAAKwI,QAAUA,EACfxI,KAAK0U,WAAa8T,KAAKC,MAAMD,KAAKK,UAAUrgB,MAG9CpB,SAAU,SAAS2C,EAAO2J,GAAS,OAAO1T,KAAKwI,QAAQuB,GAAO2J,IAC9Dsf,SAAU,SAASjpB,EAAO2J,EAAQ7S,GACjCb,KAAKwI,QAAQuB,GAAO2J,GAAU7S,EAC9B,IAAI0T,EAAQvU,KAAKwI,QAAQuB,GAAOwK,MAChC,GAAmC,KAA/BvU,KAAKwI,QAAQuB,GAAO2pB,SAAiD,KAA/B1zB,KAAKwI,QAAQuB,GAAO2pB,QAC7D,IAAK,IAAI7P,EAAM,EAAGA,EAAM7jB,KAAK0U,WAAWtJ,OAAQyY,IAC3C7jB,KAAK0U,WAAWmP,GAAKtP,QAAUA,IAC9BvU,KAAK0U,WAAWmP,GAAKnQ,KAAY7S,EAAOb,KAAKwI,QAAQuB,GAAO2pB,QAAU,IACjE1zB,KAAK0U,WAAWmP,GAAKnQ,KAAY7S,IAAOb,KAAKwI,QAAQuB,GAAO2pB,QAAU,OAKnFC,gBAAiB,SAASpf,EAAOb,GAAS,OAAO1T,KAAKwI,QAAQxI,KAAK0M,QAAQ,QAAS6H,IAAQb,IAC5FkgB,gBAAiB,SAASrf,EAAOb,EAAQ7S,GACxC,IAAIkJ,EAAQ/J,KAAK0M,QAAQ,QAAS6H,GAElC,GADAvU,KAAKwI,QAAQuB,GAAO2J,GAAU7S,EACK,KAA/Bb,KAAKwI,QAAQuB,GAAO2pB,SAAiD,KAA/B1zB,KAAKwI,QAAQuB,GAAO2pB,QAC7D,IAAK,IAAI7P,EAAM,EAAGA,EAAM7jB,KAAK0U,WAAWtJ,OAAQyY,IAC3C7jB,KAAK0U,WAAWmP,GAAKtP,QAAUA,IAC9BvU,KAAK0U,WAAWmP,GAAKnQ,KAAY7S,EAAOb,KAAKwI,QAAQuB,GAAO2pB,QAAU,IACjE1zB,KAAK0U,WAAWmP,GAAKnQ,KAAY7S,IAAOb,KAAKwI,QAAQuB,GAAO2pB,QAAU,OAKnFxd,OAAQ,WAIP,OAHAlW,KAAKwI,QAAQ8O,KAAKtX,KAAKuK,QACvBvK,KAAKwI,QAAQxI,KAAKob,OAAO,GAAzB,MAAuCpb,KAAKob,OAC5Cpb,KAAKwI,QAAQxI,KAAKob,OAAO,GAAzB,QAAyC,IAClCpb,KAAKob,OAAS,GAEtByY,OAAQ,SAAS9pB,GAChB,OAAOye,KAAKC,MAAMD,KAAKK,UAAU,CAAC7oB,KAAKwI,QAAQuB,OAEhD2C,QAAS,SAASgH,EAAQ7S,GAEzB,IADA,IAAIkJ,GAAS,EACJmS,EAAI,EAAGA,EAAIlc,KAAKwI,QAAQ4C,OAAQ8Q,IACxC,GAAIlc,KAAKwI,QAAQ0T,GAAGxI,IAAW7S,EAAO,CACrCkJ,EAAQmS,EACR,MAGF,OAAOnS,GAER+pB,YAAa,SAASpgB,EAAQ7S,GAE7B,IADA,IAAIkJ,GAAS,EACJmS,EAAIlc,KAAKwI,QAAQ4C,OAAQ8Q,GAAI,EAAGA,IACxC,GAAIlc,KAAKwI,QAAQ0T,GAAGxI,IAAW7S,EAAO,CACrCkJ,EAAQmS,EACR,MAGF,OAAOnS,GAERgqB,KAAM,SAASrgB,EAAQ7S,GACtB,OAAOb,KAAKwI,QAAQ8D,OAAQ,IAAI0nB,SAAJ,4BAAkCtgB,EAAlC,cAA8C7S,EAA9C,UAE7BozB,UAAW,SAASvgB,EAAQ7S,GAC3B,OAAOb,KAAKwI,QAAQxI,KAAK0M,QAAQgH,EAAQ7S,KAE1CqzB,SAAU,SAASxgB,EAAQ7S,GAC1B,OAAOb,KAAKwI,QAAQxI,KAAK8zB,YAAYpgB,EAAQ7S,KAE9CyL,OAAQ,SAAS6nB,GAChB,OAAOn0B,KAAKwI,QAAQ8D,OAAQ,IAAI0nB,SAAJ,uBAA6BG,GAA7B,KAE7BC,OAAQ,SAAS1gB,EAAQ7S,EAAOyF,GAC/B,IAAI+tB,EAASr0B,KAAKi0B,UAAUvgB,EAAQ7S,GACpC,YAAiBwH,GAAVgsB,OAAsBhsB,EAAYgsB,EAAO/tB,IAEjDguB,UAAW,WACV,OAAIt0B,KAAKwI,QAAQ8D,QAAO,SAAAoL,GAAG,MAAmB,KAAfA,EAAIgc,WAAgBtoB,OAAS,GAG7DqoB,WAAY,SAASjrB,GACpB,IAAK,IAAIqb,EAAM,EAAGA,EAAMrb,EAAQ4C,OAAQyY,IAClCrb,EAAQqb,GAAK2I,eAAe,WAAUhkB,EAAQqb,GAAKtP,MAAQsP,EAAM,GACjErb,EAAQqb,GAAK2I,eAAe,aAAYhkB,EAAQqb,GAAK6P,QAAU,KAGrE,IAAIa,EAAS3qB,OAAO6L,KAAKjN,EAAQ,IACjC,IAASqb,EAAM,EAAGA,EAAM0Q,EAAOnpB,OAAQyY,IACtC7jB,KAAKuK,OAAOgqB,EAAO1Q,IAAQ,IAG7B5b,YAAa,SAAStI,GAMrB,YAJoB0I,IADpB1I,EAAQA,GAAS,IACPyL,SACTpL,KAAKyzB,WAAW9zB,GAChBA,EAAQ,CAAC6I,QAAS7I,EAAO+U,WAAY8T,KAAKC,MAAMD,KAAKK,UAAUlpB,MAEzD60B,IAAE3qB,OAAO,GAAI9B,GAAQC,SAAUrI,MAKnC8E,GACL,aAAe,IAAD,gCAuEdgvB,WAAa,WACZ,EAAKgB,UAAUC,QAAUlgB,GAAW5P,UAAU6P,KAC9C,EAAKggB,UAAU3jB,OAAS,GACxB,EAAK2jB,UAAUE,SAAW,CAAE,QAAW,GAAI,QAAW,GAAI,OAAW,GAAI,QAAW,GAAI,QAAW,IACnG,EAAKF,UAAUG,SAAW,GAC1B,EAAKC,eAAe7wB,GAAO8kB,WAAW,iBA5EzB,KA8EdgM,YAAc,WACb,IAAIH,EAAW,EAAKF,UAAUE,SAC9B,GAA6C,MAAzChM,eAAeI,QAAQ,eAAwB,CAClD,IAAIgM,EAAU/wB,GAAO8kB,WAAW,eAChC6L,EAAW,CACV,QAAWI,EAAQ,GAAR,QACX,QAAWA,EAAQ,GAAR,QACX,OAAWA,EAAQ,GAAR,OACX,QAAWA,EAAQ,GAAR,QACX,QAAWA,EAAQ,GAAR,SAGb,OAAOJ,GA1FM,KA4FdhwB,YAAc,SAACE,GACd,EAAKA,IAAMA,EACP,EAAKD,UAAUC,IAAIyC,SAAWzC,EAAK,EAAKmwB,YAAc,EAAKpwB,UAAUowB,YAAYC,KAC5E,EAAKrwB,UAAUC,IAAI+L,SAAW/L,IAAK,EAAKmwB,YAAc,EAAKpwB,UAAUowB,YAAYpkB,SA/F7E,KAiGdskB,cAAgB,SAACC,GAChB,EAAKA,WAAaA,GAlGL,KAoGdzwB,WAAa,SAACL,GACb,EAAKovB,aACL,EAAK1zB,GAAKsE,EACV,EAAKowB,UAAUE,SAAW,EAAKG,eAvGlB,KAyGd/vB,YAAc,SAACC,GACd,EAAKA,SAAWA,GA1GH,KA4GdowB,SAAW,SAACnW,GACX,EAAKA,MAAQA,GA7GA,KA+GdjO,WAAa,SAACqkB,GACb,EAAKA,QAAUA,GAhHF,KAkHdC,SAAW,SAACC,GACX,EAAKA,MAAQA,GAnHA,KAqHdC,YAAc,SAACC,GACd,EAAKA,SAAWA,GAtHH,KAwHdC,cAAgB,WACf,MAAO,CAAEjB,UAAWjM,KAAKK,UAAU,EAAK4L,aAzH3B,KA2HdxvB,UAAY,SAACtF,GACZ,EAAK80B,UAAU3jB,OAAOwG,KAAKkd,IAAE3qB,OAAO,GAAI,EAAKjF,UAAU+wB,OAAQh2B,KA5HlD,KA8Hd6F,WAAa,SAACtB,EAAM+X,GACnB,EAAKwY,UAAUG,SAAS1wB,GAAQ+X,GA/HnB,KAiId2Z,YAAc,SAACj2B,GACd,EAAKsF,UAAWuvB,IAAE3qB,OAAOlK,EAAO,CAAEyF,MAAO,EAAKR,UAAUQ,MAAMywB,aAlIjD,KAoIdC,YAAc,SAACn2B,GACd,EAAKsF,UAAWuvB,IAAE3qB,OAAOlK,EAAO,CAAEyF,MAAO,EAAKR,UAAUQ,MAAM2wB,aArIjD,KAuIdC,eAAiB,SAAC9xB,EAAM+X,GACvB,EAAKwY,UAAUG,SAAS1wB,GAAQ+X,GAxInB,KA0Idga,eAAiB,SAAC/xB,EAAM+X,GACvB,EAAKwY,UAAUG,SAAS1wB,GAAQ+X,GA3InB,KA6Id4Y,eAAiB,SAACqB,GACjB,EAAKtxB,UAAUuxB,YAAcD,GA9IhB,KAgJdE,eAAiB,SAACh1B,GACjB,OAAOA,EAAKiS,QAAQ,KAAM,UAAKA,QAAQ,KAAM,UAAKA,QAAQ,SAAU,UAAKA,QAAQ,KAAM,WAjJ1E,KAmJdgjB,UAAY,SAACC,GACZ,IAAIC,EAAazvB,SAASC,eAAeyN,GAAW5P,UAAUme,IAAIkF,SAC9DjkB,GAAOF,OAAOyyB,MACjBA,EAAazvB,SAAS0b,cAAc,QACzBziB,GAAKyU,GAAW5P,UAAUme,IAAIkF,SAE1CnhB,SAAS6b,KAAKC,YAAY2T,GAC1BjW,IAAS4C,OAAO,kBAACmG,EAAO3a,aAAR,CAAqBzB,OAAUqpB,IAAaC,IA1J/C,KA4Jd3lB,OAAS,SAAC4lB,EAAkBxxB,GAC3B,IAOM2wB,EAAS,CACda,iBAAkBA,GARFvU,IAAM5c,OAAO,CAC7BoxB,QAASzyB,GAAO8kB,WAAW,WAAa,EAAKjkB,IAC7Ckd,QAAS,CACR,eAAgB,EAAKnd,UAAUowB,YAAYpkB,OAC3C,cAAiB,EAAKhM,UAAUuxB,eAOzBO,KAAK,EAAK7xB,IAAK,EAAK4vB,UAAUG,SAASxkB,SAASA,SAAUulB,GACjEzL,MAAK,SAAUyM,GAChB,OAAO3xB,EAAS,CAACjF,GAAK42B,EAASv1B,KAAK8gB,QAAQ7d,QAASjD,KAAOu1B,EAASv1B,UAErE+oB,OAAM,SAAUlL,GAChBjb,GAAOC,WAAW,IAAK,uGAEvBimB,MAAK,gBA/KO,KAmLdrkB,MAAQ,WACPvB,QAAQC,IAAI,eACZD,QAAQC,IAAI,EAAKkwB,WAEjBmC,4BACI,EAAKnB,UAAU,EAAKY,UAAU,EAAKZ,UAClC,EAAKF,MACL,EAAKsB,aADO,EAAKC,aAzLT,KA4LdA,UAAY,WACX,IAAMjV,EAAa,CAClBC,OAAQ,OAERjd,IAAKb,GAAO8kB,WAAW,WAAa,EAAKjkB,IACzCzD,KAAM,EAAKg1B,eAAe5N,KAAKK,UAAU,CAAC,UAAY,EAAK4L,aAC3D1S,QAAS,CACR,eAAgB,EAAKnd,UAAUowB,YAAYC,KAC3C,cAAiB,EAAKrwB,UAAUuxB,aAEjClB,MAAM,EACN8B,MAAO,EACPtB,SAAU,EAAKA,SACfJ,QAAS,EAAKA,SAEf,IACC,IAAMnT,EAAUD,IAAMJ,GAKtB,GAJAvd,QAAQC,IAAI,gBACZD,QAAQC,IAAI2d,GAER,EAAKuT,UAAU,EAAKY,WAAW,EAAKZ,UACpCvT,EAAQ9gB,KAAK0P,OAAOC,WAAa,EAAKnM,UAAUoyB,UAAUC,QAC7D,MAAuB,KAAlB,EAAKjyB,eAAqCqD,IAAlB,EAAKrD,UAA4C,OAAlB,EAAKA,SACzD,EAAKA,SAAS,CAAEjF,GAAI,EAAKA,GAAIqB,KAAM8gB,EAAQ9gB,OAE3C8gB,EAGRle,GAAOC,WAAW,IAAKie,EAAQ9gB,KAAK0P,OAAOomB,aAE3C,MAAOpxB,GACRxB,QAAQC,IAAI,aACZD,QAAQC,IAAIuB,GACR,EAAK2vB,UAAU,EAAKY,WAAW,EAAKZ,UACxCzxB,GAAOC,WAAW,IAAK,sGA9NX,KAiOd4yB,WAjOc,sBAiOD,8BAAAvX,EAAA,6DACNuC,EAAa,CAClBC,OAAQ,OAERjd,IAAKb,GAAO8kB,WAAW,WAAa,EAAKjkB,IACzCzD,KAAM,EAAKg1B,eAAe5N,KAAKK,UAAU,CAAC,UAAY,EAAK4L,aAC3D1S,QAAS,CACR,eAAgB,EAAKnd,UAAUowB,YAAYC,KAC3C,cAAiB,EAAKrwB,UAAUuxB,aAEjClB,MAAM,EACN8B,MAAO,EACPtB,SAAU,EAAKA,SACfJ,QAAS,EAAKA,SAbH,kBAgBWpT,IAAMJ,GAhBjB,UAgBLK,EAhBK,OAiBX5d,QAAQC,IAAI,gBACZD,QAAQC,IAAI2d,GAER,EAAKuT,UAAU,EAAKY,WAAW,EAAKZ,UACpCvT,EAAQ9gB,KAAK0P,OAAOC,WAAa,EAAKnM,UAAUoyB,UAAUC,QArBnD,oBAsBa,KAAlB,EAAKjyB,eAAqCqD,IAAlB,EAAKrD,UAA4C,OAAlB,EAAKA,SAtBvD,0CAuBF,EAAKA,SAAS,CAAEjF,GAAI,EAAKA,GAAIqB,KAAM8gB,EAAQ9gB,QAvBzC,iCAyBF8gB,GAzBE,gCA4BVle,GAAOC,WAAW,IAAKie,EAAQ9gB,KAAK0P,OAAOomB,aA5BjC,0DA+BX5yB,QAAQC,IAAI,aACZD,QAAQC,IAAR,MACI,EAAKkxB,UAAU,EAAKY,WAAW,EAAKZ,UACxCzxB,GAAOC,WAAW,IAAK,oGAlCZ,0DAhOZjE,KAAKD,GAAK,GACVC,KAAK6E,IAAM,GACX7E,KAAKgF,SAAW,KAChBhF,KAAKm1B,WAAa,KAClBn1B,KAAKm3B,MAAQ,KACbn3B,KAAKq1B,QAAW,IAChBr1B,KAAKu1B,OAAQ,EACbv1B,KAAKo3B,UAAY,KACjBp3B,KAAKq3B,SAAW,OAChBr3B,KAAKg1B,YAAc,mBACnBh1B,KAAKy1B,UAAW,EAChBz1B,KAAK4E,UAAY,CAChBC,IAAK,CACJyC,OAAQ,mBACRsJ,OAAQ,sBAETomB,UAAW,CACVC,QAAS,IACTK,MAAO,MAERC,SAAU,GAEVnyB,MAAO,CACNC,OAAQ,IACRoC,KAAM,IACNkN,OAAQ,IACRmB,QAAS,IACT0hB,UAAW,IACXC,OAAQ,IACR5B,SAAU,IACVE,SAAU,IACV2B,MAAO,IACPC,IAAK,IACLpwB,OAAQ,KAER0U,QAAS,aAEV/W,IAAK,CACJC,KAAM,KAEPwwB,OAAQ,CACPzwB,IAAK,GACLE,MAAO,GACPsC,SAAU,GACVkwB,WAAY,GACZtyB,YAAa,GACbC,YAAa,GACbiC,SAAU,GACV+vB,SAAU,GACVR,MAAO,GAERZ,YAAa,GACbnB,YAAa,CACZpkB,OAAQ,sBACRqkB,KAAM,qBAGRj1B,KAAKy0B,UAAY,CAChBC,QAASlgB,GAAW5P,UAAU6P,KAC9B3D,OAAQ,GACR8jB,SAAU,GACVD,SAAU,CAAE,QAAW,GAAI,QAAW,GAAI,OAAW,GAAI,QAAW,GAAI,QAAW,KAEpF30B,KAAK63B,SAAW,CACf1Q,KAAM,OACN8N,KAAM,OACN6C,OAAQ,SACRC,IAAK,QCjkCOC,I,yDA1Vd,WAAYr4B,GAAO,IAAD,8BACjB,gBAkBDyG,MAAQ,CACPC,OAAQ,CACPpG,QAAS,SAACqB,GACT,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,WACC,EAAK6D,WAAW,cAAgB,EAAKQ,YAAY,aACtD,MACD,IAAK,eACJ,QAA8CiE,GAA1CvB,SAASC,eAAe,eAC3BD,SAASC,eAAe,eAAenG,QAAS,MAC1C,CAENoD,GAAOslB,QAAQ,SAAU,wCADZ,CAAE5nB,MAAO,QAASC,OAAQ,QAAS2M,UAAU,QAS9D/H,MAAO,CACNC,SAAU,SAAClF,GACV,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,WAEJ,EAAKH,MAAMq4B,YAAYjF,SAAS,EAAG,SAAU1xB,EAAEgF,OAAOzF,OACtDmD,GAAOqnB,WAAP,eAAwB,eACxB,MACD,IAAK,eAEJrnB,GAAO6C,cAAP,eAA2B,cAAe,EAAG,MAAOvF,EAAEgF,OAAOzF,SAM/Dq3B,UAAW,SAAC52B,GACX,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,eACc,KAAduB,EAAE62B,SACLrxB,SAASC,eAAe,YAAYe,YA3DvB,EAsElBlE,WAAa,SAACsD,GACb,OAAQA,GACR,IAAK,YACJ,GAAIrD,GAAOC,OAAO,EAAKlE,MAAMq4B,YAAY7wB,SAAS,EAAG,WAEpD,OADApD,GAAOC,WAAW,IAAK,mDAChB,EAER,GAAIJ,GAAOC,OAAO,EAAKlE,MAAMq4B,YAAY7wB,SAAS,EAAG,QAEpD,OADApD,GAAOC,WAAW,IAAK,yEAChB,EAcT,OAFA,EAAKoD,QAAQH,IAEN,GA7FU,EAmGlBG,QAAU,SAACH,GACV,OAAOA,GACP,IAAK,YACJ,MACD,IAAK,YACJ,EAAKtH,MAAMw4B,MAAMpF,SAAS,EAAG,UAAW,EAAKpzB,MAAMq4B,YAAY7wB,SAAS,EAAG,cAxG3D,EAuHlBhD,YAAc,SAAC8C,GACd,IAAI1C,EAAe,IAAIC,GACvB,IACC,OAAQyC,GACR,IAAK,YACJ1C,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMmC,OACpCjC,YAAa,UACbkC,SAAU,QAEXhD,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,gBACTpC,YAAY,UACZC,YAAY,UAEbf,EAAagB,WAAW,UAAW,EAAK5F,MAAMq4B,YAAYtwB,mBAC1DnD,EAAaqB,QAEb,MACD,IAAK,YACJrB,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAE9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMuP,OACpCjN,SAAS,sBACTpC,YAAY,eAGbd,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMuP,OACpCjN,SAAS,qBACTpC,YAAY,eAGbd,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,aACZC,YAAY,eAGbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,aACZC,YAAY,mBAGbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,aACZC,YAAY,eAGbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,wBACTpC,YAAY,aACZC,YAAY,mBAEbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,aACZC,YAAY,eAEbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,aACZC,YAAY,eAEbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,aACZC,YAAY,eAEbf,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,mBACTpC,YAAY,aACZC,YAAY,cAEbf,EAAagB,WAAW,aAAc,EAAK5F,MAAMw4B,MAAMzwB,mBACvDnD,EAAaqB,QAEb,MAED,IAAK,YACJrB,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMuP,OACpCjN,SAAS,qBACTpC,YAAY,gBAEbd,EAAagB,WAAW,cAAe,EAAK5F,MAAMq4B,YAAYtwB,mBAC9DnD,EAAaqB,SAMb,MAAOC,GACRxB,QAAQC,IAAIuB,KArPI,EA4PlBd,SAAW,SAACgB,GACX,OAAQA,EAAIjG,IACZ,IAAK,YAIJ,GAFAiE,GAAO6nB,oBAAP,eAAiC,QAAS7lB,EAAI5E,KAAKg3B,OAEJ,MAA3C,EAAKx4B,MAAMw4B,MAAMhxB,SAAS,EAAG,UAG5B,EAAKxD,WAAW,cAAc,EAAKQ,YAAY,iBAC7C,CACN,GAA+C,WAA3C,EAAKxE,MAAMw4B,MAAMhxB,SAAS,EAAG,UAEhC,OADApD,GAAOC,WAAW,IAAK,gFAChB,EAER,GAA+C,UAA3C,EAAKrE,MAAMw4B,MAAMhxB,SAAS,EAAG,UAEhC,OADApD,GAAOC,WAAW,IAAK,kFAChB,EAER,GAA+C,YAA3C,EAAKrE,MAAMw4B,MAAMhxB,SAAS,EAAG,UAEhC,OADApD,GAAOC,WAAW,IAAK,6LAChB,EAEuC,SAA3C,EAAKrE,MAAMw4B,MAAMhxB,SAAS,EAAG,WAChCpD,GAAOC,WAAW,IAAK,iLAA0C,SAAAo0B,IAAqB,IAARA,GAAcvxB,SAASC,eAAe,gBAAgBe,WAEtF,YAA3C,EAAKlI,MAAMw4B,MAAMhxB,SAAS,EAAG,YAChCpD,GAAOC,WAAW,IAAK,4DACnB,EAAKL,WAAW,cAAc,EAAKQ,YAAY,cAIrD,MACD,IAAK,YAEJJ,GAAO0kB,WAAW,SADG,GAGrB1kB,GAAO0kB,WAAW,cAAe1iB,EAAI5E,KAAKk3B,YAC1Ct0B,GAAO0kB,WAAW,cAAe1iB,EAAI5E,KAAKm3B,gBAC1Cv0B,GAAO0kB,WAAW,UAAa1iB,EAAI5E,KAAKo3B,YACxCx0B,GAAO0kB,WAAW,gBAAiB1iB,EAAI5E,KAAKq3B,gBAC5Cz0B,GAAO0kB,WAAW,cAAe1iB,EAAI5E,KAAKs3B,YAC1C10B,GAAO0kB,WAAW,cAAe1iB,EAAI5E,KAAKu3B,YAC1C30B,GAAO0kB,WAAW,cAAe1iB,EAAI5E,KAAKw3B,YAC1C50B,GAAO0kB,WAAW,aAAe1iB,EAAI5E,KAAKy3B,WAI1C/xB,SAASC,eAAe,YAAYe,UA1SrC9D,GAAOyoB,iBAGP,EAAK7sB,MAAQ,CACZk5B,QAAS/wB,GAAQC,SAASC,cAC1BmwB,MAAOrwB,GAAQC,SAASC,cACxBgwB,YAAalwB,GAAQC,SAASC,YAAY,CAAC,CAACxC,OAAQ,GAAIszB,IAAK,GAAItZ,QAAS,GAAIuZ,QAAS,OAGxF,EAAK5yB,MAAMC,OAAOpG,QAAU,EAAKmG,MAAMC,OAAOpG,QAAQ0G,KAA1B,gBAC5B,EAAKP,MAAMG,MAAMC,SAAW,EAAKJ,MAAMG,MAAMC,SAASG,KAA1B,gBAC5B,EAAKP,MAAMG,MAAM2xB,UAAY,EAAK9xB,MAAMG,MAAM2xB,UAAUvxB,KAA3B,gBAbZ,E,qDA0TjB,OACC,kBAAC,IAAM0D,SAAP,KACC,yBAAKnJ,UAAY,cAChB,yBAAKA,UAAY,kBAChB,yBAAKA,UAAY,mBAAjB,SAGA,yBAAKA,UAAY,oBAChB,2BAAOhB,MAAS,CAACwB,MAAO,QAASc,KAAO,OAAOzC,GAAK,WAAWc,MAASb,KAAKJ,MAAMq4B,YAAYzvB,QAAQ,GAA/B,OAA6C5B,YAAe,sBAAQJ,SAAYxG,KAAKoG,MAAMG,MAAMC,YAE1K,yBAAKtF,UAAY,oBAChB,2BAAOhB,MAAS,CAACwB,MAAO,QAASc,KAAO,WAAWzC,GAAK,eAAec,MAASb,KAAKJ,MAAMq4B,YAAYzvB,QAAQ,GAA/B,IAA0C5B,YAAe,4BAASJ,SAAYxG,KAAKoG,MAAMG,MAAMC,SAAU0xB,UAAal4B,KAAKoG,MAAMG,MAAM2xB,aAExN,yBAAKh3B,UAAY,sBAChB,yBAAKA,UAAY,kBAChB,4BAAQnB,GAAK,WAAWE,QAAWD,KAAKoG,MAAMC,OAAOpG,SAAU,uBAEhE,yBAAKiB,UAAY,kBAChB,4BAAQnB,GAAK,eAAeE,QAAWD,KAAKoG,MAAMC,OAAOpG,SAAU,6CAKvE,yBAAKC,MAAS,CAAC2S,QAAS,SAEvB,kBAAC,KAAD,CAAM9S,GAAK,WAAWk5B,GAAM,CAACC,SAAU,QAASt5B,MAAO,Y,GAvVxCkB,IAAMC,YCoQXo4B,G,kDA3Pd,WAAYx5B,GAAQ,IAAD,8BAClB,cAAMA,IA8CPiE,WAAa,SAAC7D,GACb,OAAQA,GACP,IAAK,gBACJ,EAAKqE,YAAY,mBAlDD,EA4DnBA,YAAc,SAACC,GACd,IAAIG,EAAe,IAAIC,GACvB,IACC,OAAQJ,GACP,IAAK,gBACJG,EAAaE,WAAWL,GACxBG,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,oBACTpC,YAAY,iBACZC,YAAY,eAEbf,EAAagB,WAAW,iBAAkB,CAAC,CAAEiD,QAAU,OACvDjE,EAAaqB,QACb,MAED,IAAK,gBACJrB,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,wBACTpC,YAAY,qBACZC,YAAY,mBAEbf,EAAagB,WAAW,qBAAsB,CAAC,CAACkD,YAAc,EAAK9I,MAAM+I,iBACzEnE,EAAaqB,SAKd,MAAOC,GACRxB,QAAQC,IAAIuB,GACZC,MAAMD,KAnGW,EA0GnBd,SAAW,SAACgB,GACX,OAAQA,EAAIjG,IACX,IAAK,gBACJ,MACD,IAAK,gBACJ,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8BiJ,eAAiB7C,EAAI5E,KAAKyH,oBA/GxC,EAwHnBzC,MAAQ,CACPsD,KAAO,CACNC,aAAgB,SAACrI,GAChB,OAAQA,EAAEvB,IACT,IAAK,cACJ,EAAK0G,SAAL,2BACI,EAAK7G,OADT,IAEKkJ,aAAec,OAAOC,OAAO,EAAKjK,MAAMkJ,aAAcf,GAAQ+B,WAAWxI,EAAEyI,MAAO,EAAKnK,MAAMgJ,aAC7FD,cAAgBrH,EAAEF,KAAKsH,eACzB,kBAAM,EAAKtE,YAAY,uBAM9BiC,OAAS,CACRpG,QAAU,SAACqB,GACV0C,GAAOuE,gBAAP,eAA6B,iBAAkB,CAC9C,CAAC6wB,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,OAIrC6X,UAAY,CACXzS,SAAW,SAAClF,GACX,OAAQA,EAAEvB,IACT,IAAK,UACJuE,QAAQC,IAAI,oBACZD,QAAQC,IAAIjD,GACZgD,QAAQC,IAAIjD,EAAEgF,OAAOgzB,eACrB,EAAK7yB,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B25B,eAAc,2BAAO,EAAK35B,MAAM25B,gBAAlB,IAAkC3sB,SAAWtL,EAAEgF,OAAOgzB,cAAez4B,MAAQS,EAAEgF,OAAOzF,WAClI,MACD,IAAK,aACJyD,QAAQC,IAAI,cACZD,QAAQC,IAAIjD,GACZ,EAAKmF,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B45B,oBAAmB,2BAAO,EAAK55B,MAAM45B,qBAAlB,IAAuCvd,QAAU3a,EAAE2a,iBA/JxG,EAAKrc,MAAQ,CACZ25B,eAAiB,CAChBx5B,GAAK,UACLkc,QAAU,CACT,CAACpb,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,kBAEzBxC,MAAQ,IACRkL,SAAW,EACX9M,UAAW,GAEZqC,QAAU,CACTC,SAAW,OACXF,QAAU,CAAC,CAACK,IAAM,OAAQE,OAAQ,aAEnCg3B,eAAiB1xB,GAAQC,SAASC,cAClCyxB,mBAAqB3xB,GAAQC,SAASC,YAAY,CAAC,CAACxC,OAAQ,GAAIszB,IAAK,GAAItZ,QAAS,GAAIuZ,QAAS,gBAxB9E,E,gEAgClBh1B,GAAOuE,gBAAgBvI,KAAM,iBAAkB,CAC9C,CAACo5B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,GAClC,CAACg4B,IAAK,OAAQC,KAAO,KAAMj4B,KAAO,O,+BAqInC,OACC,kBAAC,IAAMiJ,SAAP,KACC,kBAAC,GAAD,KACC,0DACA,kBAAC,GAAD,KACC,6BACC,4CAED,6BACC,oDACA,wDACA,gEAED,6BACC,6BACC,gGAED,6BACC,6FAGF,kBAAC,GAAD,CAAajJ,KAAM,GAAKe,QAAS,CAACK,KAAM,SAAU4M,OAAQ,YAC1D,6BACC,qEAED,kBAAC,GAAD,CAAahO,KAAM,KAAMe,QAAS,CAACK,KAAM,SAAU4M,OAAQ,WAC3D,6BACC,+DAIH,kBAAC,GAAD,KACC,0FACA,kBAAC,EAAD,CACC1N,MAAS,IACTC,OAAU,IACVP,KAAQpB,KAAKJ,MAAM65B,eAAenlB,aAClCnS,QAAWnC,KAAKJ,MAAMuC,WAGxB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,6BACC,4DAED,6BACC,2DACA,kBAAC,GAAD,CACCpC,GAAMC,KAAKJ,MAAM25B,eAAex5B,GAChCc,MAASb,KAAKJ,MAAMiB,MACpBob,QAAWjc,KAAKJ,MAAM25B,eAAetd,QACrCva,MAAS1B,KAAKJ,MAAM25B,eAAe73B,MACnC5B,SAAYE,KAAKJ,MAAM25B,eAAez5B,SACtC8M,SAAY5M,KAAKJ,MAAM25B,eAAe3sB,SACtCpG,SAAWxG,KAAKoG,MAAM6S,UAAUzS,YAGlC,6BACC,0DAED,6BACC,kBAAC,GAAD,CAAapF,KAAM,GAAKe,QAAS,CAACK,KAAM,SAAU4M,OAAQ,aAE3D,6BACC,yDAED,6BACC,kBAAC,GAAD,CAAahO,KAAM,GAAKe,QAAS,CAACK,KAAM,SAAU4M,OAAQ,aAE3D,6BACC,mE,GAvPYtO,IAAMC,WC8JVo4B,G,kDA3Jd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZ+5B,cAAgB5xB,GAAQC,SAASC,cACjC2xB,kBAAoB7xB,GAAQC,SAASC,cACrC4xB,cAAgB9xB,GAAQC,SAASC,eALhB,E,kGAYlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIb,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM+5B,cACnBpvB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,MAIxE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOnZ,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIZ,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,qBAKlB,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMi6B,cACnBtvB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,MAIxE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOnZ,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIZ,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,uBAOpB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMg6B,kBACnBrvB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,eAAOC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACnE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,OAKvE,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAQja,GAAG,qBAAqB6lB,OAAU,CAAC,CAAClkB,MAAO,OAAQ,CAACA,MAAO,OAAQ,CAACA,MAAO,OAAQ,CAACA,MAAO,QACjG2kB,OAAU,CACT,CAAI,CAAC7jB,KAAO,IAAK3B,MAAQ,4BACxB,CAAC2B,KAAO,IAAK3B,MAAQ,kBAAC,GAAD,MAAcslB,QAAS,IAG7C,CACC,CAAC3jB,KAAO,IAAK3B,MAAQ,gBACrB,CAAC2B,KAAO,IAAK3B,MAAQ,kBAAC,GAAD,MAAcslB,QAAS,IAE7C,CACC,CAAC3jB,KAAO,IAAK3B,MAAQ,4BACrB,CAAC2B,KAAO,IAAK3B,MAAQ,kBAAC,GAAD,CAAWA,MAAS,GAAIob,QAAW,MACxD,CAACzZ,KAAO,IAAK3B,MAAQ,gBACrB,CAAC2B,KAAO,IAAK3B,MAAQ,kBAAC,GAAD,WAIzB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,4B,GAhJLC,IAAMC,WC8EVo4B,G,kDA7Ed,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZk6B,iBAAmB/xB,GAAQC,SAASC,cACpC8xB,iBAAmBhyB,GAAQC,SAASC,eAJnB,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACC1I,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMk6B,iBACnBvvB,OACC,CACC,CAACC,WAAY,eAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,OAKzE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOnZ,MAAM,6BACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIb,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,mBAGhB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCgb,QAAW,qBACXhb,MAAS,8CACT2F,SAAY,SAAClF,GAAO,OAAO,WAK/B,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCK,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMk6B,iBACnBvvB,OACC,CACC,CAACC,WAAY,eAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,e,GAjE7DlZ,IAAMC,WCmJVo4B,G,kDAlJd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZs6B,eAAiBnyB,GAAQC,SAASC,cAClCkyB,kBAAoBpyB,GAAQC,SAASC,eAJpB,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,6BACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIb,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMs6B,eACnB3vB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,uCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACvE,CAACxP,WAAY,uCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACvE,CAACxP,WAAY,eAAOC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACnE,CAACxP,WAAY,eAAOC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,QAMxE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCrY,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMu6B,kBACnB5vB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,eAAOC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,OAKvE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOnZ,MAAM,uBACb,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,yCACb,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,wDACb,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,kBACb,kBAAC,GAAD,CAAWa,MAAO,QAGpB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,kBACb,kBAAC,GAAD,CAAWa,MAAO,SAIrB,kBAAC,GAAD,CACCC,OAAQ,OACRP,KAAQpB,KAAKJ,MAAMu6B,kBACnB5vB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,eAAOC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,MAItE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOnZ,MAAM,6BACb,kBAAC,GAAD,CAAea,MAAO,QAGxB,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,6B,GAtINC,IAAMC,WC2FVo4B,G,kDA1Fd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZw6B,mBAAqBryB,GAAQC,SAASC,cACtCoyB,SAAWtyB,GAAQC,SAASC,cAC5BqyB,gBAAkBvyB,GAAQC,SAASC,eALlB,E,kGAYlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,CAAea,MAAO,QAGxB,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,qBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMw6B,mBACnB7vB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,SAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GAClE,CAACxP,WAAY,uBAAUC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACtE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,uCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,OAK3E,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAgBtY,MAAM,OACrB,kBAAC,GAAD,CACCC,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMy6B,SACnB9vB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,QAASC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACzE,CAACxP,WAAY,WAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,OAKxE,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAgBtY,MAAM,OACrB,kBAAC,GAAD,CACCC,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM06B,gBACnB/vB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,SAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GAClE,CAACxP,WAAY,uBAAUC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACtE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,uCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,MAI1E,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,6B,GA9ENC,IAAMC,WCsHVo4B,G,kDArHd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZ26B,aAAexyB,GAAQC,SAASC,cAChCuyB,kBAAoBzyB,GAAQC,SAASC,eAJpB,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,WACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,uBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CAAea,MAAO,MACtB,kBAAC,GAAD,CAAeA,MAAO,QAGxB,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,qBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM26B,aACnBhwB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,SAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GAClE,CAACxP,WAAY,uBAAUC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACtE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,uCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,OAK3E,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAgBtY,MAAM,OACrB,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCua,QAAW,CACV,CAAE1Z,IAAM,QAAiBk4B,IAAM,4BAC/B,CAAEl4B,IAAM,OAAiBk4B,IAAM,4BAC/B,CAAEl4B,IAAM,cAAiBk4B,IAAM,6BAEhC5e,QAAW,MACXhb,MAAS,MACT+L,SAAW,UAGb,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAWlL,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,iCAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAgBa,MAAM,OACrB,kBAAC,GAAD,CACCC,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM46B,kBACnBjwB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,SAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GAClE,CAACxP,WAAY,uBAAUC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACtE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,uCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,MAI1E,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,6B,GAzGNC,IAAMC,WC+GVo4B,G,kDA9Gd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZ86B,iBAAmB3yB,GAAQC,SAASC,cACpC0yB,mBAAqB5yB,GAAQC,SAASC,cACtC2yB,UAAY7yB,GAAQC,SAASC,eALZ,E,kGAYlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,WACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CAAea,MAAO,MACtB,kBAAC,GAAD,CAAeA,MAAO,MACtB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIb,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAWa,MAAO,OAEnB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAWA,MAAO,QAGpB,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCC,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM86B,iBACnBnwB,OAAU,CACT,CAACC,WAAY,eAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,OAIzE,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCrY,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM+6B,mBACnBpwB,OAAU,CACT,CAACC,WAAY,eAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC7E,CAAC/K,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,SAM3E,kBAAC,GAAD,KACC,kBAAC,GAAD,KACA,kBAAC,GAAD,CACCrY,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMg7B,UACnBrwB,OAAU,CACT,CAACC,WAAY,KAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC7E,CAAC/K,WAAY,qBAAOC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACvE,CAACxP,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,uCAAUC,MAAO,aAAcC,MAAO,aAAasP,UAAU,c,GApG/DlZ,IAAMC,WC4EVo4B,G,kDA3Ed,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZi7B,cAAgB9yB,GAAQC,SAASC,eAHhB,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,CAAea,MAAO,MACtB,kBAAC,GAAD,CAAeA,MAAO,MACtB,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,WACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,uBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEX,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIb,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMi7B,cACnBtwB,OAAU,CACT,CAACC,WAAY,KAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC7E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,SAAKC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACrE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,c,GAjE9DlZ,IAAMC,WCkDVo4B,G,kDAjDd,WAAYx5B,GAAQ,IAAD,8BAClB,gBAEKC,MAAQ,CACZk7B,WAAa/yB,GAAQC,SAASC,eAJb,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,OAED,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMk7B,WACnBvwB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,qBAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACpE,CAACxP,WAAY,qBAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,a,GAvC1DlZ,IAAMC,WCuDVo4B,G,kDArDd,WAAYx5B,GAAQ,IAAD,8BAClB,gBAEKC,MAAQ,CACZm7B,gBAAkBhzB,GAAQC,SAASC,eAJlB,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,6BACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,kBAEf,kBAAC,GAAD,OAID,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMm7B,gBACnBxwB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,UAAWC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GAC3E,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,qBAAOC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACjE,CAACxP,WAAY,2BAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,MAIvE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,iC,GA3CJC,IAAMC,WC8CVo4B,G,kDA9Cd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZo7B,YAAcjzB,GAAQC,SAASC,eAHd,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,OAED,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQxJ,MAAM,qBAKlB,kBAAC,GAAD,KACC,kBAAC,GAAD,OAID,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,OAED,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,0B,GArCHC,IAAMC,WC8CVo4B,G,kDA7Cd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZo7B,YAAcjzB,GAAQC,SAASC,eAHd,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,OAED,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQxJ,MAAM,qBAKlB,kBAAC,GAAD,KACC,kBAAC,GAAD,OAID,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,OAED,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,0B,GArCHC,IAAMC,WC0EVo4B,G,kDAvEd,WAAYx5B,GAAQ,IAAD,8BAClB,gBASDyG,MAAQ,CACPkf,IAAM,CACLrlB,QAAU,SAACqB,GACVgD,QAAQC,IAAI,cAXd,EAAK3E,MAAQ,CACZo7B,YAAcjzB,GAAQC,SAASC,eAEhC,EAAK7B,MAAMkf,IAAIrlB,QAAW,EAAKmG,MAAMkf,IAAIrlB,QAAQ0G,KAAvB,gBALR,E,kGAkBlB,OACC,kBAAC,IAAM0D,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQxJ,MAAM,gDACd,kBAAC,EAAD,CAAQA,MAAM,mCACd,kBAAC,EAAD,CAAQA,MAAM,gCAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAM0kB,SAAS,QAAQtlB,QAAWD,KAAKoG,MAAMkf,IAAIrlB,SAChD,kBAAC,GAAD,CAAUF,GAAM,YAAagK,MAAO,EAAG9G,MAAO,4BAC7C,kBAACg4B,GAAD,OAED,kBAAC,GAAD,CAAUl7B,GAAM,YAAagK,MAAO,EAAG9G,MAAO,gBAC7C,kBAACi4B,GAAD,UAKJ,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCv5B,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMo7B,YACnBzwB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,2BAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,qBAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACpE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAIrE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,+CACd,kBAAC,EAAD,CAAQA,MAAM,uC,GA7DJC,IAAMC,WCmDVo4B,G,kDApDd,WAAYx5B,GAAQ,IAAD,8BAClB,gBAEKC,MAAQ,CACZu7B,aAAepzB,GAAQC,SAASC,eAJf,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,6BACb,kBAAC,GAAD,MACA,kBAAC,GAAD,OAED,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,2DACd,kBAAC,EAAD,CAAQA,MAAM,2DACd,kBAAC,EAAD,CAAQA,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMu7B,aACnB5wB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,EAAMykB,yBAAyB,EAAMC,mBAAmB,GACvI,CAACzvB,WAAY,+CAAaC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GAC7E,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,4BAAUC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACpE,CAACxP,WAAY,wCAAWC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACrE,CAACxP,WAAY,wCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,c,GAzC9DlZ,IAAMC,WC8DVo4B,G,kDA7Dd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZw7B,cAAgBrzB,GAAQC,SAASC,eAHhB,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAOA,MAAM,iBACb,kBAAC,GAAD,CACEA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIb,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMw7B,cACnB7wB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,qBAAOC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACvE,CAACxP,WAAY,kCAAWC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACvE,CAACxP,WAAY,qBAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAIrE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,2B,GAnDJC,IAAMC,WCoYVo4B,G,kDAlYd,aAAe,IAAD,8BACb,gBA4EDv1B,WAAa,WACZ,IAAIS,EAAO,wCAEX,OAAQA,GACP,IAAK,gBAEJ,MACD,IAAK,gBACJ,QAAkBgE,KAAd,0CAAyC,MAAd,yCAE9B,OAAO,EAUV,OAAO,GAjGM,EAuGdjE,YAAc,WACb,IAAIC,EAAO,wCAEPG,EAAe,IAAIC,GACvB,IAGC,OAFAH,QAAQC,IAAIF,GAEJA,GACP,IAAK,gBACJG,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,qBACTpC,YAAY,SACZC,YAAY,gBAEbf,EAAagB,WAAW,SAAU,CAAC,KACnChB,EAAaqB,QAEb,MACA,IAAK,gBACJrB,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,qBACTpC,YAAY,SACZC,YAAY,gBAGbf,EAAagB,WAAW,SAAU,CAAC,CAAC,OAAS,UAAT,iCAEpChB,EAAaqB,SAKf,MAAOC,MAjJI,EAyJdd,SAAW,SAACgB,GAEX,OADA1B,QAAQC,IAAIyB,EAAI5E,MACR4E,EAAIjG,IACX,IAAK,gBACJiE,GAAO6nB,oBAAP,eAAiC,cAAe7lB,EAAI5E,KAAKi6B,aAEzD,MAED,IAAK,gBACJr3B,GAAO6nB,oBAAP,eAAiC,cAAe7lB,EAAI5E,KAAKk6B,eAlK9C,EA4Kdl1B,MAAQ,CAEPC,OAAS,CACRpG,QAAU,SAACqB,GACV,OAAQA,EAAEgF,OAAOvG,IAChB,IAAK,YACA,EAAK6D,WAAW,kBAAkB,EAAKQ,YAAY,iBAEvD,MAED,IAAK,aACA,EAAKR,WAAW,kBAAkB,EAAKQ,YAAY,iBAEvD,MAED,IAAK,aACJ2B,MAAMzE,EAAEgF,OAAOvG,OAQnB2J,KAAM,CACLC,aAAc,SAACrI,IAGD,cAATA,EAAEvB,IAAwC,MAAlBuB,EAAEF,KAAKsyB,SAAoC,MAAlBpyB,EAAEF,KAAKsyB,UACvD,EAAK9vB,WAAW,gBAAiBtC,EAAEF,KAAKmyB,QAAQgI,SAAS,EAAKn3B,YAAY,gBAAiB9C,EAAEF,KAAKmyB,QAAQgI,SAMhHrmB,cAAe,aAIfF,cAAe,aAIfC,oBAAqB,aAIrBf,mBAAoB,SAAC5S,GACpB,OAAQA,EAAEvB,IACT,IAAK,YACJiE,GAAOuE,gBAAP,eAA6B,cAAejH,EAAEF,MAE9C,MAED,IAAK,YACJ4C,GAAOuE,gBAAP,eAA6B,cAAejH,EAAEF,QAOjD+T,mBAAoB,aAIpBC,qBAAsB,aAItBO,mBAAoB,aAIpBC,cAAe,aAIf5B,YAAa,SAAC1S,GACb,OAAQA,EAAEvB,IACT,IAAK,YACJiE,GAAOuE,gBAAP,eAA6B,cAAejH,EAAEF,MAE9C,MAED,IAAK,YACJ4C,GAAOuE,gBAAP,eAA6B,cAAejH,EAAEF,QAOjD6U,YAAc,SAAC3U,GACd,OAAQA,EAAEvB,IACT,IAAK,YACJiE,GAAOuE,gBAAP,eAA6B,cAAejH,EAAEF,MAE9C,MAED,IAAK,YACJ4C,GAAOuE,gBAAP,eAA6B,cAAejH,EAAEF,UA/QlD,EAAKxB,MAAQ,CACZ47B,YAAczzB,GAAQC,SAASC,cAC/BwzB,YAAc1zB,GAAQC,SAASC,cAE/ByzB,eAAiB,CAChB37B,GAAK,YACLD,UAAW,EACXe,MAAQ,eACRD,QAAS,GAEV+6B,gBAAkB,CACjB57B,GAAK,aACLD,UAAW,EACXe,MAAQ,eACRD,QAAS,GAEVg7B,gBAAkB,CACjB77B,GAAK,aACLD,UAAW,EACXe,MAAQ,eACRD,QAAS,GAGVi7B,cAAgB,CACf97B,GAAK,YACLwK,OAAQ,CAEP,CAACC,WAAY,iCAAUC,MAAO,SAAUC,MAAO,SAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,uCAAUC,MAAO,SAAUC,MAAO,SAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,2BAASC,MAAO,SAAUC,MAAO,SAAWsP,UAAU,EAAMzE,KAAK,KAGhFumB,cAAgB,CACf/7B,GAAK,YACLwK,OAAQ,CAEP,CAACC,WAAY,iCAASC,MAAO,SAAUC,MAAO,SAAUsP,UAAU,EAAMzE,KAAK,GAC7E,CAAC/K,WAAY,qBAAQC,MAAO,SAAUC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC7E,CAAC/K,WAAY,2BAAQC,MAAO,UAAWC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC9E,CAAC/K,WAAY,2BAAQC,MAAO,SAAUC,MAAO,SAAUsP,UAAU,EAAMzE,KAAK,MAK/E,EAAKnP,MAAMC,OAAOpG,QAAU,EAAKmG,MAAMC,OAAOpG,QAAQ0G,KAA1B,gBAC5B,EAAKP,MAAMsD,KAAKuM,YAAc,EAAK7P,MAAMsD,KAAKuM,YAAYtP,KAA5B,gBA/CjB,E,gEAuDT3G,KAAK4D,WAAW,kBAAkB5D,KAAKoE,YAAY,mB,yCAMpC8T,EAAWC,EAAWC,GACzC9T,QAAQC,IAAI,aACZD,QAAQC,IAAIvE,KAAKJ,MAAMm8B,S,+EAiOvB,OACC,kBAAC,IAAM1xB,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,sDACb,kBAAC,GAAD,CAAWa,MAAO,QAGpB,kBAAC,GAAD,KACC,kBAAC,EAAD,CACC3B,GAAMC,KAAKJ,MAAM87B,eAAe37B,GAChCc,MAASb,KAAKJ,MAAM87B,eAAe76B,MACnCf,SAAYE,KAAKJ,MAAM87B,eAAe57B,SACtCc,OAAUZ,KAAKJ,MAAM87B,eAAe96B,OACpCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,QAKV,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCP,GAAIC,KAAKJ,MAAMi8B,cAAc97B,GAC7BuK,IAAKtK,KAAKJ,MAAMi8B,cAAc97B,GAC9B4B,OAAQ,QACR4I,OAAUvK,KAAKJ,MAAMi8B,cAActxB,OACnCnJ,KAAQpB,KAAKJ,MAAM47B,YAEnB7xB,aAAgB3J,KAAKoG,MAAMsD,KAAKC,aAChCuL,cAAiBlV,KAAKoG,MAAMsD,KAAKwL,cACjCF,cAAiBhV,KAAKoG,MAAMsD,KAAKsL,cACjCC,oBAAuBjV,KAAKoG,MAAMsD,KAAKuL,oBACvCf,mBAAsBlU,KAAKoG,MAAMsD,KAAKwK,mBACtCiB,mBAAsBnV,KAAKoG,MAAMsD,KAAKyL,mBACtCC,qBAAwBpV,KAAKoG,MAAMsD,KAAK0L,qBACxCO,mBAAsB3V,KAAKoG,MAAMsD,KAAKiM,mBACtCC,cAAiB5V,KAAKoG,MAAMsD,KAAKkM,cACjC5B,YAAehU,KAAKoG,MAAMsD,KAAKsK,YAC/BiC,YAAejW,KAAKoG,MAAMsD,KAAKuM,cAEhC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CACClW,GAAMC,KAAKJ,MAAM+7B,gBAAgB57B,GACjCc,MAASb,KAAKJ,MAAM+7B,gBAAgB96B,MACpCf,SAAYE,KAAKJ,MAAM+7B,gBAAgB77B,SACvCc,OAAUZ,KAAKJ,MAAM+7B,gBAAgB/6B,OACrCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,QAKV,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCP,GAAIC,KAAKJ,MAAMk8B,cAAc/7B,GAC7BuK,IAAKtK,KAAKJ,MAAMk8B,cAAc/7B,GAC9B4B,OAAQ,QACR4I,OAAUvK,KAAKJ,MAAMk8B,cAAcvxB,OACnCnJ,KAAQpB,KAAKJ,MAAM67B,YAEnB9xB,aAAgB3J,KAAKoG,MAAMsD,KAAKC,aAChCuL,cAAiBlV,KAAKoG,MAAMsD,KAAKwL,cACjCF,cAAiBhV,KAAKoG,MAAMsD,KAAKsL,cACjCC,oBAAuBjV,KAAKoG,MAAMsD,KAAKuL,oBACvCf,mBAAsBlU,KAAKoG,MAAMsD,KAAKwK,mBACtCiB,mBAAsBnV,KAAKoG,MAAMsD,KAAKyL,mBACtCC,qBAAwBpV,KAAKoG,MAAMsD,KAAK0L,qBACxCO,mBAAsB3V,KAAKoG,MAAMsD,KAAKiM,mBACtCC,cAAiB5V,KAAKoG,MAAMsD,KAAKkM,cACjC5B,YAAehU,KAAKoG,MAAMsD,KAAKsK,YAC/BiC,YAAejW,KAAKoG,MAAMsD,KAAKuM,cAEhC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CACClW,GAAMC,KAAKJ,MAAMg8B,gBAAgB77B,GACjCc,MAASb,KAAKJ,MAAMg8B,gBAAgB/6B,MACpCf,SAAYE,KAAKJ,MAAMg8B,gBAAgB97B,SACvCc,OAAUZ,KAAKJ,MAAMg8B,gBAAgBh7B,OACrCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,gB,GAvXEQ,IAAMC,WCwIVo4B,G,kDAxId,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZg7B,UAAY7yB,GAAQC,SAASC,eAHZ,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,iBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,WACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,uBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAWA,MAAO,QAGpB,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMg7B,UACnBrwB,OACC,CACC,CAACC,WAAY,KAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,EAAMzE,KAAK,GAC/E,CAAC/K,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,SAAMC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GAClE,CAACxP,WAAY,uBAAUC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACpE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,eAAMC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAChE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,QAMvE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOnZ,MAAM,0BACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,OAGX,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOb,MAAM,iBACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,WACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCa,MAAS,IACTma,QAAU,MACVhb,MAAQ,MACRob,QACC,CACC,CAAE1Z,IAAM,QAASk4B,IAAM,gBACvB,CAAEl4B,IAAM,OAASk4B,IAAM,uBAGzB7tB,SAAW,SAEZ,kBAAC,GAAD,CAAO/L,MAAM,6BACb,kBAAC,GAAD,CACCgb,QAAW,qBACXrV,SAAY,SAAClF,GAAO,OAAO,UAI9B,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQT,MAAM,yCACd,kBAAC,EAAD,CAAQA,MAAM,gDAEf,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQA,MAAM,iBACd,kBAAC,EAAD,CAAQA,MAAM,4B,GA7HLC,IAAMC,WCuEVo4B,G,kDAtEd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZ44B,WAAazwB,GAAQC,SAASC,eAHb,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,mBACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,uBACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIZ,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM44B,WACnBjuB,OACC,CACC,CAACC,WAAY,iBAAQC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACxE,CAACxP,WAAY,qBAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACpE,CAACxP,WAAY,6BAAWC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACrE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAIrE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,2B,GA5DJC,IAAMC,WCwDVo4B,G,kDAvDd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZo8B,WAAaj0B,GAAQC,SAASC,cAC9Bg0B,WAAal0B,GAAQC,SAASC,eAJb,E,kGAWlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACC1I,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMo8B,WACnBzxB,OACC,CACC,CAACC,WAAY,KAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,iCAAUC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACtE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,OAKvE,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCrY,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMq8B,WACnBthB,aAAe,WAAWJ,2BAA6B,EACvDhQ,OACC,CACC,CAACC,WAAY,6BAAUC,MAAO,aAAcC,MAAO,aAAcsvB,yBAAyB,EAAMC,mBAAmB,GACnH,CAACzvB,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,iCAAUC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACpE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAIrE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,2B,GA7CJC,IAAMC,WCkHVo4B,G,kDAjHd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZ84B,WAAa3wB,GAAQC,SAASC,cAC9B0wB,WAAa5wB,GAAQC,SAASC,cAC9Bi0B,kBAAoBn0B,GAAQC,SAASC,eALpB,E,kGAYlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,gDACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIZ,kBAAC,GAAD,QAKF,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCC,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM84B,WACnBnuB,OACC,CACC,CAACC,WAAY,KAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,eAAOC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACnE,CAACxP,WAAY,qBAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAItE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAM+4B,WACnBpuB,OACC,CACC,CAACC,WAAY,KAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,qBAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACpE,CAACxP,WAAY,eAAOC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACjE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAItE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,sBAMnB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMs8B,kBACnB3xB,OACC,CACC,CAACC,WAAY,KAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,iCAAUC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACpE,CAACxP,WAAY,qBAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,qBAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,4BAAUC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAIvE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,2B,GAvGJC,IAAMC,WC8EVo4B,G,kDA7Ed,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZu8B,cAAgBp0B,GAAQC,SAASC,eAHhB,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,oCACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,MAEV,kBAAC,GAAD,CAAOb,MAAM,mCACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIZ,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMu8B,cACnB5xB,OACC,CACC,CAACC,WAAY,eAAMC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACtE,CAACxP,WAAY,qBAAQC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACpE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,mDAAYC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACtE,CAACxP,WAAY,qBAAOC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACjE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,4BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GAClE,CAACxP,WAAY,2BAAQC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAIrE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,2B,GAnEJC,IAAMC,WC2DVo4B,G,kDA1Dd,WAAYx5B,GAAQ,IAAD,8BAClB,gBACKC,MAAQ,CACZu8B,cAAgBp0B,GAAQC,SAASC,eAHhB,E,kGAUlB,OACC,kBAAC,IAAMoC,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAOxJ,MAAM,sDACb,kBAAC,GAAD,CAAWa,MAAO,MAClB,kBAAC,GAAD,CAAOb,MAAM,6BACb,kBAAC,GAAD,CACCA,MAAS,GACTob,QAAW,GACXva,MAAS,QAIZ,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQb,MAAM,oBAIjB,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCc,OAAQ,QACRP,KAAQpB,KAAKJ,MAAMu8B,cACnB5xB,OACC,CACC,CAACC,WAAY,iCAASC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GACzE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,MAItE,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQnZ,MAAM,2B,GAhDJC,IAAMC,WC2nBVo4B,G,kDAxnBd,WAAYx5B,GAAQ,IAAD,8BAClB,cAAMA,IA0MPiE,WAAa,SAACS,GACbC,QAAQC,IAAI,cA5MM,EAyNnBH,YAAc,SAACC,GACdC,QAAQC,IAAI,eACZ,IACCD,QAAQC,IAAIF,GACX,MAAOyB,MA7NS,EAqOnBd,SAAW,SAACgB,GACX1B,QAAQC,IAAI,aAtOM,EA4OnB6B,MAAQ,CAEPC,OAAS,CACRpG,QAAU,SAACqB,GACV,OAAQA,EAAEgF,OAAOvG,IAChB,IAAK,UACJgG,MAAMzE,EAAEgF,OAAOvG,IACf,MACD,IAAK,cACJ,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8Bw8B,YAAW,2BAAQ,EAAKx8B,MAAMw8B,aAAnB,IAAgCt8B,UAAY,EAAKF,MAAMw8B,YAAYt8B,cAC5G,MACD,IAAK,sBACJ,MACD,IAAK,eACJkE,GAAOC,WAAW,IAAK,kCACvB,MACD,IAAK,iBACJD,GAAOC,WAAW,IAAK,iDAAmB,SAAAo0B,OAC1C,MACD,IAAK,eACJ,IAAIgE,EAAU,CAAE36B,MAAO,QAASC,OAAQ,QAAS2M,UAAU,EAAOtJ,SAAW,WAAOe,MAAM,2BAC1F/B,GAAOslB,QAAQ,UAAW,8CAAY+S,GACtC,MACD,IAAK,kBAEJr4B,GAAOslB,QAAQ,UAAW,8CADZ,CAAE5nB,MAAO,QAASC,OAAQ,QAAU2M,UAAU,OAOhE/H,MAAQ,CACPC,SAAW,SAAClF,GACX,OAAQA,EAAEgF,OAAOvG,IAChB,IAAK,gBACJ,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B08B,eAAc,2BAAQ,EAAK18B,MAAM08B,gBAAnB,IAAmCC,OAAM,2BAAO,EAAK38B,MAAM08B,eAAeC,QAAjC,IAAyC17B,MAAQS,EAAEgF,OAAOzF,aAC/I,MACD,IAAK,gBACJ,EAAK4F,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B08B,eAAc,2BAAQ,EAAK18B,MAAM08B,gBAAnB,IAAmCE,OAAM,2BAAO,EAAK58B,MAAM08B,eAAeE,QAAjC,IAAyC37B,MAAQS,EAAEgF,OAAOzF,gBAMnJ47B,MAAQ,CACPj2B,SAAW,SAAClF,GACX,OAAQA,EAAEvB,IACT,IAAK,UAEJ,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B88B,WAAU,2BAAO,EAAK98B,MAAM88B,YAAlB,IAA8B9vB,SAAWtL,EAAET,cAMvFmY,SAAW,CACVxS,SAAW,SAAClF,GACX,OAAQA,EAAEvB,IACT,IAAK,gBACJuE,QAAQC,IAAIjD,GACZ,EAAKmF,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B+8B,gBAAgB,2BAAK,EAAK/8B,MAAM+8B,iBAAjB,IAAkClpB,QAAWnS,EAAEmS,QAAW,IAAM,SAC7G,MACD,IAAK,eACJ,IAAIrS,EAAO,EAAKxB,MAAMg9B,gBAAgB3gB,QACtC7a,EAAOA,EAAKiB,KAAI,SAACC,EAAMyH,GAQtB,OAPIA,IAAUzI,EAAEyI,SACG,IAAdzI,EAAEmS,QACLnR,EAAI,MAAY,IAEhBA,EAAI,MAAY,KAGXA,KAGR,EAAKmE,SAAL,2BACI,EAAK7G,OADT,IAEGg9B,gBAAe,2BACb,EAAKh9B,MAAMg9B,iBADE,IAEd3gB,QAAU7a,UAQlBy7B,cAAgB,CACfhgB,gBAAkB,SAACvb,GACVA,EAAEgF,OAAOvG,IAMlB6c,eAAiB,SAACtb,GACTA,EAAEgF,OAAOvG,IAMlByG,SAAW,SAAClF,GACX,OAAQA,EAAEgF,OAAOvG,IAChB,IAAK,aACJ,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8Bk9B,cAAa,2BAAO,EAAKl9B,MAAMk9B,eAAlB,IAAiCj8B,MAAQS,EAAEgF,OAAOzF,WAC7F,MACD,IAAK,sBACJ,EAAK4F,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8Bm9B,mBAAkB,2BAAO,EAAKn9B,MAAMm9B,oBAAlB,IAAsCzf,UAAYhc,EAAEgF,OAAOzF,WAC3G,MACD,IAAK,qBACJ,EAAK4F,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8Bm9B,mBAAkB,2BAAO,EAAKn9B,MAAMm9B,oBAAlB,IAAsCtqB,QAAUnR,EAAEgF,OAAOzF,cAM7GoY,UAAW,CACVzS,SAAU,SAAClF,GACV,OAAQA,EAAEvB,IACT,IAAK,UACJuE,QAAQC,IAAI,oBACZD,QAAQC,IAAIjD,GACZgD,QAAQC,IAAIjD,EAAEgF,OAAOgzB,eACrB,EAAK7yB,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B25B,eAAc,2BAAO,EAAK35B,MAAM25B,gBAAlB,IAAkC3sB,SAAWtL,EAAEgF,OAAOgzB,cAAez4B,MAAQS,EAAEgF,OAAOzF,WAClI,MACD,IAAK,aACJyD,QAAQC,IAAI,cACZD,QAAQC,IAAIjD,GACZ,EAAKmF,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8B45B,oBAAmB,2BAAO,EAAK55B,MAAM45B,qBAAlB,IAAuCvd,QAAU3a,EAAE2a,aACpG,MACD,IAAK,UACJ3X,QAAQC,IAAIjD,GACZgD,QAAQC,IAAIjD,EAAEgF,OAAOzF,OACrBmD,GAAO6C,cAAP,eAA2B,QAAS,EAAG,UAAWvF,EAAEgF,OAAOzF,OAC3DyD,QAAQC,IAAI,EAAK3E,MAAMm8B,OACvB,MACD,IAAK,UACJz3B,QAAQC,IAAIjD,EAAEgF,OAAOzF,OACrBmD,GAAO6C,cAAP,eAA2B,QAAS,EAAG,UAAWvF,EAAEgF,OAAOzF,OAC3D,MACD,IAAK,UACJyD,QAAQC,IAAIjD,EAAEgF,OAAOzF,OACrBmD,GAAO6C,cAAP,eAA2B,QAAS,EAAG,SAAUvF,EAAEgF,OAAOzF,OAC1DyD,QAAQC,IAAI,EAAK3E,MAAMm8B,WA1X3B,EAAKn8B,MAAQ,CACZm8B,MAAOh0B,GAAQC,SAASC,YAAY,CAAC,CAACwX,QAAS,GAAIK,QAAS,GAAIra,OAAQ,MACxE22B,YAAc,CACbr8B,GAAK,UACLD,UAAW,EACXe,MAAQ,cACRD,QAAS,GAEV07B,eAAiB,CAChBC,OAAS,CACRx8B,GAAK,gBACLmE,KAAO,gBACPrD,MAAQ,GACR+F,YAAc,aACd6V,UAAY,EACZC,UAAY,GACZxR,UAAW,EACXpL,UAAW,GAEZ08B,OAAS,CACRz8B,GAAK,gBACLmE,KAAO,gBACPrD,MAAQ,GACR+F,YAAc,aACd6V,UAAY,EACZC,UAAY,GACZxR,UAAW,EACXpL,UAAW,IAGb48B,WAAa,CACZ38B,GAAK,UACLkc,QAAU,CACT,CAAE1Z,IAAM,QAAiBk4B,IAAM,QAC/B,CAAEl4B,IAAM,OAAiBk4B,IAAM,OAC/B,CAAEl4B,IAAM,cAAiBk4B,IAAM,eAEhC5e,QAAU,MACVhb,MAAQ,MACRqK,UAAW,EACXpL,UAAW,EACX8M,SAAW,QAEZ+vB,gBAAkB,CACjB58B,GAAK,gBACLgK,MAAQ,EACR8R,QAAU,WACVhb,MAAQ,SACR4S,QAAU,IACVvI,UAAW,EACXpL,UAAW,GAEZ88B,gBAAkB,CACjB78B,GAAK,eACLkc,QAAU,CACT,CAAE1Z,IAAM,SAAYk4B,IAAM,QAAc55B,MAAQ,KAChD,CAAE0B,IAAM,OAAYk4B,IAAM,MAAc55B,MAAQ,KAChD,CAAE0B,IAAM,WAAYk4B,IAAM,UAAc55B,MAAQ,MAEjDgb,QAAU,MACVhb,MAAQ,MACRqK,UAAW,EACXpL,UAAW,GAEZg9B,cAAgB,CACf/8B,GAAK,aACLc,MAAQ,WACRic,eAAgB,EAChBhd,UAAW,EACXid,iBAAkB,EAClB7K,OAAS,UACTjF,QAAS,EACT+P,QAAU,KACVC,QAAU,KACVC,UAAW,EACXC,YAAc,SAEf4f,mBAAqB,CACpB1f,KAAO,sBACPE,MAAQ,qBACRD,UAAY,WACZ7K,QAAU,YAEXuqB,WAAa,GAGbC,WAAa,CACZl3B,MAAQ,CACPhG,GAAK,eACLc,MAAQ,cAETq8B,QAAU,CACTn9B,GAAK,iBACLc,MAAQ,gBAETuN,MAAQ,CACPrO,GAAK,eACLc,MAAQ,cAETyN,SAAW,CACVvO,GAAK,kBACLc,MAAQ,kBAGV04B,eAAiB,CAChBx5B,GAAK,UACLkc,QAAU,CACT,CAACpb,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,iBACxB,CAACrD,MAAQ,OAAQqD,KAAO,kBAEzBxC,MAAQ,IACRkL,SAAW,EACX9M,UAAW,GAEZ05B,oBAAsB,CACrBz5B,GAAK,aACL2B,MAAQ,IACR5B,UAAW,EACXmc,QAAU,CACT,CAAE1Z,IAAM,SAAYk4B,IAAM,QAAc55B,MAAQ,KAChD,CAAE0B,IAAM,OAAYk4B,IAAM,MAAc55B,MAAQ,KAChD,CAAE0B,IAAM,WAAYk4B,IAAM,UAAc55B,MAAQ,KAChD,CAAE0B,IAAM,WAAYk4B,IAAM,UAAc55B,MAAQ,KAChD,CAAE0B,IAAM,WAAYk4B,IAAM,UAAc55B,MAAQ,KAChD,CAAE0B,IAAM,WAAYk4B,IAAM,UAAc55B,MAAQ,KAChD,CAAE0B,IAAM,WAAYk4B,IAAM,UAAc55B,MAAQ,MAEjDgb,QAAU,MACVhb,MAAQ,MACRwgB,aAAe,GAEhB8b,UAAY,CACXp9B,GAAK,UACLD,UAAW,EACXs9B,MAAQ,EACRnhB,QAAU,CACT,CAAClc,GAAK,SAAUmnB,QAAU,OAAQrmB,MAAQ,UAC1C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,aAAcmnB,QAAU,WAAYrmB,MAAO,cACjD,CAACd,GAAK,aAAcmnB,QAAU,WAAYrmB,MAAO,cACjD,CAACd,GAAK,SAAUmnB,QAAU,OAAQrmB,MAAQ,UAC1C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,aAAcmnB,QAAU,WAAYrmB,MAAO,cACjD,CAACd,GAAK,aAAcmnB,QAAU,WAAYrmB,MAAO,cACjD,CAACd,GAAK,SAAUmnB,QAAU,OAAQrmB,MAAQ,UAC1C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,WAAYmnB,QAAU,SAAUrmB,MAAQ,YAC9C,CAACd,GAAK,aAAcmnB,QAAU,WAAYrmB,MAAO,cACjD,CAACd,GAAK,aAAcmnB,QAAU,WAAYrmB,MAAO,iBAKpD,EAAKuF,MAAMC,OAAOpG,QAAU,EAAKmG,MAAMC,OAAOpG,QAAQ0G,KAA1B,gBAC5B,EAAKP,MAAMG,MAAMC,SAAW,EAAKJ,MAAMG,MAAMC,SAASG,KAA1B,gBAC5B,EAAKP,MAAMq2B,MAAMj2B,SAAW,EAAKJ,MAAMq2B,MAAMj2B,SAASG,KAA1B,gBAC5B,EAAKP,MAAM4S,SAASxS,SAAW,EAAKJ,MAAM4S,SAASxS,SAASG,KAA7B,gBAC/B,EAAKP,MAAM6S,UAAUzS,SAAW,EAAKJ,MAAM6S,UAAUzS,SAASG,KAA9B,gBAChC,EAAKP,MAAMy2B,cAAcr2B,SAAW,EAAKJ,MAAMy2B,cAAcr2B,SAASG,KAAlC,gBA1KlB,E,4GA2LCuR,EAAWC,EAAWC,GACzC9T,QAAQC,IAAI,aACZD,QAAQC,IAAIvE,KAAKJ,MAAMm8B,S,+EA6MvB,OADAz3B,QAAQC,IAAI,UAEX,kBAAC,IAAM8F,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,2BAAOnK,MAAO,CAACG,YAAc,SAA7B,oBACA,kBAAC,EAAD,CACCN,GAAMC,KAAKJ,MAAMw8B,YAAYr8B,GAC7Bc,MAASb,KAAKJ,MAAMw8B,YAAYv7B,MAChCf,SAAYE,KAAKJ,MAAMw8B,YAAYt8B,SACnCc,OAAUZ,KAAKJ,MAAMw8B,YAAYx7B,OACjCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,KAEP,kBAAC,GAAD,KACC,kBAAC,EAAD,CACCP,GAAK,cACLc,MAAQ,qCACRf,UAAY,EACZG,QAAWD,KAAKoG,MAAMC,OAAOpG,YAIhC,kBAAC,GAAD,KACC,2BAAOC,MAAO,CAACG,YAAc,SAA7B,uBACA,kBAAC,GAAD,KACC,2BAAOH,MAAO,CAACG,YAAc,SAA7B,6BACA,kBAAC,GAAD,CACCqB,MAAS,IACT3B,GAAMC,KAAKJ,MAAM08B,eAAeC,OAAOx8B,GACvCmE,KAASlE,KAAKJ,MAAM08B,eAAeC,OAAOr4B,KAC1CrD,MAAUb,KAAKJ,MAAM08B,eAAeC,OAAO17B,MAC3C+F,YAAgB5G,KAAKJ,MAAM08B,eAAeC,OAAO31B,YACjD6V,UAAezc,KAAKJ,MAAM08B,eAAeC,OAAO9f,UAChDC,UAAe1c,KAAKJ,MAAM08B,eAAeC,OAAO7f,UAChDxR,SAAalL,KAAKJ,MAAM08B,eAAeC,OAAOrxB,SAC9CpL,SAAaE,KAAKJ,MAAM08B,eAAeC,OAAOz8B,SAC9C0G,SAAYxG,KAAKoG,MAAMG,MAAMC,YAG/B,kBAAC,GAAD,KACC,2BAAOtG,MAAO,CAACG,YAAc,SAA7B,mCACA,kBAAC,GAAD,CACCqB,MAAS,IACTc,KAAO,UACPzC,GAAMC,KAAKJ,MAAM08B,eAAeE,OAAOz8B,GACvCmE,KAASlE,KAAKJ,MAAM08B,eAAeE,OAAOt4B,KAC1CrD,MAAUb,KAAKJ,MAAM08B,eAAeE,OAAO37B,MAC3C+F,YAAgB5G,KAAKJ,MAAM08B,eAAeE,OAAO51B,YACjD6V,UAAezc,KAAKJ,MAAM08B,eAAeE,OAAO/f,UAChDC,UAAe1c,KAAKJ,MAAM08B,eAAeE,OAAO9f,UAChDxR,SAAalL,KAAKJ,MAAM08B,eAAeE,OAAOtxB,SAC9CpL,SAAaE,KAAKJ,MAAM08B,eAAeE,OAAO18B,SAC9C0G,SAAYxG,KAAKoG,MAAMG,MAAMC,aAIhC,kBAAC,GAAD,KACC,2BAAOtG,MAAO,CAACG,YAAc,SAA7B,mBACA,kBAAC,GAAD,CAAQN,GAAMC,KAAKJ,MAAM88B,WAAW38B,GAClCkc,QAAWjc,KAAKJ,MAAM88B,WAAWzgB,QACjCJ,QAAW7b,KAAKJ,MAAM88B,WAAW7gB,QACjChb,MAASb,KAAKJ,MAAM88B,WAAW77B,MAC/Bf,SAAYE,KAAKJ,MAAM88B,WAAW58B,SAClCuc,gBAAmB,EACnBzP,SAAY5M,KAAKJ,MAAM88B,WAAW9vB,SAClCxL,KAAQpB,KAAKJ,MAAM88B,WAAWt7B,KAC9BoF,SAAYxG,KAAKoG,MAAMq2B,MAAMj2B,YAGhC,kBAAC,GAAD,KACC,2BAAOtG,MAAO,CAACG,YAAc,SAA7B,+BACA,kBAAC,GAAD,CAAYN,GAAMC,KAAKJ,MAAM+8B,gBAAgB58B,GAC1C8b,QAAW7b,KAAKJ,MAAM+8B,gBAAgB9gB,QACtChb,MAASb,KAAKJ,MAAM+8B,gBAAgB97B,MACpC4S,QAAWzT,KAAKJ,MAAM+8B,gBAAgBlpB,QACtC3T,SAAYE,KAAKJ,MAAM+8B,gBAAgB78B,SACvC0G,SAAYxG,KAAKoG,MAAM4S,SAASxS,YAGpC,kBAAC,GAAD,KACC,2BAAOtG,MAAO,CAACG,YAAc,SAA7B,8BACA,kBAAC,GAAD,CACGN,GAAMC,KAAKJ,MAAMg9B,gBAAgB78B,GACjCkc,QAAWjc,KAAKJ,MAAMg9B,gBAAgB3gB,QACtCJ,QAAW7b,KAAKJ,MAAMg9B,gBAAgB/gB,QACtChb,MAASb,KAAKJ,MAAMg9B,gBAAgB/7B,MACpCf,SAAYE,KAAKJ,MAAMg9B,gBAAgB98B,SACvC0G,SAAYxG,KAAKoG,MAAM4S,SAASxS,YAGpC,kBAAC,GAAD,KACC,2BAAOtG,MAAO,CAACG,YAAc,SAA7B,6BACA,kBAAC,GAAD,CACGN,GAAMC,KAAKJ,MAAMk9B,cAAc/8B,GAC/Bc,MAASb,KAAKJ,MAAMk9B,cAAcj8B,MAClCw8B,UAAar9B,KAAKJ,MAAMk9B,cAAcO,UACtCvgB,cAAiB9c,KAAKJ,MAAMk9B,cAAchgB,cAC1Chd,SAAYE,KAAKJ,MAAMk9B,cAAch9B,SACrCid,gBAAmB/c,KAAKJ,MAAMk9B,cAAc/f,gBAC5C7K,OAAUlS,KAAKJ,MAAMk9B,cAAc5qB,OACnCjF,OAAUjN,KAAKJ,MAAMk9B,cAAc7vB,OACnC+P,QAAWhd,KAAKJ,MAAMk9B,cAAc9f,QACpCC,QAAWjd,KAAKJ,MAAMk9B,cAAc7f,QACpCC,SAAYld,KAAKJ,MAAMk9B,cAAc5f,SACrCC,YAAend,KAAKJ,MAAMk9B,cAAc3f,YACxC3W,SAAYxG,KAAKoG,MAAMy2B,cAAcr2B,SACrCoW,eAAkB5c,KAAKoG,MAAMy2B,cAAcjgB,eAC3CC,gBAAmB7c,KAAKoG,MAAMy2B,cAAchgB,mBAGhD,kBAAC,GAAD,KACC,2BAAO3c,MAAO,CAACG,YAAc,SAA7B,kCACA,kBAAC,GAAD,CACCgd,KAAQrd,KAAKJ,MAAMm9B,mBAAmB1f,KACtCE,MAASvd,KAAKJ,MAAMm9B,mBAAmBxf,MACvCD,UAAatd,KAAKJ,MAAMm9B,mBAAmBzf,UAC3C7K,QAAWzS,KAAKJ,MAAMm9B,mBAAmBtqB,QACzCjM,SAAYxG,KAAKoG,MAAMy2B,cAAcr2B,aAIxC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,QAGF,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,2BAAOtG,MAAO,CAACG,YAAc,SAA7B,oBACA,kBAAC,EAAD,CACCN,GAAMC,KAAKJ,MAAMq9B,WAAWl3B,MAAMhG,GAClCc,MAASb,KAAKJ,MAAMq9B,WAAWl3B,MAAMlF,MACrCf,SAAYE,KAAKJ,MAAMq9B,WAAWl3B,MAAMjG,SACxCc,OAAUZ,KAAKJ,MAAMq9B,WAAWl3B,MAAMnF,OACtCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,KAEP,kBAAC,EAAD,CACCP,GAAMC,KAAKJ,MAAMq9B,WAAWC,QAAQn9B,GACpCc,MAASb,KAAKJ,MAAMq9B,WAAWC,QAAQr8B,MACvCf,SAAYE,KAAKJ,MAAMq9B,WAAWC,QAAQp9B,SAC1Cc,OAAUZ,KAAKJ,MAAMq9B,WAAWC,QAAQt8B,OACxCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,KAEP,kBAAC,EAAD,CACCP,GAAMC,KAAKJ,MAAMq9B,WAAW7uB,MAAMrO,GAClCc,MAASb,KAAKJ,MAAMq9B,WAAW7uB,MAAMvN,MACrCf,SAAYE,KAAKJ,MAAMq9B,WAAW7uB,MAAMtO,SACxCc,OAAUZ,KAAKJ,MAAMq9B,WAAW7uB,MAAMxN,OACtCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,KAEP,kBAAC,EAAD,CACCP,GAAMC,KAAKJ,MAAMq9B,WAAW3uB,SAASvO,GACrCc,MAASb,KAAKJ,MAAMq9B,WAAW3uB,SAASzN,MACxCf,SAAYE,KAAKJ,MAAMq9B,WAAW3uB,SAASxO,SAC3Cc,OAAUZ,KAAKJ,MAAMq9B,WAAW3uB,SAAS1N,OACzCX,QAAWD,KAAKoG,MAAMC,OAAOpG,QAC7BK,GAAM,MAGR,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAcoB,MAAM,OACnB,2BAAOxB,MAAO,CAACG,YAAc,SAA7B,0BAED,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCN,GAAMC,KAAKJ,MAAM25B,eAAex5B,GAChCc,MAASb,KAAKJ,MAAMiB,MACpBob,QAAWjc,KAAKJ,MAAM25B,eAAetd,QACrCva,MAAS1B,KAAKJ,MAAM25B,eAAe73B,MACnC5B,SAAYE,KAAKJ,MAAM25B,eAAez5B,SACtC8M,SAAY5M,KAAKJ,MAAM25B,eAAe3sB,SACtCpG,SAAWxG,KAAKoG,MAAM6S,UAAUzS,WAEjC,kBAAC,GAAD,CACCzG,GAAM,UACNkc,QAAWjY,GAAO+nB,cAAc/nB,GAAOqb,cAAe7K,GAAW5P,UAAUsjB,OAAOC,SAASD,QAC3FrnB,MAASb,KAAKJ,MAAMm8B,MAAMvzB,QAAQ,GAAzB,QACT9G,MAAS,IACT5B,UAAY,EACZ0G,SAAYxG,KAAKoG,MAAM6S,UAAUzS,WAElC,kBAAC,GAAD,CACCzG,GAAM,UACNkc,QAAWjY,GAAO+nB,cAAc/nB,GAAO2b,YAAY3f,KAAKJ,MAAMm8B,OAAQvnB,GAAW5P,UAAUsjB,OAAOC,SAASC,KAE3GvnB,MAASb,KAAKJ,MAAMm8B,MAAMvzB,QAAQ,GAAzB,QACT9G,MAAS,IACT5B,UAAY,EACZ0G,SAAYxG,KAAKoG,MAAM6S,UAAUzS,WAElC,kBAAC,GAAD,CACCzG,GAAM,UACNkc,QAAWjY,GAAO+nB,cAAc/nB,GAAOgc,YAAYhgB,KAAKJ,MAAMm8B,OAAQvnB,GAAW5P,UAAUsjB,OAAOC,SAASE,MAC3GxnB,MAASb,KAAKJ,MAAMm8B,MAAMvzB,QAAQ,GAAzB,OACT9G,MAAS,IACT5B,UAAY,EACZ0G,SAAYxG,KAAKoG,MAAM6S,UAAUzS,WAElC,kBAAC,GAAD,CACCzG,GAAM,UACNkc,QAAWjY,GAAO+nB,cAAc/nB,GAAOumB,gBAAgB,OAAQ/V,GAAW5P,UAAUsjB,OAAOC,SAASE,MACpG3mB,MAAS,IACT5B,UAAY,EACZ0G,SAAYxG,KAAKoG,MAAM6S,UAAUzS,YAGnC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCzG,GAAMC,KAAKJ,MAAM45B,oBAAoBz5B,GACrCkc,QAAWjc,KAAKJ,MAAM45B,oBAAoBvd,QAC1CJ,QAAW7b,KAAKJ,MAAM45B,oBAAoB3d,QAC1Chb,MAASb,KAAKJ,MAAM45B,oBAAoB34B,MACxCa,MAAS1B,KAAKJ,MAAM45B,oBAAoB93B,MACxC5B,SAAYE,KAAKJ,MAAM45B,oBAAoB15B,SAC3CuhB,aAAgBrhB,KAAKJ,MAAM45B,oBAAoBnY,aAC/C7a,SAAYxG,KAAKoG,MAAM6S,UAAUzS,eAMtC,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCzG,GAAMC,KAAKJ,MAAMu9B,UAAUp9B,GAC3Bkc,QAAWjc,KAAKJ,MAAMu9B,UAAUlhB,iB,GApnBpBnb,IAAMC,WCkPVo4B,G,4MAlPdv5B,MAAQ,CACPg5B,WAAY7wB,GAAQC,SAASC,cAC7Bq1B,YAAc,CACbv9B,GAAM,gBACNc,MAAQ,cAET08B,UAAY,CACXx9B,GAAK,WACLwK,OAAQ,CACP,CAACC,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAW6K,KAAK,GAChE,CAAC/K,WAAY,qBAASC,MAAO,UAAYC,MAAO,WAChD,CAACF,WAAY,iCAAUC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACpE,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,GACnE,CAACxP,WAAY,2BAASC,MAAO,UAAYC,MAAO,UAAWsP,UAAU,GACrE,CAACxP,WAAY,uCAAUC,MAAO,aAAcC,MAAO,aAAasP,UAAU,GAC1E,CAACxP,WAAY,2BAASC,MAAO,SAAWC,MAAO,SAAUsP,UAAU,IAEpE5Y,KAAO2G,GAAQC,SAASC,YACvB,CACC,CAAEu1B,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,a,EAepIn6B,WAAa,SAACsD,GASb,OAAO,G,EAMR9C,YAAc,SAAC8C,GACd,IAAI1C,EAAe,IAAIC,GACvB,IACC,OAAQyC,GACR,IAAK,gBACJ1C,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,wBACTpC,YAAY,SACZC,YAAY,UAEbf,EAAagB,WAAW,SAAU,CAAC,KACnChB,EAAaqB,QACb,MACD,IAAK,gBACJrB,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqyB,OACpC/vB,SAAS,mBACTpC,YAAY,eAEbd,EAAagB,WAAW,aAAc,EAAK5F,MAAMg5B,WAAWjxB,mBAC5DnD,EAAaqB,SAIb,MAAOC,M,EAQVd,SAAW,SAACgB,GACX,OAAQA,EAAIjG,IACZ,IAAK,gBACJiE,GAAO6nB,oBAAP,eAAiC,aAAc7lB,EAAI5E,KAAKg3B,OACxD,MACD,IAAK,gBACJ,EAAKh0B,YAAY,mB,EASnBgC,MAAQ,CACPC,OAAQ,CACPpG,QAAS,SAACqB,GACT,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,gBACJgG,MAAM,iBACN,MACD,IAAK,SAEL,IAAK,SACJ,MACD,IAAK,UACA,EAAKnC,WAAW,kBAAkB,EAAKQ,YAAY,oBAM1DsF,KAAM,CACLC,aAAc,SAACrI,KAIf4T,cAAe,SAAC5T,KAIhB0T,cAAe,SAAC1T,KAIhB2T,oBAAqB,SAAC3T,KAItB4S,mBAAoB,SAAC5S,GACpBgD,QAAQC,IAAI,sBACZD,QAAQC,IAAIjD,GAEZgD,QAAQC,IAAI,EAAK3E,MAAMg5B,YAEtBt0B,QAAQC,IAAI,KACbP,GAAO6C,cAAP,eAA2B,aAAcvF,EAAEyI,MAAOzI,EAAEwT,IAAKxT,EAAE8S,WAE5De,mBAAoB,SAAC7T,KAIrB8T,qBAAsB,SAAC9T,KAIvBqU,mBAAoB,SAACrU,KAIrBsU,cAAe,SAACtU,KAIhB0S,YAAa,SAAC1S,GAEbgD,QAAQC,IAAIjD,GACZ0C,GAAOuE,gBAAP,eAA6B,aAAcjH,EAAEF,KAAME,EAAE0D,WAItDiR,YAAa,SAAC3U,GACbgD,QAAQC,IAAI,eACZD,QAAQC,IAAIjD,GACZ,EAAK1B,MAAMg5B,WAAW3F,WAAW3xB,EAAEF,MACnC,EAAKxB,MAAMg5B,WAAW5F,SAAS1xB,EAAEyI,MAAO,UAAW,WACnD,EAAKnK,MAAMg5B,WAAW5F,SAAS1xB,EAAEyI,MAAO,UAAW,WAEnD/F,GAAOqnB,WAAP,eAAwB,aAAc/pB,EAAE0D,a,kEAvJtChF,KAAK4D,WAAW,kBAAkB5D,KAAKoE,YAAY,mB,+BAmKvD,OADAE,QAAQC,IAAI,oBAEX,kBAAC,IAAM8F,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,EAAD,CACCtK,GAAMC,KAAKJ,MAAM09B,YAAYv9B,GAC7Bc,MAASb,KAAKJ,MAAM09B,YAAYz8B,MAChCZ,QAAWD,KAAKoG,MAAMC,OAAOpG,WAG/B,kBAAC,GAAD,KACC,kBAAC,GAAD,CACCF,GAAIC,KAAKJ,MAAM29B,UAAUx9B,GAAIuK,IAAKtK,KAAKJ,MAAM29B,UAAUx9B,GAAI4B,OAAQ,QACnE4I,OAAUvK,KAAKJ,MAAM29B,UAAUhzB,OAC/BnJ,KAAQpB,KAAKJ,MAAMg5B,WACnBjvB,aAAgB3J,KAAKoG,MAAMsD,KAAKC,aAChCuL,cAAiBlV,KAAKoG,MAAMsD,KAAKwL,cACjCF,cAAiBhV,KAAKoG,MAAMsD,KAAKsL,cACjCC,oBAAuBjV,KAAKoG,MAAMsD,KAAKuL,oBACvCf,mBAAsBlU,KAAKoG,MAAMsD,KAAKwK,mBACtCiB,mBAAsBnV,KAAKoG,MAAMsD,KAAKyL,mBACtCC,qBAAwBpV,KAAKoG,MAAMsD,KAAK0L,qBACxCO,mBAAsB3V,KAAKoG,MAAMsD,KAAKiM,mBACtCC,cAAiB5V,KAAKoG,MAAMsD,KAAKkM,cACjC5B,YAAehU,KAAKoG,MAAMsD,KAAKsK,YAC/BiC,YAAejW,KAAKoG,MAAMsD,KAAKuM,cAIhC,kBAAC,GAAD,KACC,kBAAC,EAAD,CAAQlW,GAAK,UAAUc,MAAS,eAAMZ,QAAWD,KAAKoG,MAAMC,OAAOpG,iB,GA9OtDa,IAAMC,WCiBVi9B,G,kDAnBd,WAAar+B,GAAQ,IAAD,8BACnB,gBACKC,MAAQ,CACZq+B,YAAc,CACbl+B,GAAK,aACL4B,OAAS,UALQ,E,qDAUnB,OACC,kBAAC,IAAM0I,SAAP,KACC,kBAAC,GAAD,CAAgBiO,SAAS,kCACxB,kBAAC,GAAD,CAAiBvY,GAAMC,KAAKJ,MAAMq+B,YAAYl+B,GAAI4B,OAAU3B,KAAKJ,MAAMq+B,YAAYt8B,e,GAdpEb,IAAMC,WCWpBi9B,G,4MAIFp+B,MAAQ,CACJs+B,KAAO,EACPC,KAAO,OACPC,SAAW,GACXC,aAAe,GACfC,WAAa,GACbC,WAAa,GACbC,cAAgB,GAChBz4B,MAAQ,CACJ04B,MAAO,EACP9wB,QAAU,IAEdzB,MAAQ,CACJuyB,MAAO,I,EAYf76B,WAAa,SAAC7D,GAEV,OADAuE,QAAQC,IAAI,aACJxE,GACJ,IAAK,gBACD,EAAKqE,YAAY,mB,EAW7BA,YAAc,SAACC,GACXC,QAAQC,IAAI,qBACZ,IAAIC,EAAe,IAAIC,GACvB,IACI,OAAQJ,GACJ,IAAK,gBACDG,EAAaE,WAAWL,GACxBG,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACnBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAMqC,KACpCC,SAAS,mBACTpC,YAAY,SACZC,YAAY,gBAEhBf,EAAagB,WAAW,SAAU,CAAC,CAAEzF,GAAK,UAC1CyE,EAAaqB,SAKvB,MAAOC,GACLxB,QAAQC,IAAIuB,GACZC,MAAMD,K,EAOdd,SAAW,SAACjB,GACRO,QAAQC,IAAI,kBACZD,QAAQC,IAAIR,GACZ,IACI,OAAQA,EAAMhE,IACV,IAAK,gBACDuE,QAAQC,IAAI,uCACZD,QAAQC,IAAIR,EAAM3C,OAM5B,MAAO0E,GACLxB,QAAQC,IAAIuB,GACZC,MAAMD,K,EAQd7F,QAAU,SAACqB,GAEP,OADAgD,QAAQC,IAAI,WACJjD,EAAEgF,OAAOvG,IACb,IAAK,YACDuE,QAAQC,IAAI,8BACZ,EAAKX,WAAW,iBAChB,MACJ,IAAK,SACDmC,MAAM,GACN,MACJ,IAAK,UACDA,MAAM,GACN,MACJ,IAAK,SACDA,MAAM,GACN,MACJ,IAAK,cACDzB,QAAQC,IAAI,uBACZ,EAAKkC,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8Bs+B,KAAM,EAAKt+B,MAAMs+B,KAAK,KACpD55B,QAAQC,IAAI,EAAK3E,MAAMs+B,MACvB,MACJ,IAAK,eACD55B,QAAQC,IAAI,uBACZ,EAAKkC,SAAL,2BAAkB,EAAK7G,OAAvB,IAA8Bs+B,KAAM,KACpC55B,QAAQC,IAAI,EAAK3E,MAAMs+B,MACvB,MACJ,IAAK,cACD55B,QAAQC,IAAI,uBACZD,QAAQC,IAAI,EAAK3E,MAAMw+B,SAASM,eAChC,EAAKj4B,SAAS,CAAE23B,SAAS,2BAAM,EAAKx+B,MAAMw+B,UAAlB,IAA6Bh9B,KAAO,CAAC,CAAErB,GAAK,aACpE,MACJ,IAAK,eACD,EAAK0G,SAAL,2BAAkB,EAAK7G,OAAvB,IAA+BmG,MAAQ,CAAE04B,MAAM,EAAM9wB,QAAU,gCAC/D,MACJ,IAAK,aACD,EAAKlH,SAAL,2BAAkB,EAAK7G,OAAvB,IAA+BsM,MAAQ,CAAEuyB,MAAM,Q,EAM3Dj4B,SAAW,SAAClF,GACR,OAAQA,EAAEgF,OAAOvG,IACb,IAAK,UACD,EAAK0G,SAAL,2BAAmB,EAAK7G,OAAxB,IAA+Bu+B,KAAM78B,EAAEgF,OAAOzF,W,EAM1D2mB,QAAU,SAAClmB,GACP,IAAIq9B,EAAY73B,SAASC,eAAe,SACpC43B,EAAU7X,UAAUtG,SAAS,WAC5Bme,EAAU7X,UAAU7f,OAAO,WAE3B03B,EAAU7X,UAAUnQ,IAAI,Y,uDAMtB,IAAD,EAC2B3W,KAAKJ,MADhC,EACEw+B,SADF,EACYF,KADZ,EACkBC,KACxB,OACI,kBAAC,IAAM9zB,SAAP,KACI,kBAAC,GAAD,KACK,a,GApKDvJ,IAAMC,WCwBb69B,GAAW,CACvB,CAAE7+B,GAAI,OAAc8+B,KAAM,QAAsBC,OAAO,EAASn7B,UAAWo7B,IAC3E,CAAEh/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWq7B,IAE3E,CAAEj/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWs7B,IAC3E,CAAEl/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWu7B,IAC3E,CAAEn/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWw7B,IAC3E,CAAEp/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWy7B,IAC3E,CAAEr/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW07B,IAE3E,CAAEt/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW27B,IAC3E,CAAEv/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW47B,IAE3E,CAAEx/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW67B,IAC3E,CAAEz/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW87B,IAC3E,CAAE1/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW+7B,IAC3E,CAAE3/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWg8B,IAC3E,CAAE5/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWi8B,IAE3E,CAAE7/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWk8B,IAC3E,CAAE9/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWm8B,IAC3E,CAAE//B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWo8B,IAC3E,CAAEhgC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWq8B,IAC3E,CAAEjgC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWs8B,IAC3E,CAAElgC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWu8B,IAC3E,CAAEngC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWw8B,IAM3E,CAAEpgC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWy8B,IAC3E,CAAErgC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAWo7B,IAC3E,CAAEh/B,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UAAW08B,IAC3E,CAAEtgC,GAAI,YAAc8+B,KAAM,iBAAsBC,OAAO,EAASn7B,UDgHlDq6B,KE3FAsC,G,kDApFd,WAAa3gC,GAAQ,IAAD,8BACnB,cAAMA,IAUPM,QAAU,SAACqB,GACVgD,QAAQC,IAAI,0BACZ,EAAKiiB,cAbc,EAepBrgB,QAAU,SAAC7E,GACVgD,QAAQC,IAAI,0BACZ,EAAK5E,MAAM4gC,UAAUj/B,IAjBF,EAmBpBk/B,WAAc,SAACl/B,GACdgD,QAAQC,IAAI,6BACZ,EAAK5E,MAAM8gC,SAASn/B,IArBD,EAuBpBo/B,WAAc,SAACp/B,GACdgD,QAAQC,IAAI,6BACZ,EAAK5E,MAAMghC,SAASr/B,IAzBD,EA2BpBmlB,SAAY,SAACnlB,GACZgD,QAAQC,IAAI,+BACZ,EAAK5E,MAAM6mB,WAAWllB,IA7BH,EA+BpB8E,MAAQ,CACPC,OAAS,CACRpG,QAAU,SAACqB,GACV,OAAQA,EAAEgF,OAAOvG,IAChB,IAAK,UAEJ,EAAKJ,MAAM8gC,SAAS,EAAK9gC,MAAMiN,UAC/B,MACD,IAAK,UAEJ,EAAKjN,MAAMghC,SAAS,EAAKhhC,MAAMiN,UAC/B,MACD,IAAK,WACJ,EAAKjN,MAAMihC,mBA1Cf,EAAKhhC,MAAQ,CACZihC,SAAW,IAEZ,EAAK5gC,QAAU,EAAKA,QAAQ0G,KAAb,gBACf,EAAKR,QAAU,EAAKA,QAAQQ,KAAb,gBACf,EAAK65B,WAAa,EAAKA,WAAW75B,KAAhB,gBAClB,EAAK+5B,WAAa,EAAKA,WAAW/5B,KAAhB,gBAClB,EAAK8f,SAAW,EAAKA,SAAS9f,KAAd,gBATG,E,qDAoDT,IAAD,OACT,OACC,kBAAC,IAAM0D,SAAP,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAASjJ,KAAOpB,KAAKL,MAAM8M,KAAMG,SAAY5M,KAAKL,MAAMiN,SAAU3M,QAAWD,KAAKC,QAASkG,QAAWnG,KAAKmG,QAASsgB,SAAUzmB,KAAKymB,YAEpI,kBAAC,GAAD,KACC,yBAAKvlB,UAAU,qBACd,kBAAC,EAAD,CAAYC,QAAQ,qBAAqBpB,GAAG,UAAUE,QAASD,KAAKoG,MAAMC,OAAOpG,UACjF,kBAAC,EAAD,CAAYkB,QAAQ,qBAAqBpB,GAAG,UAAUE,QAASD,KAAKoG,MAAMC,OAAOpG,UACjF,kBAAC,EAAD,CAAYkB,QAAQ,sBAAsBpB,GAAG,WAAWE,QAASD,KAAKoG,MAAMC,OAAOpG,aAItF,yBAAKC,MAAO,CAAEyB,OAAO,MAAO6M,SAAU,SAEpCxO,KAAKL,MAAM8M,KAAKpK,KAAI,SAAAoK,GACnB,OAAQmyB,GAAStyB,QAAO,SAAAhK,GAAI,OAAIA,EAAKvC,KAAO0M,EAAKE,UAAQtK,KAAI,SAAC+c,EAAM7c,GACnE,OACC,yBAAKxC,GAAIqf,EAAKrf,GAAIG,MAAO,CAAC2S,QAAW,EAAKlT,MAAMiN,SAASD,SAAWyS,EAAKrf,GAAM,QAAU,QAASwC,IAAKA,GACtG,kBAAC6c,EAAKzb,UAAN,mB,GA1ES7C,IAAMC,WCHnB+/B,ICFahgC,IAAMC,U,uKDGb,IAAD,OACFmN,EAAmBlO,KAAKL,MAAxBuO,gBACP,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,yBAAKnO,GAAG,gBAAgBmB,UAAU,mBACjC,wBAAIA,UAAU,2BAEamH,IAAzBrI,KAAKL,MAAMyM,UAA2BpM,KAAKL,MAAMyM,UAAU/J,KAAI,SAACC,EAAMyH,GAAY,OACjF,wBAAI7I,UAAU,sBACb,yBAAKjB,QAAS,SAAAqB,GAAMwF,SAASC,eAAezE,EAAKvC,IAAIa,QAAS,EAAOsN,EAAgBlC,UAAU1J,KAC7FA,EAAK4B,UAKR,QAKL,kBAAC,GAAD,KACC,yBAAKhD,UAAU,qBACd,kBAAC,EAAD,CAAYC,QAAQ,sBAAsBpB,GAAG,iBAC1CE,QAAS,SAAAqB,GACR,EAAK3B,MAAMyM,UAAUoE,SAAQ,SAAAzD,GAC5BjG,SAAS6b,KAAKE,YAAY/b,SAASC,eAAegG,EAAQhN,QAE3DmO,EAAgBnC,sB,GA7BLjL,IAAMC,YAsCZ6N,gBACd,SAAChP,GAAD,MAAY,CACXwM,UAAYxM,EAAMiP,UAAUzC,cAE7B,SAAC0C,GAAD,MAAe,CACdZ,gBAAkBa,YAAmBC,EAAkBF,MAL1CF,CAObkyB,IE0FaC,I,yDAnId,aAAc,IAAD,8BACZ,gBAaD36B,MAAQ,CACPC,OAAQ,CACPpG,QAAS,SAACqB,GACT,OAAQA,EAAEgF,OAAOvG,IACjB,IAAK,YACA,EAAK6D,WAAW,eAAe,EAAKQ,YAAY,cACpD,MACD,IAAK,UAEJJ,GAAOslB,QAAQ,YAAa,uCAAU,QADrB,CAAE5nB,MAAO,QAASC,OAAQ,UAE3C,MACD,IAAK,YAEJqC,GAAOslB,QAAQ,SAAU,wCAAW,QADnB,CAAE5nB,MAAO,QAASC,OAAQ,QAASq/B,KAAK,IAEzD,MACD,IAAK,aAEJh9B,GAAOslB,QAAQ,YAAa,2BAAQ,QADpB,CAAE5nB,MAAO,QAASC,OAAQ,cA9BjC,EAyCbiC,WAAa,SAACsD,GAQb,OAFA,EAAKG,QAAQH,IAEN,GAjDK,EAuDbG,QAAU,SAACH,GACV,OAAQA,GACR,IAAK,aACJ,EAAKtH,MAAMqhC,OAAOjO,SAAS,EAAG,YAAa,QA1DhC,EAkEb5uB,YAAc,SAAC8C,GACd,IAAI1C,EAAe,IAAIC,GACvB,IACC,OAAQyC,GACR,IAAK,aACJ1C,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAM0Q,QACpCpO,SAAS,sBACTpC,YAAY,WAEbd,EAAagB,WAAW,SAAU,EAAK5F,MAAMqhC,OAAOt5B,mBACpDnD,EAAaqB,SAGb,MAAOC,GACRxB,QAAQC,IAAIuB,KArFD,EA4Fbd,SAAW,SAACgB,GACX,IACC,OAAQA,EAAIjG,IACZ,IAAK,aAGJiE,GAAO0kB,WAAW,kBAAkB,GACpCvG,OAAO+e,SAGP,MAAOp7B,GACRxB,QAAQC,IAAIuB,KArGb,EAAKlG,MAAQ,CACZqhC,OAAQl5B,GAAQC,SAASC,eAE1B,EAAK7B,MAAMC,OAAOpG,QAAU,EAAKmG,MAAMC,OAAOpG,QAAQ0G,KAA1B,gBALhB,E,gEAYZ3G,KAAKJ,MAAMqhC,OAAOhO,WAAWjvB,GAAO8kB,WAAW,kB,+BAmG/C,OACC,kBAAC,IAAMze,SAAP,KACC,kBAAC,GAAD,KACC,yBAAKnK,MAAS,CAAC2S,QAAS,SACvB,yBAAK3R,UAAY,2BAGnB,kBAAC,GAAD,KACC,yBAAKA,UAAU,uBAId,kBAAC,EAAD,CAAYC,QAAQ,iBAAiBpB,GAAG,YAAYE,QAASD,KAAKoG,MAAMC,OAAOpG,YAGjF,kBAAC,GAAD,CAAYuM,KAAMxM,KAAKL,MAAM6M,KAAMqS,SAAY7e,KAAKL,MAAMkf,gB,GAlIzC/d,IAAMC,YCQrBogC,G,kDAIL,aAAe,IAAD,8BACb,gBAODvhC,MAAQ,CACPqhC,OAAQl5B,GAAQC,SAASC,cACzBuE,KAAMxI,GAAO8kB,WAAW,WAAWxc,QAAO,SAAAhK,GAAI,MAAqB,OAAjBA,EAAK8+B,SAAqC,OAAjB9+B,EAAK8+B,YAVnE,EAkCdh7B,MAAQ,CACP+b,OAAQ,CACPkf,eAAgB,SAAC//B,GACX0C,GAAO8kB,WAAW,oBAAmBxnB,EAAE6b,YAAc,8BAE3DmkB,SAAU,SAAChgC,GACL0C,GAAO8kB,WAAW,mBAClB,EAAKllB,WAAW,aAAa,EAAKQ,YAAY,eAzCxC,EAkDdR,WAAa,SAACsD,GAQb,OAFA,EAAKG,QAAQH,IAEN,GA1DM,EAgEdG,QAAU,SAACH,GACV,OAAOA,GACP,IAAK,WACJ,EAAKtH,MAAMqhC,OAAOjO,SAAS,EAAG,YAAa,QAnE/B,EA4Ed5uB,YAAc,SAAC8C,GACd,IAAI1C,EAAe,IAAIC,GACvB,IACC,OAAOyC,GACP,IAAK,WACJ1C,EAAaE,WAAWwC,GACxB1C,EAAaG,YAAYH,EAAaI,UAAUC,IAAIyC,QACpD9C,EAAaO,YAAY,EAAKC,UAC9BR,EAAa8wB,UAAS,GACtB9wB,EAAaS,UAAU,CACtBC,IAAKV,EAAaI,UAAUM,IAAIC,KAChCC,MAAOZ,EAAaI,UAAUQ,MAAM0Q,QACpCpO,SAAS,sBACTpC,YAAY,UAEbd,EAAagB,WAAW,QAAS,EAAK5F,MAAMqhC,OAAOt5B,mBACnDnD,EAAaqB,SAKb,MAAOC,GACRxB,QAAQC,IAAIuB,KAlGA,EAyGdd,SAAW,SAACgB,GACJA,EAAIjG,IAxG2B,KAAlCiE,GAAO8kB,WAAW,eACrB,EAAK1iB,MAAM+b,OAAOkf,eAAiB,EAAKj7B,MAAM+b,OAAOkf,eAAe16B,KAAjC,gBACnC,EAAKP,MAAM+b,OAAOmf,SAAW,EAAKl7B,MAAM+b,OAAOmf,SAAS36B,KAA3B,iBAJjB,E,gEAkBa3G,KAAKL,MAAxBuO,gBACS5C,QAAQtH,GAAOknB,iBAE/BlrB,KAAKJ,MAAMqhC,OAAOhO,WAAWjvB,GAAO8kB,WAAW,gBAET,KAAlC9kB,GAAO8kB,WAAW,eACrB3G,OAAOhB,iBAAiB,eAAgBnhB,KAAKoG,MAAM+b,OAAOkf,gBAC1Dlf,OAAOhB,iBAAiB,SAAUnhB,KAAKoG,MAAM+b,OAAOmf,a,6CAIf,KAAlCt9B,GAAO8kB,WAAW,eACrB3G,OAAOf,oBAAoB,eAAgBphB,KAAKoG,MAAM+b,OAAOkf,gBAC7Dlf,OAAOf,oBAAoB,SAAUphB,KAAKoG,MAAM+b,OAAOmf,a,+BAsF9C,IAAD,EAC2BthC,KAAKL,MAAlCiN,EADE,EACFA,SAAUH,EADR,EACQA,KAAML,EADd,EACcA,UAChB8B,EAAmBlO,KAAKL,MAAxBuO,gBACP,OACC,kBAAC,GAAD,KACC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAQ1B,KAAMxM,KAAKJ,MAAM4M,KAAMqS,SAAY3Q,EAAgB5C,WAE5D,kBAAC,GAAD,KAIC,kBAAC,GAAD,CAAW5J,MAAM,QAEhB,kBAAC,GAAD,CACC8K,KAAQxM,KAAKJ,MAAM4M,KACnBC,KAAMA,EACNG,SAAYA,EACZiS,SAAY3Q,EAAgB5C,QAC5Bi1B,UAAaryB,EAAgB1C,QAC7Bi1B,SAAYvyB,EAAgBvC,SAC5Bg1B,SAAYzyB,EAAgBtC,SAC5B4a,WAActY,EAAgBxC,WAC9Bk1B,aAAgB1yB,EAAgBzC,eAInC,kBAAC,GAAD,KACC,kBAAC,GAAD,CAAQW,UAAaA,U,GArJJtL,IAAMC,WA2Jb6N,gBACd,SAAChP,GAAD,MAAY,CACXgN,SAAWhN,EAAMiP,UAAUjC,SAC3BH,KAAO7M,EAAMiP,UAAUpC,KACvBL,UAAYxM,EAAMiP,UAAUzC,cAE7B,SAAC0C,GAAD,MAAe,CACdZ,gBAAkBa,YAAmBC,EAAkBF,MAP1CF,CASbuyB,I,SC1IaI,G,oQAjBb,IAAMrL,EAAQvN,eAAeI,QAAQ,SAErC,OACC,kBAAC,IAAM1e,SAAP,KAEI6rB,EAAU,kBAAC,IAAD,CAAUpM,MAAOA,IAAO,kBAAC,GAAD,OAEjC,kBAAC,KAAD,KACC,kBAAC,KAAD,CAAO+U,KAAM,IAAKC,OAAO,EAAMn7B,UAAWq0B,KAC1C,kBAAC,KAAD,CAAO6G,KAAM,QAASC,OAAO,EAAMn7B,UAAW,kBAAC,IAAD,CAAUmmB,MAAOA,IAAO,kBAAC,GAAD,e,GAjB7DhpB,IAAMC,W,yBCLlBygC,GAAUC,eAGhBnhB,IAAS4C,OAAQ,kBAAC,KAAD,CAAQse,QAASA,IAAjB,KAA4B,kBAAC,KAAD,CAAO3C,KAAK,IAAKl7B,UAAY49B,KAAzD,KAA4Ez6B,SAASC,eAAe,U,qGCV9F,qBAAZgjB,UAIT2X,EAAQ,KAAkCC,SAC1Cxf,OAAO4H,QAAU2X,EAAQ,MAI3BA,EAAQ,KACRA,EAAQ,KAGR93B,OAAOC,OAAS63B,EAAQ,M","file":"public/js/main.7e06f975.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass BasicButton extends React.Component{\r\n    constructor (props) {\r\n      super(props);\r\n      this.state = { disbaled : this.props.disabled }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tmt: '10px',\r\n\t\tmr: '5px',\r\n\t\tmb: '0px',\r\n\t\tml: '0px',\r\n\t\tdisabled: false,\r\n\t}\r\n    render () {\r\n      return (\r\n          <button id = {this.props.id} onClick = {this.props.onClick} disabled={this.props.disabled}\r\n                  style={{\r\n                    marginTop: this.props.mt,\r\n                    marginRight: this.props.mr,\r\n                    marginBottom: this.props.mb,\r\n                    marginLeft: this.props.ml,\r\n                    visibility : (this.props.hidden) ? 'hidden' :  'visible'\r\n                  }}\r\n          >\r\n            {this.props.value}\r\n          </button>\r\n      );\r\n    }\r\n}\r\nclass IconButton extends React.Component{\r\n  render () {\r\n    return (\r\n      <button className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n    );\r\n  }\r\n}\r\nclass BadgeButton extends React.Component{\r\n  render () {\r\n    return (\r\n      <button className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n    );\r\n  }\r\n}\r\nexport {BasicButton, IconButton, BadgeButton};\r\n","import React from 'react';\r\nimport {\r\n\tRadialBarChart, RadialBar, Legend, Tooltip, \r\n\tLineChart, CartesianGrid, XAxis,YAxis, Line \r\n} from 'recharts';\r\nconst data = [\r\n\t\t{\r\n\t\t\t\"name\": \"18-24\",\r\n\t\t\t\"uv\": 31.47,\r\n\t\t\t\"pv\": 2400,\r\n\t\t\t\"fill\": \"#8884d8\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"25-29\",\r\n\t\t\t\"uv\": 26.69,\r\n\t\t\t\"pv\": 4567,\r\n\t\t\t\"fill\": \"#83a6ed\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"30-34\",\r\n\t\t\t\"uv\": -15.69,\r\n\t\t\t\"pv\": 1398,\r\n\t\t\t\"fill\": \"#8dd1e1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"35-39\",\r\n\t\t\t\"uv\": 8.22,\r\n\t\t\t\"pv\": 9800,\r\n\t\t\t\"fill\": \"#82ca9d\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"40-49\",\r\n\t\t\t\"uv\": -8.63,\r\n\t\t\t\"pv\": 3908,\r\n\t\t\t\"fill\": \"#a4de6c\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"50+\",\r\n\t\t\t\"uv\": -2.63,\r\n\t\t\t\"pv\": 4800,\r\n\t\t\t\"fill\": \"#d0ed57\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"unknow\",\r\n\t\t\t\"uv\": 6.67,\r\n\t\t\t\"pv\": 4800,\r\n\t\t\t\"fill\": \"#ffc658\"\r\n\t\t}\r\n\t]\r\nclass ScrmLineBarChart extends React.Component {\r\n\tonClick = (e) => {\r\n\r\n\t}\r\n\tonMouseEnter = (e) => {\r\n\t\t\r\n\t}\r\n\tonMouseMove = (e) => {\r\n\t\t\r\n\t}\r\n\tonMouseLeave = (e) => {\r\n\t\t\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-line-chart-div\">\r\n\t\t\t\t<LineChart width={this.props.width} height={this.props.height} data={this.props.data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t<XAxis dataKey={this.props.options.XAsisKey} />\r\n\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.options.dataKey.map((item, key) => {\r\n\t\t\t\t\t\t\t\treturn <Line type=\"monotone\" dataKey={item.key} key={key} stroke={item.color} />\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t</LineChart>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nclass ScrmRadialBarChart extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-chart-div\">\r\n\t\t\t\t\t{/* <RadialBar/> */}\r\n\t\t\t\t\t<RadialBarChart \r\n\t\t\t\t\t\twidth={730} \r\n\t\t\t\t\t\theight={250} \r\n\t\t\t\t\t\tinnerRadius=\"10%\" \r\n\t\t\t\t\t\touterRadius=\"80%\" \r\n\t\t\t\t\t\tdata={data} \r\n\t\t\t\t\t\tstartAngle={180} \r\n\t\t\t\t\t\tendAngle={0}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RadialBar minAngle={15} label={{ fill: '#666', position: 'insideStart' }} background clockWise={true} dataKey='uv' />\r\n\t\t\t\t\t\t<Legend iconSize={10} width={120} height={140} layout='vertical' verticalAlign='middle' align=\"right\" />\r\n\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t</RadialBarChart>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {ScrmRadialBarChart, ScrmLineBarChart};","import PwdInit   from 'containers/base/common/pwdInit.js';\r\nimport pwdChg   from 'containers/base/common/pwdChg.js';\r\nimport COM010010 from 'containers/com/COM010010';\r\nimport COM010020 from 'containers/com/COM010020';\r\n// import SYS030001 from 'containers/sys/SYS030001';\r\n\r\nexport const popRoute = [\r\n    { id: 'pwdInit',  component: PwdInit },\r\n    { id: 'pwdChg',  component: pwdChg },\r\n    { id: 'COM010010',  component: COM010010 },\r\n    { id: 'COM010020',  component: COM010020 },\r\n    // { id: 'SYS030001',  component: SYS030001 },\r\n];","import React from 'react'\r\nimport {ComLib, TransManager, StrLib} from 'common';\r\n\r\nclass PwdInit extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        // state 초기화\r\n        this.state = {\r\n            open : false,\r\n            param : {\r\n                id : '',\r\n                name : '',\r\n                telNo : ''\r\n             }\r\n        }\r\n        // 이벤트 바인딩\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.event.input.onChange = this.event.input.onChange.bind(this)\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            // 로그인 체크\r\n            case 'PWD_INIT_C01' :\r\n                if (StrLib.isNull(this.state.param.id)) {\r\n                    ComLib.openDialog('A', 'ID를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.name)) {\r\n                    ComLib.openDialog('A', '사용자 성명을 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.telNo)) {\r\n                    ComLib.openDialog('A', '전화번호를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 로그인 체크\r\n                case 'PWD_INIT_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.init);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        // sqlmapid:\"COM.C_doInitPwd\",\r\n                        datasetsend:\"dsSendData\",\r\n                        datasetrecv:\"dsRecvData\",\r\n                    });\r\n                    transManager.addDataset('dsSendData', [{ USR_CD : this.state.param.id, USR_NM: this.state.param.name, TEL_NO: this.state.param.birth }]);\r\n                    transManager.agent();\r\n                    break;\r\n\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        console.log('callback start');\r\n        console.log(res);\r\n        try  {\r\n            switch (res.id) {\r\n                case 'PWD_INIT_C01' :\r\n                    console.log(res.data);\r\n                    alert(res.data.dsRecvData.password);\r\n                    this.props.onClose();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnPwdInitConfirm' : \r\n                        if (this.validation('PWD_INIT_C01')) {\r\n                            this.transaction('PWD_INIT_C01');\r\n                        }\r\n                        break;\r\n                    case 'btnPwdInitCancel' :\r\n                        this.props.onClose();\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'txtInitId'    : this.setState({...this.state, param : {...this.state.param, id : e.target.value}}); break;\r\n                    case 'txtInitPwd'   : this.setState({...this.state, param : {...this.state.param, name : e.target.value}}); break;\r\n                    case 'txtInitTelNo' : this.setState({...this.state, param : {...this.state.param, telNo : e.target.value}}); break;\r\n                    default: break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"scrm-pwdinit\">\r\n                <div className=\"scrm-pwd-init-div\">\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>ID</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitId' value={this.state.param.id} placeholder={'사용자 ID를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div> \r\n                    <div className = 'scrm-login-input'>\r\n                        <label>성명</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitPwd' value={this.state.param.name} placeholder={'성명을 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>전화번호</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitTelNo' value={this.state.param.telNo} placeholder={'전화번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-btn-div'>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PwdInit;","import React from 'react';\r\nimport {ComLib, StrLib, TransManager, DataLib} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n//  화면 ID     : pwdChg\r\n//  화면명      : 비밀번호 변경\r\n//  화면 종류   : 팝업\r\n//  작성자      : HW.LEE\r\n//  작성일자    : 2020.07.26\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass PwdChg extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\tdsPwdInfo: DataLib.datalist.getInstance([{USR_CD: '', CUR_PWD: '', NEW_PWD: '', CON_PWD: ''}]),\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this)\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.location !== undefined) {\r\n\t\t\tComLib.setStateRecords(this, \"dsPwdInfo\", this.props.location.state.param);\r\n\t\t\tconsole.log(this.state.dsPwdInfo);\r\n\t\t} else {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tevent = {\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptUsrCd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptCurPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CUR_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptNewPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"NEW_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptConPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CON_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnPwdchgConfirm':\r\n\t\t\t\t\tif (this.validation('PWDCHG_R01')) this.transaction('PWDCHG_R01');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnPwdchgCancel':\r\n\t\t\t\t\t//window.location = '/';\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid).remove();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t * PWDCHG_R01 : 인증 / 신규 비밀번호 체크\r\n\t * PWDCHG_C01 : 신규 비밀번호 등록\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"USR_CD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '아이디를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CUR_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '현재 비밀번호를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '새로운 비밀번호를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"CUR_PWD\") === this.state.dsPwdInfo.getValue(0, \"NEW_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', '현재 비밀번호와 신규 비밀번호가 같습니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CON_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '신규 비밀번호를 재 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") !== this.state.dsPwdInfo.getValue(0, \"CON_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', '신규 비밀번호와 재입력된 비밀번호가 다릅니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Sen data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkCurUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkCurPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkNewPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkNewPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.C_addUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\tif (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'USR') {\r\n\t\t\t\t\tComLib.openDialog('A', '아이디가 없습니다.');\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'N') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 오류 입니다.');\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'Y') {\r\n\t\t\t\t\tif (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'Y') {\r\n\t\t\t\t\t\tComLib.openDialog('A', '최근 6개월 이내 사용된 비밀번호 입니다.');\r\n\t\t\t\t\t} else if (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'N') {\r\n\t\t\t\t\t\tif (this.validation('PWDCHG_C01')) this.transaction('PWDCHG_C01');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\t//ComLib.openDialog('A', '비밀번호가 변경되었습니다.');\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tdocument.getElementById('_btnClose').click();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className = {(this.props.options) ? 'scrm-login-pop' : 'scrm-login'}>\r\n\t\t\t\t<div className = \"scrm-login-div\">\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'iptUsrCd' value = {this.state.dsPwdInfo.records[0][\"USR_CD\"]} placeholder = {'아이디를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>현재 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptCurPwd' value = {this.state.dsPwdInfo.records[0][\"CUR_PWD\"]} placeholder = {'현재 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>신규 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptNewPwd' value = {this.state.dsPwdInfo.records[0][\"NEW_PWD\"]} placeholder = {'신규 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>비밀번호 확인</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptConPwd' value = {this.state.dsPwdInfo.records[0][\"CON_PWD\"]} placeholder = {'신규 비밀번호를 재입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn'><button id = 'btnPwdchgConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn'><button id = 'btnPwdchgCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PwdChg;","import React from 'react';\r\nimport {SubFullPanel, HtmlEditor, CustomSlide as Slide} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DateLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone] \r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsrchFileParam : '',\r\n\t\t\tdsNoteInfo : [],\r\n\t\t\tdsNoteFileInfo : [],\r\n\t\t\tdsModifyInfo : { BORD_MNG_NO: '', TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', REG_CENT: '', DEL_YN : '', REG_DTM : '', REG_ID : '' , CHG_ID: '', CHG_DTM: ''}\r\n\t\t}\r\n\t\tthis.event.grid.onRowClicked = this.event.grid.onRowClicked.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction('COM010010_R01');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tswitch (id) {\r\n\t\t\tcase 'COM010010_R01' :\r\n\t\t\t\tthis.transaction('COM010010_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'COM010010_R01' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'COM010010_R02' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteFileInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteFileInfo', [{BORD_MNG_NO : this.state.srchFileParam}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'COM010010_R01' : \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tdsNoteInfo : res.data.dsNoteInfo,\r\n\t\t\t\t\t\tdsNoteFileInfo : [],\r\n\t\t\t\t\t\tdsModifyInfo : { TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', DEL_YN : '', REG_DT : '', REG_USR : '' , MFY_ER: '', MFY_DT: ''}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010010_R02' : \r\n\t\t\t\tthis.setState({...this.state, dsNoteFileInfo : res.data.dsNoteFileInfo});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :  break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tgrid : {\r\n\t\t\tonRowClicked  : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'grdNoteInfo' :\r\n\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n\t\t\t\t\t\t\t,   srchFileParam : e.data.BORD_MNG_NO\r\n\t\t\t\t\t\t}, () => this.transaction('COM010010_R02'));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<Grid   id = 'grdNoteInfo' ref='grdNoteInfo' height=\"200px\"\r\n\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t{   headerName : 'No',          field : 'BORD_MNG_NO',  colId : 'BORD_MNG_NO',  width: 80      },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록일자',    field : 'REG_DTM',      colId : 'REG_DTM',      width: 120,\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n\t\t\t\t\t\t\t\t{   headerName : '유효일자',    field : 'VALD_DT',      colId : 'VALD_DT',      width: 120,        \r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n\t\t\t\t\t\t\t\t{   headerName : '제목',        field : 'TITLE',        colId : 'TITLE',        width: 200      },\r\n\t\t\t\t\t\t\t\t{   headerName : '내용구분',    field : 'CONT_DV',      colId : 'CONT_DV',      width: 120,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor', \r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.setGridComCodeComboCellVal('106') },\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '106')            },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록센터',    field : 'CENT_NM',      colId : 'CENT_NM',     width: 120       },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록자',      field : 'REG_ID',       colId : 'REG_ID',      width: 110       }\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tdata = {this.state.dsNoteInfo}\r\n\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<HtmlEditor id=\"iptNoteCont\"  value={this.state.dsModifyInfo.CONT} readOnly={true} toolbarHidden={true} height={320}/>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t{(this.state.dsNoteFileInfo.length !== 0) ? <Slide data={this.state.dsNoteFileInfo} height={150}></Slide> : <span>{'조회된 파일 없습니다.'}</span> }\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, CentListSelectBox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    \r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default View;","import { createAction, handleActions} from 'redux-actions';\r\n\r\nconst ADD_POP = 'base/ADD_POP';\r\nconst DELETE_POP = 'base/DELETE_POP';\r\nconst DELETE_ALL_POP = 'base/DELETE_ALL_POP';\r\nconst SELECT_POP = 'base/SELECT_POP';\r\nconst ADD_TRAY = 'base/ADD_TRAY';\r\nconst DELETE_TRAY = 'base/DELETE_TRAY';\r\nconst DELETE_ALL_TRAY = 'base/DELETE_ALL_TRAY';\r\nconst SELECT_TRAY = 'base/SELECT_TRAY';\r\nconst PREVIOUS_TRAY = 'base/PREVIOUS_TRAY';\r\nconst NEXT_TRAY = 'base/NEXT_TRAY';\r\n\r\nexport const addTray\t= createAction(ADD_TRAY);\r\nexport const delTray\t= createAction(DELETE_TRAY);\r\nexport const delAllTray\t= createAction(DELETE_ALL_TRAY);\r\nexport const selectTray\t= createAction(SELECT_TRAY);\r\nexport const prevTray\t= createAction(PREVIOUS_TRAY);\r\nexport const nextTray\t= createAction(NEXT_TRAY);\r\n\r\nexport const addPop\t\t= createAction(ADD_POP);\r\nexport const delPop\t\t= createAction(DELETE_POP);\r\nexport const delAllPop\t= createAction(DELETE_ALL_POP);\r\nexport const selectPop\t= createAction(SELECT_POP);\r\n\r\nconst initState = {\r\n\tselected : '',\r\n\ttray : [],\r\n\tpopupList : []\r\n}\r\n\r\nexport default handleActions ({\r\n\t[ADD_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.concat(popup) };\r\n\t},\r\n\t[DELETE_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.filter(item => item.id !== popup.id) };\r\n\t},\r\n\t[DELETE_ALL_POP] : (state, action) => {\r\n\t\treturn { ...state , popupList : [] };\r\n\t},\r\n\t[SELECT_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.filter(item => item.id !== popup.id) };\r\n\t},\r\n\t[ADD_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (state.tray.indexOf(state.tray.filter(item => item.MNU_ID === menu.MNU_ID)[0]) < 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray.concat(menu),\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[DELETE_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (parseInt(state.tray.findIndex(element => element === menu)) !== 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray : state.tray.filter(item => item.MNU_ID !== menu.MNU_ID),\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element.MNU_ID === menu.MNU_ID)) - 1]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t},\r\n\t[DELETE_ALL_TRAY] : (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttray : [state.tray[0]],\r\n\t\t\tselected : state.tray[0]\r\n\t\t};\r\n\t},\r\n\t[SELECT_TRAY] : (state, { payload : menu }) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttray: state.tray,\r\n\t\t\tselected : menu\r\n\t\t}\r\n\t},\r\n\t[PREVIOUS_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (parseInt(state.tray.findIndex(element => element === menu)) === 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element === menu)) - 1]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[NEXT_TRAY] : (state, { payload : menu }) => {\r\n\t\tif(parseInt(state.tray.findIndex(element => element === menu)) === state.tray.length-1) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element === menu)) + 1]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}, initState);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {popRoute} from 'routes/popupRoute.js';\r\nimport Draggable from 'react-draggable';\r\nimport DialogBox from 'react-modeless';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\n\r\nclass AlertDialog extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmessage : '',\r\n\t\tonClose : () => {return false;}\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClose = () => { this.props.onClose();};\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tonClose={this.onClose}\r\n\t\t\t\tcontainerClassName={\"scrm-alert-modal\"}\r\n\t\t\t\tdefaultPosition={{x: 0, y: 0}}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t\tclickBackdropToClose={true}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClose}>&#xd7;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<h2>{this.props.message}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ConfirmDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\treturnVal : false\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false ,\r\n\t\tmessage :  '',\r\n\t\tonReturnVal : () =>  { return false; } ,\r\n\t\tonClose: () =>  { return false; }\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonReturnVal : PropTypes.func.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClick = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase 'btnConfirm' :  this.setState({...this.state, returnVal : true}, () => this.onClose()); break;\r\n\t\t\tcase 'btnCancel' : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t\tdefault : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t}\r\n\t}\r\n\tonClose = () => {\r\n\t\tthis.props.onClose();\r\n\t\tthis.props.onReturnVal(this.state.returnVal);\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tdefaultPosition={{x: 0, y: 0}}\r\n\t\t\t\tcontainerClassName={\"scrm-alert-modal\"}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClick.bind(this)}>&#xd7;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<h2>{this.props.message}</h2>\r\n\t\t\t\t\t\t<button id='btnConfirm' style={{positions:'relative', float: 'center', width: '80px', height : '30px', marginRight: '5px'}} onClick ={this.onClick.bind(this)}>예</button>\r\n\t\t\t\t\t\t<button id='btnCancel' style={{positions:'relative', float: 'center', width: '80px', height : '30px', marginLeft: '5px'}} onClick ={this.onClick.bind(this)}>아니오</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass PopupDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false ,\r\n\t\t\tmodal : true\r\n\t\t}\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onMinimize = this.onMinimize.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmodaless : false,\r\n\t\tposition : {x : 0, y: 0}\r\n\t};\r\n\tstatic propTypes = { onClose: PropTypes.func };\r\n\tonClose = (e) => {\r\n\t\tthis.props.onClose(e);\r\n\t}\r\n\tonMinimize = (e) => {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\tAppModuleAction.addPop({id : this.props.popupdivid, name : this.props.name});\r\n\t\tdocument.getElementById(this.props.popupdivid).hidden = true;\r\n\r\n\t}\r\n\tonCallbackFunc = (data) => {this.props.onCallbackFunc(data);}\r\n\trender () {\r\n\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tonMouseDown = {(e) => {}}\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tnoBackdrop={this.props.modaless}\r\n\t\t\t>\r\n\t\t\t\t<Draggable\r\n\t\t\t\t\tonClick = {(e) => {}}\r\n\t\t\t\t\tdefaultPosition = {this.props.position}\r\n\t\t\t\t\tpositionOffset = {{x: '-50%', y: 0}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className = \"scrm-popup-modal-content\" style={{width: this.props.options.width, height: this.props.options.height}}>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-header\">\r\n\t\t\t\t\t\t\t<div style={{float: 'left'}}>\r\n\t\t\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClose}>&#xd7;</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(this.props.modaless)\r\n\t\t\t\t\t\t\t\t\t? <button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onMinimize}>-</button>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-body\" style={{overflow: 'auto'}}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpopRoute.filter(item => item.id === this.props.url).map((comp, key) => {\r\n\t\t\t\t\t\t\t\t\treturn <comp.component popupdivid={this.props.popupdivid} onCallbackFunc={this.onCallbackFunc} key={'pop_' + comp.id + '_' + key} onClose={this.onClose} options = {this.props.options}/>}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Draggable>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ModalLoading extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tisOpen: false\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen = {this.props.isOpen}\r\n\t\t\t\tdefaultPosition = {{x: 0, y: 0}}\r\n\t\t\t\t//containerClassName = {\"scrm-alert-modal\"}\r\n\t\t\t\tnoBackdrop = {false}\r\n\t\t\t\tbackdropStyle={{background: 'transparent'}}\r\n\t\t\t>\r\n\t\t\t\t{/*<div className={\"scrm-loading\"}/>*/}\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nexport default {\r\n\tAlertDialog, ConfirmDialog, ModalLoading,\r\n\tPopupDialog : connect(\r\n\t\t(state) => ({\r\n\t\t\tpopupList : state.appModule.popupList,\r\n\t\t}),\r\n\t\t(dispatch) => ({\r\n\t\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t\t})\r\n\t)(PopupDialog)\r\n}","import React from 'react';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\n\r\nimport { Progress } from \"react-sweet-progress\";\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\n\r\nimport { TransManager, ComLib } from \"common\";\r\n\r\nclass InputFileUpload extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid : this.props.id || '',\r\n\t\t\tfiles : null,\r\n\t\t\tuploadPercent: 0,\r\n\t\t\tuploadStatus: \"\",\r\n\t\t\tshowProgressbar: false\r\n\t\t}\r\n\t\tthis.getUploadParams = this.getUploadParams.bind(this);\r\n\t\tthis.handleChangeStatus = this.handleChangeStatus.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.setProgressPercent = this.setProgressPercent.bind(this);\r\n\t\tthis.callback = this.callback.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\theight : 200,\r\n\t\thandleChangeStatus : () => { return;},\r\n\t\thandleSubmit : () => { return;}\r\n\t}\r\n\tgetUploadParams = () => {\r\n\t\treturn { url: 'https://httpbin.org/post' }\r\n\t}\r\n\thandleChangeStatus = ({ meta }, status) => {\r\n\t\tthis.props.handleChangeStatus({ id : this.state.id, data : {status : status, mete: meta}})\r\n\t}\r\n\tsetProgressPercent = (progressEvent) => {\r\n\t\tthis.setState({...this.state, uploadPercent: Math.floor((progressEvent.loaded * 100) / progressEvent.total)});\r\n\t\tif (this.state.uploadPercent === 100) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state, uploadStatus: \"success\",\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleSubmit = (files, allFiles) => {\r\n\t\tif (this.validate(files)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tshowProgressbar: false,\r\n\t\t\t\tfiles : files\r\n\t\t\t}, () => {\r\n\t\t\t\tconsole.log(this.state);\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tArray.from(this.state.files).forEach((f) => formData.append(\"files\", f.file));\r\n\r\n\t\t\t\t//formData.set(\"urlPath\", 'UPLOAD');\r\n\t\t\t\t//formData.set(\"transId\", 'UPLOAD');\r\n\r\n\t\t\t\tlet transManager = new TransManager();\r\n\t\t\t\ttransManager.setTransId(\"_FILEUPLOAD\");\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.upload);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.upload,\r\n\t\t\t\t\tdatasetsend:\"fileupload\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('fileupload', [{updata: formData}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t/*\r\n\t\t\t\ttransManager.setTransUrl(\"/scrm/mfu/upload\");\r\n\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tArray.from(this.state.files).forEach((f) => formData.append(\"files\", f.file));\r\n\r\n\t\t\t\tformData.set(\"urlPath\", 'UPLOAD');\r\n\t\t\t\tformData.set(\"transId\", 'UPLOAD');\r\n\r\n\t\t\t\ttransManager.addSendDataset(\"formData\", { formData: formData });\r\n\t\t\t\ttransManager.upload(this.setProgressPercent, this.callback);\r\n\r\n\t\t\t\tallFiles.forEach(f => f.remove());\r\n\t\t\t\t*/\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\t\tcase \"UPLOAD\":\r\n\t\t\t\t\tif (res.data.gifnoc.ERR_CODE === 0) {\r\n\t\t\t\t\t\tthis.setState({...this.state, uploadStatus : \"success\"}\r\n\t\t\t\t\t\t, () => {\r\n\t\t\t\t\t\t\tthis.props.handleSubmit({ id : this.state.id, files : this.state.files});\r\n\t\t\t\t\t\t\tsetTimeout(this.setState({...this.state,  files : null, showProgressbar: false, uploadPercent : 0, uploadStatus : \"\"}), 2000);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({...this.state, uploadStatus: \"error\"});\r\n\t\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\tvalidate = (files) => {\r\n\t\tlet size = 0;\r\n\t\tfiles.forEach((item) => { size += parseInt(item['file']['size']); })\r\n\t\t// if (Math.round(size/(1024*1024)) > 5) {\r\n\t\t// \tComLib.openDialog('A', '업로드할 파일의 총 용랑은 5MB 이하로 제한됩니다.');\r\n\t\t// \treturn false;\r\n\t\t// }\r\n\t\tif (files.length > 10) {\r\n\t\t\tComLib.openDialog('A', '첨부파일의 갯수는 최대 10개로 제한됩니다.');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\trender () {\r\n\t\t//this.setState({...this.state,  showProgressbar: false, uploadPercent : 0, uploadStatus : \"\"});\r\n\t\treturn  (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{   this.state.showProgressbar\r\n\t\t\t\t\t? <Progress percent={this.state.uploadPercent} status={this.state.uploadStatus}/>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t<Dropzone\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tinputContent=\"클릭 또는 파일을 드래그 하세요.\"\r\n\t\t\t\t\tinputWithFilesContent = \"파일추가\"\r\n\t\t\t\t\tsubmitButtonContent = \"업로드\"\r\n\t\t\t\t\tgetUploadParams={this.getUploadParams}\r\n\t\t\t\t\tonChangeStatus={this.handleChangeStatus}\r\n\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t// maxSizeBytes = {1024 * 1024 * 3}\r\n\t\t\t\t\tstyles={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdropzone: { height: this.props.height } ,\r\n\t\t\t\t\t\t\tpreview :  { height: '10px', padding: '10px'},\r\n\t\t\t\t\t\t\tinputLabel : { fontColor: 'black'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass MultiFileUpload extends React.Component {\r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass IconFileUpload extends React.Component {\r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport {InputFileUpload, MultiFileUpload, IconFileUpload}","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport {StrLib, DateLib} from 'common';\r\n\r\n\r\nclass DateComponent extends React.Component {\r\n    state = { date: new Date() }\r\n    componentDidMount() {\r\n        if (this.props.value === null || this.props.value === undefined) {\r\n\r\n        }\r\n    }\r\n    onChange = date => this.setState({ date })\r\n    getValue () {\r\n        return DateLib.getStringDate(this.state.date);\r\n    }\r\n    isPopup() {return true;}\r\n    render() {\r\n        return ( <DatePicker onChange={this.onChange} value={this.state.date} />);\r\n    }\r\n\r\n}\r\nclass TimeComponent extends React.Component {\r\n    state = { time: '00:00'}\r\n    onChange = time => this.setState({ time })\r\n    getValue () {return this.state.time;}\r\n    isPopup() {return true;}\r\n    render() {\r\n        return ( <TimePicker onChange={this.onChange} value={this.state.time} format=\"HH:m\" disableClock={true} maxTime={'23:59:59'}/> );\r\n    }\r\n}\r\nclass RangeDateComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { strtDate: '', endDate : '' }\r\n    }\r\n    static defaultProps = {\r\n        STRT_DT : '', END_DT : ''\r\n    }\r\n    \r\n    isPopup() {return true;}\r\n    onStrtDtChange = date => this.setState({ ...this.state, strtDate : date });\r\n    onEndDtChange = date => this.setState({ ...this.state, endDate : date });\r\n    getValue () {\r\n        let strtDate = DateLib.getStringDate(this.state.strtDate);\r\n        let endDate = DateLib.getStringDate(this.state.endDate);\r\n\r\n        if (StrLib.isNull(endDate) && StrLib.isNull(strtDate)) {\r\n            this.props.data.STRT_DT = '';\r\n            this.props.data.END_DT = '';\r\n            return '';\r\n        } else {\r\n            if (StrLib.isNull(endDate)) {\r\n                this.props.data.STRT_DT = strtDate;\r\n                return strtDate;\r\n            }\r\n            if (StrLib.isNull(strtDate)) {\r\n                this.props.data.END_DT = endDate;\r\n                return endDate;\r\n            }\r\n            this.props.data.STRT_DT = strtDate;\r\n            this.props.data.END_DT = endDate;\r\n            return strtDate + endDate;\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.setState({strtDate : DateLib.getDateYymmdd(this.props.data.STRT_DT), endDate : DateLib.getDateYymmdd(this.props.data.END_DT)});\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={{display : 'flex'}}>\r\n                <span style={{marginRight : '5px'}}><b> 시작일자 : </b></span>\r\n                <DatePicker onChange={this.onStrtDtChange} value={this.state.strtDate} />\r\n                <span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n                <span style={{marginRight : '5px'}}><b> 종료일자 :  </b></span>\r\n                <DatePicker onChange={this.onEndDtChange} value={this.state.endDate} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass RangeTimeComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { strtTime: '00:00', endTime: '23:59'}\r\n        this.onStrtTmChange = this.onStrtTmChange.bind(this);\r\n        this.onEndTmChange = this.onEndTmChange.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        STRT_TM : '', END_TM : ''\r\n    }\r\n    onStrtTmChange = time => this.setState({ ...this.state, strtTime : time });\r\n    onEndTmChange = time => this.setState({ ...this.state, endTime : time });\r\n    getValue () {\r\n        if (StrLib.isNull(this.state.endTime) && StrLib.isNull(this.state.strtTime)) {\r\n            this.props.data.STRT_TM = '';\r\n            this.props.data.END_TM = '';\r\n            return '';\r\n        } else {\r\n            if (StrLib.isNull(this.state.strtTime)) {\r\n                this.props.data.END_TM = this.state.endTime.replace(':', '');\r\n                return this.state.endTime.replace(':', '');\r\n            }\r\n            if (StrLib.isNull(this.state.endTime)) {\r\n                this.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n                return this.state.strtTime.replace(':', '');\r\n            }\r\n            this.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n            this.props.data.END_TM = this.state.endTime.replace(':', '');\r\n            return this.state.strtTime.replace(':', '') + this.state.endTime.replace(':', '');\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.setState({strtTime : StrLib.getFormatterTime(this.props.data.STRT_TM), endTime : StrLib.getFormatterTime(this.props.data.END_TM)});\r\n    }\r\n    isPopup() {return true;}\r\n    render() {\r\n        return (\r\n            <div style={{display : 'flex'}}>\r\n                <span style={{marginRight : '5px'}}><b> 시작시간 : </b></span>\r\n                <TimePicker onChange={this.onStrtTmChange} value={this.state.strtTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n                <span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n                <span style={{marginRight : '5px'}}><b> 종료시간 :  </b></span>\r\n                <TimePicker onChange={this.onEndTmChange} value={this.state.endTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {DateComponent, TimeComponent, RangeDateComponent, RangeTimeComponent}","import React from 'react';\r\nclass CheckboxRenderer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.checkedHandler = this.checkedHandler.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        value : 'N'\r\n    };\r\n    checkedHandler(event) {\r\n        let value = 'N'\r\n        if (event.target.checked) {\r\n            value = 'Y'\r\n        }\r\n        let colId = this.props.column.colId;\r\n        this.props.node.setDataValue(colId, value);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <input type=\"checkbox\"  onClick={this.checkedHandler} checked={(this.props.value === 'Y') ? true : false} />\r\n        )\r\n    }\r\n}\r\nexport default CheckboxRenderer;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\n \r\nclass DelRowButton extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onClick = (e) => {\r\n        console.log(this.props);\r\n        this.props.context.componentParent.onDeleteRow(this.props);\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Button value='삭제' onClick={this.onClick}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DelRowButton;","import React from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport {ComLib, newScrmObj, StrLib} from 'common';\r\n//import DatePicker from \"react-datepicker\";\r\n\r\nimport {CentListSelectBox, LFloatArea, RFloatArea, } from 'components';\r\nimport {DateComponent, TimeComponent, CheckboxRenderer, RangeDateComponent, RangeTimeComponent, DelRowButton} from './components';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport \"flatpickr/dist/themes/dark.css\";\r\n\r\nclass Grid extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tgridApi : {},\r\n\t\t\tcolumnApi : {},\r\n\t\t\tcolumnDefs: [],\r\n\t\t\trowData: [],\r\n\t\t\tinsertColumnData : {}\r\n\t\t}\r\n\t\tthis.onCellClicked\t\t\t=\t\tthis.onCellClicked.bind(this);\r\n\t\tthis.onCellDoubleClicked\t=\t\tthis.onCellDoubleClicked.bind(this);\r\n\t\tthis.onCellFocused\t\t\t=\t\tthis.onCellFocused.bind(this);\r\n\t\tthis.onRowClicked\t\t\t=\t\tthis.onRowClicked.bind(this);\r\n\t\tthis.onRowSelected\t\t\t=\t\tthis.onRowSelected.bind(this);\r\n\t\tthis.onRowDoubleClicked\t\t=\t\tthis.onRowDoubleClicked.bind(this);\r\n\t\tthis.onCellValueChanged\t\t=\t\tthis.onCellValueChanged.bind(this);\r\n\t\tthis.onGridReady\t\t\t=\t\tthis.onGridReady.bind(this);\r\n\t\tthis.onCellEditingStopped\t=\t\tthis.onCellEditingStopped.bind(this);\r\n\t\tthis.onRowDataChanged\t\t=\t\tthis.onRowDataChanged.bind(this);\r\n\t\tthis.onSelectionChanged\t\t=\t\tthis.onSelectionChanged.bind(this);\r\n\t\tthis.onDeleteRow\t\t\t=\t\tthis.onDeleteRow.bind(this);\r\n\t\tthis.onInsertRow\t\t\t=\t\tthis.onInsertRow.bind(this);\r\n\t}\r\n\t// checkboxSelection: false,\r\n\tstatic defaultProps = {\r\n\t\tid : null,\r\n\t\tdata : [],\r\n\t\theader : [],\r\n\t\tsuppressMovableColumns : true,\r\n\t\trowDragManaged : false,\r\n\t\tsuppressScrollOnNewData : false,\r\n\t\tsuppressRowClickSelection : false,\r\n\t\tsort : true,\r\n\t\tfilter : false,\r\n\t\tfloatingFilter: false,\r\n\t\trowSelection : 'single',\r\n\t\taddRowBtn : true,\r\n\t\tdelRowBtn : true,\r\n\t\tdnlExcelBtn : false,\r\n\t\tpaging : {\r\n\t\t\tpagination : true,\r\n\t\t\tpaginationPageSize : 100,\r\n\t\t\tpaginationAutoPageSize : false\r\n\t\t},\r\n\t\tonRowClicked : () => {return;},\r\n\t\tonCellFocused : () => {return;},\r\n\t\tonCellClicked : () => {return;},\r\n\t\tonCellDoubleClicked : () => {return;},\r\n\t\tonCellValueChanged : () => {return;},\r\n\t\tonRowDoubleClicked : () => {return;},\r\n\t\tonCellEditingStopped  : () => {return;},\r\n\t\tonSelectionChanged  : () => {return;},\r\n\t\tonRowSelected  : () => {return;},\r\n\t\tonDeleteRow : () => {return;}\r\n\t};\r\n\tcomponentDidMount () { \r\n\t\tconsole.log('grid componentDidMount');\r\n\t\t// this.setState({...this.state, columnDefs : ComLib.setGridHeader(this.props.header), rowData : this.props.data.getRecords()});\r\n\t};\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tconsole.log('componentDidUpdate');\r\n\t\tconsole.log(prevProps);\r\n\t\tconsole.log(this.props);\r\n\t}\r\n\t/* Event Zone */\r\n\tonCellValueChanged = (e) => {\r\n\t\tif (e.oldValue !== e.newValue) {\r\n\t\t\tlet rowData = this.props.data.getRecords();\r\n\t\t\tlet data = e.data;\r\n\t\t\tif (rowData[this.props.data.indexOf('recid', e.data.recid)]['rowtype'] !== newScrmObj.constants.crud.create) {\r\n\t\t\t\tif (e.newValue !== this.props.data.orgrecords[this.props.data.indexOf('recid', e.data.recid)][e.column.colId]) {\r\n\t\t\t\t\tif (data['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tdata['rowtype'] = newScrmObj.constants.crud.update;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (data['rowtype'] === newScrmObj.constants.crud.update) {\r\n\t\t\t\t\t\tdata['rowtype'] = newScrmObj.constants.crud.read;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tObject.assign(rowData[this.props.data.indexOf('recid', e.data.recid)], e.data);\r\n\t\t\tthis.props.onCellValueChanged({ \r\n\t\t\t\t\tid : this.props.id\r\n\t\t\t\t,\tdata : rowData\r\n\t\t\t\t,\tindex : e.node.id\r\n\t\t\t\t,\trow: e.rowIndex\r\n\t\t\t\t,\tcol: e.column.colId\r\n\t\t\t\t,\tnode : e.node\r\n\t\t\t\t,\tcellEditor : e.colDef.cellEditor\r\n\t\t\t\t,\tcellEditorParams : e.colDef.cellEditorParams\r\n\t\t\t\t,\toldValue : e.oldValue\r\n\t\t\t\t,\tnewValue : e.newValue\r\n\t\t\t}); \r\n\t\t}\r\n\t}\r\n\tonCellClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }  \r\n\t\tthis.props.onCellClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellDoubleClicked = (e) => {\t\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellFocused = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellFocused({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowDoubleClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellEditingStopped = (e) => {\r\n\t\tconsole.log('onCellEditingStopped');\r\n\t\tconsole.log(e);\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.state.gridApi.getRenderedNodes().forEach((element, index) => {\r\n\t\t\tthis.props.header.forEach(item => {\r\n\t\t\t\tif (item.req) {\r\n\t\t\t\t\tif (StrLib.isNull(element.data[item.field])) {\r\n\t\t\t\t\t\tComLib.openDialog('A', index + '행의 ' + item.headerName + '의 데이터를 입력 해주십시오.');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.props.onCellEditingStopped({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowDataChanged = () => { \r\n\t\tif (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n\t\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t\t}\r\n\t};\r\n\tonSelectionChanged = (e) => {\r\n\t\t//if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onSelectionChanged({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowSelected = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowSelected({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t}\r\n\tonDeleteRow = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\t\r\n\t\tif (this.state.gridApi.getSelectedNodes().length === 0) {\r\n\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\t\t} else {\r\n\t\t\tlet rowData = this.props.data.getRecords();\r\n\t\t\trowData.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy).forEach((item, index) => {\r\n\t\t\t\tthis.state.gridApi.getSelectedNodes().forEach((element) => {\r\n\t\t\t\t\tif (index === Number(element.id)) {\r\n\t\t\t\t\t\tif (item['rowtype'] === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\titem['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\titem['rowtype'] = newScrmObj.constants.crud.destroy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tlet index = this.state.gridApi.getSelectedNodes()[this.state.gridApi.getSelectedNodes().length-1]['rowIndex'];\r\n\t\t\tthis.props.onDeleteRow({\r\n\t\t\t\t\tid : this.props.id\r\n\t\t\t\t,\tdata : rowData.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove)\r\n\t\t\t\t,\tcallback : () => {\r\n\t\t\t\t\t\tthis.moveRow(index)\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tonInsertRow = (e) => {\r\n\t\tconsole.log('onInsertRow');\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\r\n\t\tlet rowData = this.props.data;\r\n\t\tlet index = rowData.addRow();\r\n\t\tconsole.log(index);\r\n\r\n\t\tthis.props.onInsertRow({ \r\n\t\t\t\tid : this.props.id\r\n\t\t\t,\tdata : rowData.getRecords()\r\n\t\t\t,\tindex : index\r\n\t\t\t,\tcallback : () => {\r\n\t\t\t\t\tthis.moveRow(this.state.gridApi.getDisplayedRowCount()+1)\r\n\t\t\t\t}\r\n\t\t});\r\n\t}\r\n\tonExcelDown = (e) => {\r\n\t\t\r\n\t}\r\n\tmoveRow = (index) => {\r\n\t\tconsole.log('moveRow');\r\n\t\tconsole.log(this.state.gridApi.getDisplayedRowAtIndex(index));\r\n\r\n\t\tif (this.state.gridApi.getDisplayedRowAtIndex(index) === undefined) {\r\n\t\t\tthis.state.gridApi.getDisplayedRowAtIndex(this.state.gridApi.getDisplayedRowCount()-1).setSelected(true);\r\n\t\t} else {\r\n\t\t\tif (this.state.gridApi.getDisplayedRowCount() > index) {\r\n\t\t\t\tthis.state.gridApi.getDisplayedRowAtIndex(index).setSelected(true);\r\n\t\t\t} else {\r\n\t\t\t\tthis.state.gridApi.getDisplayedRowAtIndex(this.state.gridApi.getDisplayedRowCount()-1).setSelected(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/* Method Zone */\r\n\tdoFilter = (value) => {\r\n\t\tthis.state.gridApi.setQuickFilter(value);\r\n\t};\r\n\tinsertRow = () => {\r\n\t\tthis.state.gridApi.applyTransaction({add : new Array(this.state.insertColumnData)});\r\n\t\tthis.state.gridApi.setFocusedCell(this.state.gridApi.getDisplayedRowCount()-1, Object.keys(this.state.insertColumnData)[0], '');\r\n\t\tthis.state.gridApi.startEditingCell({\r\n\t\t\trowIndex: this.state.gridApi.getDisplayedRowCount()-1,\r\n\t\t\tcolKey: Object.keys(this.state.insertColumnData)[0]\r\n\t\t});\r\n\t};\r\n\tgetSelectedRowIndex = () => {\r\n\t\tif (this.state.gridApi.getSelectedNodes().length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn Number(this.state.gridApi.getSelectedNodes()[0].id);\r\n\t};\r\n\tgetSelectedRows = () => {\r\n\t\tif (this.state.gridApi.getSelectedRows().length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn this.state.gridApi.getSelectedRows();\r\n\t};\r\n\tgetDeSelectedRows = () => {\r\n\t\tlet deSelectRows = [];\r\n\t\tthis.state.gridApi.forEachNode((node, index) => {  \r\n\t\t\tif (!node.isSelected()) deSelectRows.push(node.data);\r\n\t\t});\r\n\t\treturn deSelectRows;\r\n\t};\r\n\t//deselectAll = () => { this.state.gridApi.deselectAll(); };\r\n\teditStart = (row, col) => {\r\n\t\tthis.state.gridApi.setFocusedCell(row, col);\r\n\t\tthis.state.gridApi.startEditingCell({ rowIndex : row, colKey : col});\r\n\t};\r\n\tautoSizeFit = () => {\r\n\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t};\r\n\tonGridReady = (event) => {\r\n\t\tconsole.log('onGridReady');\r\n\t\tlet obj = Object.fromEntries(new Map(this.props.header.map((row => { return [row.field, '']; }))));\r\n\t\tconsole.log(obj);\r\n\t\tthis.setState({\r\n\t\t\t...this.state, gridApi: event.api, columnApi: event.columnApi, insertColumnData : obj\r\n\t\t}, () => { \r\n\t\t\tif (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n\t\t\t\tsetTimeout(() => this.state.gridApi.sizeColumnsToFit(), 50)\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\trowSpan = (params) => {\r\n\t\tconsole.log('rowSpan');\r\n\t\tconsole.log(params);\r\n\t\tconsole.log(params.data[params['column']['colId']]);\r\n\r\n\t\treturn params;\r\n\t\t//params.data[params.column]\r\n\r\n\t\t// let cnt = 0;\r\n\t\t// if (this.props.hedaer.filter(item => item['rowspan'] === true).forEach(ele => {\r\n\t\t// \tif (ele[params['column']['colId']] === params['column']['colId']) {\r\n\t\t// \t\treturn true;\r\n\t\t// \t} else {\r\n\t\t// \t\treturn false;\r\n\t\t// \t}\r\n\t\t// })) {\r\n\t\t// \treturn this.props.data.forEach((item, index) => {\r\n\t\t// \t\tif (item[params['column']['colId']] === this.props.data[index+1][params['column']['colId']]) {\r\n\t\t// \t\t\tcnt++;\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tconsole.log(cnt);\r\n\t\t// \t\t\treturn cnt;\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t\t// } else {\r\n\t\t// \tconsole.log(cnt);\r\n\t\t// \treturn cnt;\r\n\t\t// }\r\n\t}\r\n\trender() {\r\n\t\tconsole.log('grid render');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div style={{display : 'block', width:'100%', height : '30px'}}>\r\n\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.props.noName) ?\r\n\t\t\t\t\t\t\t\tnull \r\n\t\t\t\t\t\t\t:\t<div className = \"scrm-component-panel-namearea\">\r\n\t\t\t\t\t\t\t\t\t<span> {(this.props.areaName) ? this.props.areaName : '그리드'} </span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t{(this.props.addRowBtn) ? <button onClick={this.onInsertRow}>&#43;</button> : null}\r\n\t\t\t\t\t\t{(this.props.delRowBtn) ? <button onClick={this.onDeleteRow}>&#45;</button> : null}\r\n\t\t\t\t\t\t{(this.props.dnlExcelBtn) ? <button onClick={this.onExcelDown}>Excel</button> : null}\r\n\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ag-theme-alpine\" style={ {width:'100%', height: this.props.height} }>\r\n\t\t\t\t\t<AgGridReact \r\n\t\t\t\t\t\tonGridReady={this.onGridReady}\r\n\t\t\t\t\t\tsuppressAutoSize = {false}\r\n\t\t\t\t\t\talwaysShowVerticalScroll = {false}\r\n\t\t\t\t\t\tcomponents = {{\r\n\t\t\t\t\t\t\t// dated : flatpickr()\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tframeworkComponents = {{\r\n\t\t\t\t\t\t\tdate : DateComponent,\r\n\t\t\t\t\t\t\trangeDate : RangeDateComponent,\r\n\t\t\t\t\t\t\trangeTime : RangeTimeComponent,\r\n\t\t\t\t\t\t\ttime : TimeComponent,\r\n\t\t\t\t\t\t\tcheckbox: CheckboxRenderer,\r\n\t\t\t\t\t\t\tselectbox : SelectboxRenderer,\r\n\t\t\t\t\t\t\theaderCheckbox : HeaderCheckboxRender,\r\n\t\t\t\t\t\t\tdelButton : DelRowButton,\r\n\t\t\t\t\t\t\tCentListSelectBox : CentListSelectBox\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsuppressMovableColumns = {this.props.suppressMovableColumns}\r\n\t\t\t\t\t\tcontext = {{ componentParent : this }}\r\n\t\t\t\t\t\timmutableColumns = {true}\r\n\t\t\t\t\t\tmultiSortKey = {'ctrl'}\r\n\t\t\t\t\t\theaderHeight = {25}\r\n\t\t\t\t\t\trowHeight = {42}\r\n\t\t\t\t\t\tdefaultColDef = {{ \r\n\t\t\t\t\t\t\t\tresizable: true\r\n\t\t\t\t\t\t\t,\tsortable : this.props.sort\r\n\t\t\t\t\t\t\t,\teditable : false\r\n\t\t\t\t\t\t\t,\tautoHeight : true\r\n\t\t\t\t\t\t\t,\tfilter : this.props.filter\r\n\t\t\t\t\t\t\t,\tfloatingFilter: this.props.floatingFilter\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tautoGroupColumnDef = {this.props.autoGroupColumnDef || {}}\r\n\t\t\t\t\t\trowDragManaged = {this.props.rowDragManaged}\r\n\t\t\t\t\t\tsuppressDragLeaveHidesColumns={true}\r\n\t\t\t\t\t\tsuppressScrollOnNewData = {this.props.suppressScrollOnNewData}\r\n\t\t\t\t\t\tsuppressRowClickSelection = {this.props.suppressRowClickSelection}\r\n\t\t\t\t\t\tstopEditingWhenGridLosesFocus = {true}\r\n\t\t\t\t\t\t// columnDefs = {this.props.header.map( item => {\r\n\t\t\t\t\t\t// \tif (item['rowspan'])  {\r\n\t\t\t\t\t\t// \t\titem['rowSpan'] = this.rowSpan\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// \treturn item;\r\n\t\t\t\t\t\t// })}\r\n\t\t\t\t\t\tcolumnDefs = {this.props.header}\r\n\t\t\t\t\t\t// rowData = { this.props.data.filter(item => item.state !== 'D') }\r\n\t\t\t\t\t\trowData = { this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy) }\r\n\t\t\t\t\t\tlocaleText = {{noRowsToShow: '조회된 결과가 존재하지 않습니다.'}}\r\n\t\t\t\t\t\trowSelection= {this.props.rowSelection}\r\n\t\t\t\t\t\tcolResizeDefault= {'shift'}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// event\r\n\t\t\t\t\t\tonRowClicked = {this.onRowClicked}\r\n\t\t\t\t\t\tonCellClicked = {this.onCellClicked}\r\n\t\t\t\t\t\tonCellDoubleClicked = {this.onCellDoubleClicked}\r\n\t\t\t\t\t\tonCellValueChanged = {this.onCellValueChanged}\r\n\t\t\t\t\t\tonCellEditingStopped  = {this.onCellEditingStopped}\r\n\t\t\t\t\t\tonRowDataChanged = {this.onRowDataChanged}\r\n\t\t\t\t\t\tonSelectionChanged = {this.onSelectionChanged}\r\n\t\t\t\t\t\tonRowSelected = {this.onRowSelected}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nclass SelectboxRenderer extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<select onChange = {(e) => console.log(1)}>\r\n\t\t\t\t<option value='Y'>사용</option>\r\n\t\t\t\t<option value='N'>사용안함</option>\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n}\r\nclass HeaderCheckboxRender extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.checkedHandler = this.checkedHandler.bind(this);\r\n\t}\r\n\tcheckedHandler(event) {\r\n\t\tlet value = 'N'\r\n\t\tif (event.target.checked) {\r\n\t\t\tvalue = 'Y'\r\n\t\t}\r\n\t\tthis.props.api.forEachNode((node, index) => { node.setDataValue(this.props.column.colId, value); });\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input type=\"checkbox\"  onClick={this.checkedHandler}></input>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Grid;","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'; \r\n\r\nclass HtmlEditor extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n        this.onChange  = this.onChange.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        toolbarHidden : false,\r\n        readOnly : false,\r\n        onChange : () => {return;}\r\n    }\r\n    modules = {\r\n        toolbar : (!this.props.toolbarHidden) ? [\r\n            [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n            [{ size: [\"small\", false, \"large\", \"huge\"] }, { font: [] }, { color: [] }, { background: [] }],\r\n            [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n            [\"clean\"]\r\n        ] : false,\r\n        clipboard: { matchVisual: false }\r\n    };\r\n    formats = [ \"header\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"size\", \"color\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\", \"align\", \"background\", \"code\"];\r\n\r\n    onChange = (e) => { this.props.onChange({ id: this.props.id, value : e}); }\r\n    render (){\r\n        return (\r\n            <React.Fragment>\r\n                <Style>\r\n                    {`\r\n                        .scrm-editor-contnents {\r\n                            width: 100%;\r\n                            box-sizing: border-box;\r\n                        }\r\n                        .scrm-editor-contnents .ql-editor{\r\n                            width:  100%;\r\n                            height: ${this.props.height}px;\r\n                            overflow-y: auto;\r\n                            overflow-x: auto;\r\n                        }\r\n                    `}\r\n                </Style>\r\n                <ReactQuill theme = 'snow'\r\n                            id = {this.props.id}\r\n                            value = {this.props.value}\r\n                            onChange = {this.onChange}\r\n                            modules={this.modules}\r\n                            formats={this.formats}\r\n                            placeholder={'내용을 입력하세요.'}\r\n                            readOnly={this.props.readOnly}\r\n                            className = 'scrm-editor-contnents'\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default HtmlEditor;","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport { DateLib, StrLib } from 'common';\r\n\r\n\r\nclass Checkbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tindex : 0,\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-checkbox-div'>\r\n\t\t\t\t<input  type = \"checkbox\"\r\n\t\t\t\t\t\tid = {'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.keyProp}\r\n\t\t\t\t\t\tname = {this.props.id}\r\n\t\t\t\t\t\tchecked = { this.props.checked === 'Y'}\r\n\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor={'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}> {this.props.value} </label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass MultiCheckBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tthis.props.dataset.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tkey = {'checkbox_' + i}\r\n\t\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\t\tindex = {i}\r\n\t\t\t\t\t\t\tvalue = {item[this.props.value]}\r\n\t\t\t\t\t\t\tkeyProp =  {item[this.props.keyProp]}\r\n\t\t\t\t\t\t\tchecked = {item['value']}\r\n\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nclass Radio extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state  = {\r\n\t\t\tselectedOption : this.props.selected || this.props.dataset[this.props.defaultSelected][this.props.keyProp]\r\n\t\t}\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonChange : () => { return; }\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id: this.props.id, value : e.target.value});\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\tsetRadio = (props) => {\r\n\t\treturn (\r\n\t\t\tprops.dataset.map((item, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={'radio_div_' + i} className ='scrm-input-radio-div'>\r\n\t\t\t\t\t\t<input  key={'radio_'+ i} \r\n\t\t\t\t\t\t\t\tid = {'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tname={props.id}\r\n\t\t\t\t\t\t\t\tvalue={item[props.keyProp]}\r\n\t\t\t\t\t\t\t\tchecked = { \r\n\t\t\t\t\t\t\t\t\t(props.selected === null)\r\n\t\t\t\t\t\t\t\t\t? props.defaultSelected === i\r\n\t\t\t\t\t\t\t\t\t: props.selected === item[props.keyProp]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label  key={'radio_label_' + i}\r\n\t\t\t\t\t\t\t\thtmlFor={'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item[props.value]}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('checkbox child');\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t{ this.setRadio(this.props) }\r\n\t\t\t </div>\r\n\t\t);\r\n\t}\r\n}\r\nclass Textfield extends React.Component {\r\n\trtnVal = (value) => {\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase 'onlyNum' : return value.replace(/[^0-9]/g,\"\");\r\n\t\t\tcase 'onlyKor' : return value.replace(/[a-z0-9]|[ \\]{}()<>?|`~!@#$%^&*-_+=,.;:'\\\\]/g,\"\");\r\n\t\t\tcase 'onlyEng' : return value.replace(/[^a-zA-Z]/g,\"\");\r\n\t\t\tdefault :\r\n\t\t\t\tif (StrLib.isNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t<input  type=\"text\" \r\n\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\t\tvalue = {this.rtnVal(this.props.value)}\r\n\t\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\t\tminLength =  {this.props.minLength}\r\n\t\t\t\t\t\tmaxLength = {this.props.maxLength}\r\n\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}\r\n\t\t\t\t\t\t//onClick = {(e) => this.props.onClick(e)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass TextPasswdfield extends React.Component {\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div'>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\tmaxlength = {this.props.maxlength}\r\n\t\t\t\t\tminlength =  {this.props.minlength}\r\n\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}></input> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass InputCalendar extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n\t\tthis.onCalendarClose = this.onCalendarClose.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcloseCalendar : true,\r\n\t\tdisabled : false,\r\n\t\tdisableCalendar : false,\r\n\t\tformat : 'y-MM-dd',\r\n\t\tisOpen : false,\r\n\t\trequired : false,\r\n\t\treturnValue : 'start'\r\n\t}\r\n\tonChange = (date) =>  {\r\n\t\tthis.props.onChange({target :{ id: this.props.id, value: DateLib.getStringDate(date) }});\r\n\t}\r\n\tonCalendarOpen = () => {\r\n\t\tthis.props.onCalendarOpen({target : {id : this.props.id, value : this.props.value}});\r\n\t}\r\n\tonCalendarClose = () => {\r\n\t\tthis.props.onCalendarOpen({target : {id : this.props.id, value : this.props.value}});\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tclassName=\"scrm-datepicker\"\r\n\t\t\t\t\tvalue={DateLib.getDateYymmdd(this.props.value)}\r\n\t\t\t\t\tcloseCalendar = {this.props.closeCalendar}\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tdisableCalendar = {this.props.disableCalendar}\r\n\t\t\t\t\tformat = {this.props.format}\r\n\t\t\t\t\tisOpen = {this.props.isOpen}\r\n\t\t\t\t\tmaxDate = {this.props.maxDate}\r\n\t\t\t\t\tminDate = {this.props.minDate}\r\n\t\t\t\t\trequired = {this.props.required}\r\n\t\t\t\t\treturnValue = {this.props.returnValue}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tonCalendarOpen = {this.onCalendarOpen}\r\n\t\t\t\t\tonCalendarClose = {this.onCalendarClose}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass RangeInputCalendar extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<DatePicker id={this.props.stId} className=\"scrm-datepicker\"\r\n\t\t\t\t\t\t\tonChange = {  date => this.props.onChange({target :{ id: this.props.stId, value: DateLib.getStringDate(date)}}) }\r\n\t\t\t\t\t\t\tvalue= {DateLib.getDateYymmdd(this.props.startDate)} />\r\n\t\t\t\t<DatePicker id={this.props.endId} className=\"scrm-datepicker\"\r\n\t\t\t\t\t\t\tonChange = {  date => this.props.onChange({target :{ id: this.props.endId, value: DateLib.getStringDate(date)}}) }\r\n\t\t\t\t\t\t\tvalue={DateLib.getDateYymmdd(this.props.endDate)} />\r\n\t\t\t</React.Fragment>\r\n\t\t);  \r\n\t}\r\n}\r\nexport { MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, TextPasswdfield, RangeInputCalendar}","import React from 'react';\r\n\r\nclass Label extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-label-div\">\r\n\t\t\t\t<span>{this.props.value}</span>\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.props.req)\r\n\t\t\t\t\t? <span style={{color : 'red'}}>{'*'}</span>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'assets/styles/component.css';\r\n\r\nclass AppPanel extends React.Component {\r\n\tstatic defaultProps = { width: '100%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-app-panel\"> {this.props.children} </div>); }\r\n}\r\nclass HeadPanel extends React.Component {\r\n\tstatic defaultProps = { width: '100%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-head-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MiddlePanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-middle-panel\"> {this.props.children} </div>); }\r\n}\r\nclass SidePanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-side-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MainPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-main-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass ComponentPanel extends React.Component {\r\n\tstatic defaultProps = { width: '97%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { \r\n\t\treturn (\r\n\t\t\t<div className = \"scrm-component-panel\" style={{width: this.props.width, height: this.props.height}}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t); \r\n\t}\r\n}\r\nclass FooterPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-footer-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FlexPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-flex-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FullPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-full-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass SubFullPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-subfull-panel\" style={{width: this.props.width, height: this.props.height}}> {this.props.children} </div>); }\r\n}\r\nclass LFloatArea extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-lfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RFloatArea extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-rfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RelativeGroup extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-relative-div\" style={{width : this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass TrayPanel extends React.Component {\r\n\tstatic defaultProps = { width: '97%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { \r\n\t\treturn (<div className=\"scrm-tray-panel\"> {this.props.children} </div>); }\r\n}\r\nexport { AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, TrayPanel} ;","import React from 'react';\r\nimport {StrLib} from 'common';\r\nimport { Link } from 'react-router-dom';\r\nclass HeaderMenu extends React.Component {\r\n\tconstructor(props)  {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false\r\n\t\t}\r\n\t}\r\n\tsetMenuDivOpen = () => {\r\n\t\tthis.setState({...this.state, open : !this.state.open});\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"scrm-header-menu-container\">\r\n\t\t\t\t\t<ul className=\"scrm-header-menu-ul\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.menu.filter(item => StrLib.isNull(item.PARE_MNU_ID) ).map((item, key) => {\r\n\t\t\t\t\t\t\t\treturn <li className=\"scrm-header-menu-li\" key={'menu_' + key} onClick={this.setMenuDivOpen}>{item.MNU_NM}</li>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className= {(this.state.open) ? \"scrm-header-menu-active\" : \"scrm-header-menu-nested\"}>\r\n\t\t\t\t\t\t<ul className=\"scrm-header-menu-ul\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.menu.filter(item => StrLib.isNull(item.PARE_MNU_ID)).map((item, key) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"scrm-header-menu-li\" key={'div_menu_' + key} onClick={this.setMenuDivOpen}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"scrm-header-submenu-ul\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.menu.filter(menu => menu.PARE_MNU_ID === item.MNU_ID).map((subMenu, subKey) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <li  className=\"scrm-header-submenu-li\" key={'submenu_' + subKey} id={'subMenu_' + subMenu.MNU_ID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.openMenu(subMenu);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({...this.state, open : false});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t> {subMenu.MNU_NM} </li>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nclass Menu extends React.Component {\r\n\tonClick = () => {\r\n\r\n\t}\r\n\tsetMenuOpen = (e) => {\r\n\t\tif (e.target.nextSibling.style.display === 'none' || e.target.nextSibling.style.display.length === 0) {\r\n\t\t\te.target.nextSibling.style.display = 'block';\r\n\t\t} else {\r\n\t\t\te.target.nextSibling.style.display = 'none';\r\n\t\t};\r\n\t}\r\n\tsetMenuConfig = (data) => {\r\n\t\tlet rtnUpMenu = [];\r\n\t\tdata.map((item) => {\r\n\t\t\tif (item.PARE_MNU_ID === null || item.PARE_MNU_ID === '') {\r\n\t\t\t\titem = {...item, subMenuYn: 'N'};\r\n\t\t\t\trtnUpMenu.push(item);\r\n\t\t\t} else {\r\n\t\t\t\trtnUpMenu.map((arrJson) => {\r\n\t\t\t\t\tif (arrJson.MNU_ID === item.PARE_MNU_ID) {\r\n\t\t\t\t\t\tarrJson.subMenuYn = 'Y';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arrJson;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn (\r\n\t\t\trtnUpMenu.map((json, i) => {\r\n\t\t\t\tif (json.subMenuYn === 'N') {\r\n\t\t\t\t\tif (json.MNU_ID === 'BASE') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={'up_menu_li_' + i}>\r\n\t\t\t\t\t\t\t\t <Link style={{ textDecoration: 'none', color: '#000000'}} to= {'/' + json.MNU_ID }>\r\n\t\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div'>{json.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={'up_menu_li_' + i}>\r\n\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div' onClick={this.setMenuOpen}> {json.MNU_NM} </div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={'up_menu_li_' + i}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div' onClick={this.setMenuOpen}>{json.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div-hide'>\r\n\t\t\t\t\t\t\t\t\t<ul key = {'sub_menu_ul' + i} >\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tdata.map((menu, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (menu.PARE_MNU_ID === json.MNU_ID) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={'sub_mnu_li' + index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link style={{ textDecoration: 'none', color: '#000000'}} to={menu.PGM_PATH}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div' >{menu.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t }\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<nav className='scrm-menu-side'>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{ this.setMenuConfig(this.props.data) }\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {Menu, HeaderMenu};","import React from 'react';\r\nimport { Progress } from \"react-sweet-progress\";\r\n\r\nclass ProgressBar extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-progress-div\">\r\n\t\t\t\t<Progress\ttype={this.props.options.type} percent={this.props.data} status={this.props.options.status}\r\n\t\t\t\t\t\t\ttheme={\r\n\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\tdefault : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'blue'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\terror : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'red'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tsuccess : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'green'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ProgressBar","import React from 'react';\nimport ReactHowler from 'react-howler';\nimport {ComLib} from 'common';\nimport Draggable from 'react-draggable';\nimport DialogBox from 'react-modeless';\n \nclass Player extends React.Component {\n    componentDidMount () {\n        ComLib.openPop();\n    }\n    render () {\n        return (\n            <div className=\"scrm-player-container\">\n                 <ReactHowler src={process.env.API_URL + '/player/' + this.props.callId}/>\n            </div>\n        )\n    }\n}\nexport default Player;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {TransManager, ComLib, StrLib} from 'common';\r\nimport {Checkbox, MultiCheckBox} from 'components';\r\n\r\nclass Selectbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tselected : 0,\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target : e.target, id : this.props.id});\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('select child render');\r\n\t\treturn (\r\n\t\t\t<div className='scrm-select-div' style={{width : this.props.width}}>\r\n\t\t\t\t<select\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t// value = {(this.props.dataset.length <= this.props.selected)  ? '' :  this.props.dataset[this.props.selected]['value']} \r\n\t\t\t\t\tvalue = {this.props.value} \r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t> \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.dataset.filter(item=> item.value !== null && item.value !== undefined).map((prop, key) => {\r\n\t\t\t\t\t\t\treturn (<option value={prop.value} key={prop.value + '_' + key} >{prop.name}</option>);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass CentListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = { type : 'A' }\r\n\tcomponentDidMount () {\r\n\t\tthis.getCentList();\r\n\t}\r\n\tgetCentList = async() => {\r\n\t\t// let item = [{value : '', name : (this.props.type === 'C') ? '선택' : '전체'}];\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('CENTLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getCentComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsCentComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\tconst res = await transManager.agent();\r\n\r\n\t\t\tif ( res.data.dsCentComboInfo.length === 0 ) {\r\n\t\t\t\t//this.setState({ ...this.state, comboItem : item});\r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({...this.state, comboItem : item.concat(res.data.dsCentComboInfo.map((item) => {\r\n\t\t\t\t//     return { value : item.CENT_CD , name : item.CENT_NM };\r\n\t\t\t\t// }))});\r\n\t\t\t\tthis.setState({...this.state, comboItem : res.data.dsCentComboInfo.map((item) => {\r\n\t\t\t\t\treturn { value : item.CENT_CD , name : item.CENT_NM };\r\n\t\t\t\t})});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/>);\r\n\t}\r\n}\r\nclass TeamListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getTeamList(this.props.centCd);\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd) {\r\n\t\t\tthis.getTeamList(this.props.centCd);\r\n\t\t}\r\n\t}\r\n\tgetTeamList = async() => {\r\n\t\t// let item = [{value : '', name : (this.props.type === 'C') ? '선택' : '전체'}];\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('TEAMLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getTeamComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsTeamComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\r\n\t\t\tif (res.data.dsTeamComboInfo.length === 0) {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item});\r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item.concat(res.data.dsTeamComboInfo.map((item) => {\r\n\t\t\t\t//    return { value : item.TEAM_CD , name : item.TEAM_NM };\r\n\t\t\t\t// }))});\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsTeamComboInfo.map((item) => {\r\n\t\t\t\t   return { value : item.TEAM_CD , name : item.TEAM_NM };\r\n\t\t\t\t})});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// this.setState({ ...this.state, comboItem : item});\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange={this.props.onChange}/> );\r\n\t}\r\n}\r\nclass UsrListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomboItem : []\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getUserList();\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd || prevProps.teamCd !== this.props.teamCd) {\r\n\t\t\tthis.getTeamList();\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\tteamCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tgetUserList = async() => {\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('USERLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getUsrComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsUsrComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd, TEAM_CD : this.props.teamCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\t\t\tif (res.data.dsUsrComboInfo.length === 0) {\r\n\t\t\t\t// return item; \r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item.concat(res.data.dsUsrComboInfo.map((item) => {\r\n\t\t\t\t//     return { value : item.USR_CD , name : item.USR_NM };\r\n\t\t\t\t//  }))});\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsUsrComboInfo.map((item) => {\r\n\t\t\t\t\treturn { value : item.USR_CD , name : item.USR_NM };\r\n\t\t\t\t })});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t//return item; \r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/> );\r\n\t}\r\n}\r\nclass MulitSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tlet text = '...';\r\n\t\tif (this.props.dataset.length !== 0) {\r\n\t\t\tif (this.props.dataset.filter(item => item['value'] === 'Y').length === this.props.dataset.length) {\r\n\t\t\t\ttext = '전체선택';\r\n\t\t\t} else {\r\n\t\t\t\ttext = this.props.dataset.filter(item => item['value'] === 'Y').map(element => { return element[this.props.value]}).toString();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\texpended : false,\r\n\t\t\ttext : text,\r\n\t\t\tbaseOption : {\r\n\t\t\t\tkeyProp : 'all_check',\r\n\t\t\t\tvalue : '전체선택',\r\n\t\t\t\tchecked : 'N'\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.onCheckAll = this.onCheckAll.bind(this);\r\n\t\tthis.onCheckboxClick = this.onCheckboxClick.bind(this);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\thandleClickOutside = (e) => {\r\n\t\tconst domNode = ReactDOM.findDOMNode(this);\r\n\t\tif ( !domNode || !domNode.contains(e.target) ) {\r\n\t\t\tdocument.getElementById(this.props.id).style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended : false});\r\n\t\t}\r\n\t}\r\n\topenCheckbox = () => {\r\n\t\tlet checkboxes = document.getElementById(this.props.id);\r\n\t\tif (!this.state.expended) {\r\n\t\t\tcheckboxes.style.display = \"block\";\r\n\t\t\tthis.setState({...this.state, expended: true});\r\n\t\t} else {\r\n\t\t\tcheckboxes.style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended: false});\r\n\t\t}\r\n\t}\r\n\tonCheckAll = (e) => {\r\n\t\tthis.setState({...this.state\r\n\t\t\t, text: (e.checked) ? '전체선택' : '...'\r\n\t\t\t, baseOption : {...this.state.baseOption, checked : (e.checked) ? 'Y' : 'N'}\r\n\t\t}, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\tdataset : this.props.dataset.map((item) =>{ item['value'] = (e.checked) ? 'Y' : 'N'; return item;})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase  \"multiselect_\" + this.props.id + '_head' :\r\n\t\t\t\tconsole.log('all check box');\r\n\t\t\t\tbreak;\r\n\t\t\tcase  \"multiselect_\" + this.props.id :\r\n\t\t\t\tconsole.log('single check box');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\tonCheckboxClick = (e) => {\r\n\t\tlet rtnText = null;\r\n\t\tlet checkedList = null;\r\n\t\tif (e.target.checked) {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' || item === this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t} else {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' && item !== this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t}\r\n\t\tif (checkedList.length === this.props.dataset.length) {\r\n\t\t\trtnText  = '전체선택';\r\n\t\t} else {\r\n\t\t\tif (checkedList.length === 0) {\r\n\t\t\t\trtnText  = '...';\r\n\t\t\t} else {\r\n\t\t\t\trtnText = checkedList.toString();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ ...this.state,  text :  rtnText,  baseOption : {...this.state.baseOption, checked : (checkedList.length === this.props.dataset.length) ? 'Y' : 'N'}}\r\n\t\t, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tdataset : this.props.dataset.map((item, index) => {\r\n\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\titem['value'] = (e.checked) ? 'Y' : 'N';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-mulitlselect\">\r\n\t\t\t\t<div className= { (this.props.disabled) ? \"scrm-react-mulitlselect-selectbox-disabled\" : \"scrm-react-mulitlselect-selectbox\"}\r\n\t\t\t\t\t onClick={(this.props.disabled) ? (e) => { return null; } : this.openCheckbox} style={{width: this.props.width, display: 'flex'}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"scrm-react-mulitlselect-selectbox-label\" style={{width: this.props.width}}>\r\n\t\t\t\t\t\t<span>{this.state.text}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width:'10px', float: 'right', marginRight: '5px', verticalAlign: \"middle\"}}>\r\n\t\t\t\t\t\t<i className={(this.state.expended) ? \"arrow up\" : \"arrow down\"}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"scrm-react-mulitselect-checkbox\" id= {this.props.id} style={{width: this.props.width, height: this.props.displayCount * 20 + 'px'}}>\r\n\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\tid = {\"multiselect_\" + this.props.id + '_head'}\r\n\t\t\t\t\t\tkeyProp = {\"multiselect_baseOpt_\" + this.props.id}\r\n\t\t\t\t\t\tvalue = {this.state.baseOption.value}\r\n\t\t\t\t\t\tchecked = {this.state.baseOption.checked}\r\n\t\t\t\t\t\tonClick = {this.onCheckAll}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\tid= {\"multiselect_\" + this.props.id}\r\n\t\t\t\t\t\tdataset = {this.props.dataset}\r\n\t\t\t\t\t\tkeyProp = {this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\tonClick = {this.onCheckboxClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {Selectbox, MulitSelectBox, CentListSelectBox, TeamListSelectBox, UsrListSelectBox};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Slider from \"react-slick\";\r\nimport axios from 'axios';\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport {newScrmObj, ComLib} from 'common';\r\n\r\nclass SlidePreview extends React.Component {\r\n    static defaultProps = {\r\n        open: false,\r\n        filepath : '',\r\n        onClose : () => {return false;}\r\n    };\r\n    static propTypes = {\r\n        open : PropTypes.bool.isRequired,\r\n        onClose: PropTypes.func.isRequired\r\n    };\r\n    onClick = () => { this.props.onClose();};\r\n    render () {\r\n        return (\r\n           <div className='scrm-slide-preview modal' style={{display: (this.props.open) ? 'block' : 'none'}}>\r\n                <span className=\"scrm-slide-preview close\" onClick ={this.onClick}>&times;</span>\r\n                <img className=\"scrm-slide-preview img\" src={process.env.API_URL + '/img/' + this.props.name} alt=''/>\r\n                <div id=\"scrm-slide-preview caption\">{}</div>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nclass SlideContainer extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            ext : {\r\n                doc : ['doc', 'docx', 'hwp', 'txt'],\r\n                xls : ['xls', 'xlsx'],\r\n                ppt : ['ppt', 'pptx'],\r\n                pdf : ['pdf'],\r\n                img : ['gif', 'bmp', 'png', 'jpg', 'jpeg', 'jp2', 'j2c', 'jpx', 'jpf', 'jpc', 'j2k', 'tif']\r\n            }\r\n        }\r\n        this.onDownload = this.onDownload.bind(this);\r\n        this.onPreview = this.onPreview.bind(this);\r\n    }\r\n    onDownload = async() => {\r\n        console.log('download');\r\n        const reqOptions = {\r\n            method: 'get',\r\n            url: process.env.API_URL + '/scrm/mfu/files/' + this.props.name,\r\n            headers: { \r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: 'blob'\r\n        };\r\n        try {\r\n            const resData = await axios(reqOptions);\r\n            const url = window.URL.createObjectURL(new Blob([resData.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', this.props.name); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        } catch (err) {\r\n            ComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n            return false;\r\n        }\r\n    }\r\n    onPreview = () => {\r\n        console.log('onPreview');\r\n        if ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n            let dialog = document.createElement('div');\r\n            dialog.id = newScrmObj.constants.mdi.DIALOG;\r\n            document.body.appendChild(dialog);\r\n        }\r\n        ReactDOM.render(\r\n            <SlidePreview   open={true} url={this.props.url} name={this.props.name} onClose={ () => { ReactDOM.unmountComponentAtNode(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n                        ,   document.getElementById(newScrmObj.constants.mdi.DIALOG) \r\n        );\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div className ='scrm-slide-container' style={{padding: '1px', width: (this.props.height * 0.9)+ 'px', height: (this.props.height * 0.9)+ 'px'}}>\r\n                    <div className ='scrm-slide-main'  onClick = {this.onPreview} style={{height: ((this.props.height * 0.9) - 20)+ 'px'}}>\r\n                        <span>{this.props.name}</span>\r\n                    </div>\r\n                    <div className=\"scrm-slider-download\" onClick = {this.onDownload} style={{height: '20px'}}>\r\n                        <img id='imgDownload' src={'/images/download.png'} alt='' width=\"20px\"/>\r\n                        <span>DOWNLOAD</span>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass CustomSlide extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.onSelectPrev = this.onSelectPrev.bind(this);\r\n        this.onSelectNext = this.onSelectNext.bind(this);\r\n    }\r\n    static defaultProps = { height: 200 }\r\n    setSlideInfo = (props) => {\r\n        let info = [];\r\n        return info;\r\n    }\r\n    setSlideContent = (item) => {\r\n        return (\r\n            item.map((data, idx) => {\r\n                return <SlideContainer key={'_slidsContainer_' + idx} name={data.FILE_NM} url={ process.env.API_URL + 'img/' + data.FILE_NM } height={this.props.height}/>\r\n            })\r\n        );\r\n    }\r\n    onDownloadAll = () => {\r\n        console.log('download all');\r\n    }\r\n    onSelectPrev = () => { this.slider.slickPrev(); }\r\n    onSelectNext = () => { this.slider.slickNext(); }\r\n    render() {\r\n        const settings = {\r\n                dots: true\r\n            ,   slidesToShow: Number(this.props.data.length) <= 5 ? this.props.data.length : 5\r\n            ,   slidesToScroll: 1\r\n            ,   initialSlide: 0\r\n            ,   speed: 500 \r\n            ,   responsive: [\r\n                    { breakpoint: 1024, settings: { slidesToShow: 3, slidesToScroll: 1, infinite: true, dots: true}}\r\n                ,   { breakpoint: 600, settings: { slidesToShow: 2, slidesToScroll: 1 }}\r\n                ,   { breakpoint: 480, settings: { slidesToShow: 1, slidesToScroll: 1 }}\r\n              ]\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{display : 'flex', width: '100%', height: this.props.height + 'px'}}>\r\n                    <div className='scrm-slide-prev' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectPrev}>\r\n                        <h1>&#10094;</h1>\r\n                    </div>\r\n                    <div style={{width : \"80%\"}}>\r\n                        <Slider ref={c => (this.slider = c)} {...settings}>\r\n                            {this.setSlideContent(this.props.data)}\r\n                        </Slider>\r\n                    </div>\r\n                    <div className='scrm-slide-next' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectNext}>\r\n                        <h1>&#10095;</h1>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default CustomSlide;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Tabs extends React.Component {\r\n    static propTypes = {\r\n        // children: PropTypes.instanceOf(Array).isRequired,\r\n        onClick : PropTypes.func.isRequired,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            active: (React.Children.toArray(this.props.children).length === 0) \r\n                    ? 0 \r\n                    : React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none')[0].props.index };\r\n    }\r\n    static defaultProps = {\r\n        onClick : (e) => {return false;}\r\n    }\r\n    onClickTab = (index) => {\r\n        this.setState({ active: index });\r\n        this.props.onClick(index);\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{marginBottom: '50px'}}>\r\n                    <ul className ='scrm-tabs-ul'>\r\n                        {\r\n                            React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((tab) => {\r\n                                    return (\r\n                                        <Tab id={this.props.id} tabWidth= {this.props.tabWidth} active ={this.state.active} key ={tab.props.index} index= {tab.props.index} label = {tab.props.label} onClick = {this.onClickTab}/>\r\n                                    )\r\n                            })\r\n\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className='scrm-tab-container' style={{height: this.props.height}}>\r\n                    {   \r\n                        React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((child) => {\r\n                            if (child.props.index !== this.state.active) return undefined;\r\n                            return child.props.children;\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n} \r\nclass Tab extends React.Component {\r\n    static propTypes = {\r\n        active: PropTypes.number.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n        tabWidth: PropTypes.string.isRequired\r\n    };\r\n    onClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    }\r\n    render () {\r\n        let className = 'scrm-tabs-ul-li';\r\n        if (this.props.active === this.props.index) {\r\n            className += ' scrm-tabs-ul-li-active'\r\n        }\r\n        return (\r\n            <li className ={className} style={{width: this.props.tabWidth}} onClick ={this.onClick}> {this.props.label} </li>\r\n        );\r\n    }\r\n}\r\nclass TabPanel extends React.Component {\r\n    static defaultProps = {\r\n        index : 0,\r\n        label : 'TAB'\r\n    }; \r\n    render () {\r\n        return ( <div id={this.props.id} className='scrm-tab-panel'> {this.props.children} </div> )\r\n    }\r\n}\r\nexport { Tabs, Tab, TabPanel };","import React from 'react';\r\nimport 'assets/styles/component.css';\r\n\r\nclass Table extends React.Component {\r\n    setColGroup = (colGrp) => {\r\n        if (colGrp === undefined) {\r\n            return null;\r\n        } else {\r\n            if (colGrp.length === 0) {\r\n                return null;\r\n            }  else {\r\n                return colGrp.map((colGrp, index) => {\r\n                    return (<col key={'col_' + index} style={{width: colGrp.width}}></col>)\r\n                });\r\n            }\r\n        }\r\n    }\r\n    setBody = (body) => {\r\n        if (body === undefined)  {\r\n            return null;\r\n        } else {\r\n            return this.setRow(body);\r\n        }\r\n    }\r\n    setRow = (rowArray) => {\r\n        return rowArray.map((colArray, index) => {\r\n            return (<tr key={'tr_' + index}>{this.setColumn(colArray)}</tr>)\r\n        });\r\n        \r\n    }\r\n    setColumn = (colArray) => {\r\n        return colArray.map((colJson, index) => {\r\n            return (\r\n              (colJson.type === 'T') ?  <th className='scrm-table-th' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</th>\r\n                                     :  <td className='scrm-table-td' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</td>\r\n            )\r\n        });\r\n    }\r\n    render () {\r\n        return (\r\n            <table className = 'scrm-table' id = {this.props.id} style={{width: this.props.width}}>\r\n                <colgroup>\r\n                    { this.setColGroup(this.props.colGrp) }\r\n                </colgroup>\r\n                { (this.props.head === null || this.props.head === undefined) ? <thead>{this.props.head}</thead> : <thead/> }\r\n                <tbody>\r\n                    { this.setBody(this.props.tbData) }\r\n                </tbody>\r\n                { (this.props.footer === null || this.props.footer === undefined) ? <tfoot>{this.props.footer}</tfoot> : <tfoot></tfoot> }\r\n            </table>\r\n        );\r\n    }\r\n}\r\nexport default Table;","import React from 'react';\r\nimport {IconButton, LFloatArea} from 'components';\r\n\r\nclass Tray extends React.Component {\r\n    isContain = () => {\r\n\t\t  console.log(' ===== Tray isContain ===== ');\r\n    }\r\n    select = () => {\r\n          console.log(' ===== Tray select ===== ');\r\n    }\r\n    remove = () => {\r\n\t\t  console.log(' ===== Tray remove ===== ');\r\n    }\r\n    removeAll = () => {\r\n\t\t  console.log(' ===== Tray removeAll ===== ');\r\n    }\r\n    initialize = () => {\r\n\t\t  console.log(' ===== Tray initialize ===== ');\r\n    }\r\n}\r\n\r\nclass TrayDiv extends React.Component {\r\n  constructor(props)  {\r\n      super(props);\r\n      this.state = {\r\n\r\n      }\r\n  }\r\n\r\n    selectMenu = (props) => {\r\n        console.log(props);\r\n\r\n        this.props.data.map((key, i) => {\r\n            if(props.MNU_ID === key.MNU_ID) {\r\n\r\n                if(document.getElementById(props.MNU_ID) !== null) {\r\n                    document.getElementById(props.MNU_ID).style.display = 'block';\r\n\r\n                    // tray selected 변경 처리\r\n                    this.props.onSelect(props);\r\n                }\r\n\r\n            } else {\r\n                if(document.getElementById(key.MNU_ID) !== null && document.getElementById(key.MNU_ID) !== undefined) {\r\n                    document.getElementById(key.MNU_ID).style.display = 'none';\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    removeMenu = (menu) => {\r\n        console.log(menu);\r\n\r\n        this.props.onClose(menu);\r\n    }\r\n    render () {\r\n        //debugger;\r\n        return (\r\n            <React.Fragment>\r\n                <LFloatArea>\r\n                <div className='scrm-tray-div'>\r\n                    <ul>\r\n                        {\r\n                            this.props.data.map((item, key) => {\r\n                                return (\r\n                                <li key={'scrm-tray-div' + key} id={'tray_li_' + item.MNU_ID} onClick={this.selectMenu.bind(this, item)}>\r\n                                    <div className='scrm-tray-div-li-div'>{item.MNU_NM}</div>\r\n                                    <IconButton classes='scrm-tray-div-btn-close' id='btnClose' onClick={this.removeMenu.bind(this, item)}/>\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                </LFloatArea>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport {Tray, TrayDiv};","import React from 'react';\r\n\r\nclass Textarea extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='scrm-textarea-div'>\r\n                <textarea id={this.props.id} value={this.props.value} rows=\"10\" onChange={(e) => this.props.onChange(e)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Textarea;","import React from 'react';\r\n\r\nclass Tree extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\te.target.parentElement.querySelector('.scrm-react-tree-ul-nested').classList.toggle('scrm-react-tree-ul-active');\r\n\t\te.target.classList.toggle('scrm-react-tree-check-box');\r\n\t}\r\n\tsetComboItem = () => {\r\n\t\tconsole.log('setComboItem');\r\n\t\tthis.props.dataset.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tkey : item.id,\r\n\t\t\t\tparn_key : item.parn_id,\r\n\t\t\t\tlabel : item.value,\r\n\t\t\t\tnode : this.props.dataset.filter(node => node.parn_id === item.id)\r\n\t\t\t}\r\n\t\t}).forEach((item) => {\r\n\t\t\tlet html = null;\r\n\t\t\tlet span = document.createElement('span');\r\n\t\t\tlet ul = document.createElement('ul');\r\n\t\t\tlet li = document.createElement('li');\r\n\t\t\tif (item.node.length > 0) {\r\n\t\t\t\tspan.innerText = item.label;\r\n\t\t\t\tspan.className = 'scrm-react-tree-box';\r\n\t\t\t\tspan.onclick = this.onClick;\r\n\r\n\t\t\t\tul.id = item.key;\r\n\t\t\t\tul.className = 'scrm-react-tree-ul-nested'\r\n\r\n\t\t\t\thtml = li\r\n\t\t\t\thtml.appendChild(span);\r\n\t\t\t\thtml.appendChild(ul);\r\n\t\t\t\tif (item.parn_key === 'none') {\r\n\t\t\t\t\tdocument.getElementById(this.props.id).appendChild(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(item.parn_key).appendChild(html);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thtml = li;\r\n\t\t\t\thtml.innerText = item.label;\r\n\t\t\t\tif (item.parn_key === 'none') {\r\n\t\t\t\t\tdocument.getElementById(this.props.id).appendChild(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(item.parn_key).appendChild(html);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.setComboItem();\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-tree\">\r\n\t\t\t\t<ul className=\"scrm-react-tree-ul\" id={this.props.id}>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Tree;","import { combineReducers } from 'redux';\r\nimport appModule from './appModule';\r\n\r\nexport default combineReducers ({ appModule });\r\n","import configure from './configure';\r\nexport default configure();","import { createStore } from 'redux';\r\nimport modules from './modules';\r\n\r\nconst configure = () => {\r\n\t// const store = createStore(modules);\r\n\tconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\tconst store = createStore(modules, devTools);\r\n\r\n\treturn store;\r\n}\r\n\r\nexport default configure;","import axios from 'axios';\r\nimport { loadProgressBar } from 'x-axios-progress-bar';\r\nimport 'x-axios-progress-bar/dist/nprogress.css';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Dialog} from 'components';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\n\r\nconst newScrmObj = {\r\n\tconstants: {\r\n\t\tcrud: {\r\n\t\t\tread: 'r',\r\n\t\t\tcreate: 'c',\r\n\t\t\tupdate: 'u',\r\n\t\t\tdestroy: 'd',\r\n\t\t\tremove: 'e'\r\n\t\t},\r\n\t\tdatetime: {\r\n\t\t\tformat: 'YYYYMMDDHH24MISS'\r\n\t\t},\r\n\t\tmdi: {\r\n\t\t\tDIALOG : 'dialog',\r\n\t\t\tPOP_UP : 'popup',\r\n\t\t\tPLAYER : 'player',\r\n\t\t\tLOADING : '_loadDiv'\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\targument: {\r\n\t\t\t\tall: 'a',\r\n\t\t\t\tselect: 's',\r\n\t\t\t\tnone: 'n',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nconst ComLib = {\r\n\topenMenu: (menuId) => {\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.id = menuId;\r\n\t\tReactDOM.render( <div>123123</div>\r\n\t\t, document.getElementById(menuId));\r\n\t},\r\n\tisNull: (obj) => {\r\n\t\tif (typeof obj === undefined || obj === null) return true;\r\n\t},\r\n\tisJson: (data) => {\r\n\t\ttry {\r\n\t\t\tlet json = JSON.parse(data);\r\n\t\t\treturn (typeof json === 'object');\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tsetSession: (id, obj) => {\r\n\t\tif (typeof obj === 'object') {\r\n\t\t\tsessionStorage.setItem(id, JSON.stringify(obj));\r\n\t\t} else {\r\n\t\t\tsessionStorage.setItem(id, obj);\r\n\t\t}\r\n\t},\r\n\tgetSession: (id) => {\r\n\t\tif (ComLib.isJson(sessionStorage.getItem(id))) {\r\n\t\t\treturn JSON.parse(sessionStorage.getItem(id));\r\n\t\t} else {\r\n\t\t\treturn sessionStorage.getItem(id);\r\n\t\t}\r\n\t},\r\n\tsetGridHeader : (header) => {\r\n\t\tlet rtnArr = [];\r\n\t\tlet headerKey = Object.getOwnPropertyNames(header);\r\n\t\theaderKey.map((colVal) => {\r\n\t\t\trtnArr.push({ headerName : header[colVal], field : colVal } );\r\n\t\t});\r\n\t\treturn rtnArr;\r\n\t},\r\n\topenDialog : (type, msg, callback) => {\r\n\t\tif ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n\t\t\tlet dialog = document.createElement('div');\r\n\t\t\tdialog.id = newScrmObj.constants.mdi.DIALOG;\r\n\t\t\tdocument.body.appendChild(dialog);\r\n\t\t}\r\n\t\tif (type === 'C') {\r\n\t\t\tif (typeof callback === undefined || typeof callback !== 'function') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tReactDOM.render( <Dialog.ConfirmDialog open={true} message={msg}  onReturnVal = {callback}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t} else {\r\n\t\t\tReactDOM.render( <Dialog.AlertDialog   open={true} message={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t}\r\n\t},\r\n\topenPop : (url, name, options, callbackFunc) => {\r\n\t\tlet arrPopTag = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.POP_UP.length) === newScrmObj.constants.mdi.POP_UP\r\n\t\t);\r\n\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\t\tif (arrPopTag.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPopTag.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPopTag[arrPopTag.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPopTag.length * 10,  y: arrPopTag.length * 10 }\r\n\t\t}\r\n\t\tdocument.body.appendChild(popDiv);\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Dialog.PopupDialog\r\n\t\t\t\t\tpopupdivid = {popDiv.id}\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\turl={url}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmodaless={options.modaless}\r\n\t\t\t\t\tposition = {position}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonCallbackFunc={callbackFunc}\r\n\t\t\t\t\tonClose={\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\toptions.callback();\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</Provider>\r\n\t\t, popDiv);\r\n\t},\r\n\topenPlayer : (callId) => {\r\n\t\tlet arrPlayerPop = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.PLAYER.length) === newScrmObj.constants.mdi.PLAYER\r\n\t\t);\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\t\tif (arrPlayerPop.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPlayerPop.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPlayerPop[arrPlayerPop.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPlayerPop.length * 10,  y: arrPlayerPop.length * 10 }\r\n\t\t}\r\n\t\tdocument.body.appendChild(popDiv);\r\n\t\t// ReactDOM.render(\r\n\t\t// \t<Player\r\n\t\t// \t\topen={true}\r\n\t\t// \t\turl={url}\r\n\t\t// \t\tname={name}\r\n\t\t// \t\tmodaless={modaless}\r\n\t\t// \t\tposition = {position}\r\n\t\t// \t\toptions={options}\r\n\t\t// \t\tonCallbackFunc={callbackFunc}\r\n\t\t// \t\tonClose={\r\n\t\t// \t\t\t() => {\r\n\t\t// \t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t// \t\t\t\t\ttry {\r\n\t\t// \t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t// \t\t\t\t\t\t\ttry {\r\n\t\t// \t\t\t\t\t\t\t\toptions.callback();\r\n\t\t// \t\t\t\t\t\t\t} catch (err) {\r\n\t\t// \t\t\t\t\t\t\t\treject(err);\r\n\t\t// \t\t\t\t\t\t\t }\r\n\t\t// \t\t\t\t\t\t}\r\n\t\t// \t\t\t\t\t\tresolve();\r\n\t\t// \t\t\t\t\t} catch (error) {\r\n\t\t// \t\t\t\t\t\treject(error);\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t}).then(function () {\r\n\t\t// \t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t// \t\t\t\t}).catch(function (error) {\r\n\t\t// \t\t\t\t\tconsole.log(error);\r\n\t\t// \t\t\t\t});\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t/>\r\n\t\t// , popDiv);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [대분류 코드에 해당하는 소분류 공통코드를 갖고온다]\r\n\t* @param\t:\tstring sBigCtgCd\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. sBigCtgCd : 공통코드 대분류 코드\r\n\t\t\t\t\t2. 성공 => 대분류 코드에 해당하는 소분류 코드를 array로 return\r\n\t\t\t\t\t   실패 => empty array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCommCodeList: (sBigCtgCd) => {\r\n\t\tlet commCodeList = [];\r\n\t\tif (StrLib.isNull(sessionStorage.getItem('gdsCommCode')))  return commCodeList;\r\n\t\tcommCodeList = JSON.parse(sessionStorage.getItem('gdsCommCode'));\r\n\t\treturn commCodeList.filter(item => item.PARENT_CODE === sBigCtgCd);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [기준 코드에 해당하는 사용자 센터의 기준값을 갖고 온다]\r\n\t* @param\t:\tstring strStndCd, string strTargetCol\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. strStndCd : 기준코드\r\n\t\t\t\t\t2. strTargetCol : 대상 컬럼 ID ( 예 : 'ETC1_CONT' )\r\n\t\t\t\t\t3. 성공 => 사용자 센터에 등록된 기준값 정보에서 해당 기준 코드\r\n\t\t\t\t\t\t-> 대상 컬럼의 Value를 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCentStndVl: (strStndCd, strTargetCol) => {\r\n\t\tvar strRtn = \"\";\r\n\t\tvar arrStndVl = ComLib.getSession(\"gdsCentStndVl\");\r\n\r\n\t\tif (typeof arrStndVl === \"object\") {\r\n\t\t\tfor (var idx = 0; idx < arrStndVl.length; idx++) {\r\n\t\t\t\tif (arrStndVl[idx].STND_CD === strStndCd) {\r\n\t\t\t\t\tif (arrStndVl[idx].APY_YN === \"Y\") {\r\n\t\t\t\t\t\tstrRtn = arrStndVl[idx][strTargetCol];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (strTargetCol === 'APY_YN') strRtn = \"N\";\r\n\t\t\t\t\t\telse strRtn = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn strRtn;\r\n\t},\r\n\r\n\tgetInitScreen: () => {\r\n\t\tvar rtn = {};\r\n\t\tvar iScrnId = ComLib.getCentStndVl('00000', 'STND_VL');\r\n\t\tif (!StrLib.isNull(iScrnId))\r\n\t\t\trtn = (ComLib.getSession(\"gdsMenu\").filter(item => item.MNU_ID === iScrnId))[0];\r\n\t\treturn rtn;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [이미 변경된 Dataset을 react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateDs: (obj, strDatasetId, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, state[strDatasetId].records); }, () => {\r\n\t\t\tif (typeof callback === 'function') callback();\r\n\t\t});\r\n\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Value를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, integer nRowIndex, string strColumnId, string strValue\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. nRowIndex : 변경 대상 Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 대상 Column ID\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateValue: (obj, strDatasetId, nRowIndex, strColumnId, strValue, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setValueToDs(state, strDatasetId, nRowIndex, strColumnId, strValue); }, () => {\r\n\t\t\tif (typeof callback === 'function') callback();\r\n\t\t});\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Records를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateRecords: (obj, strDatasetId, arrRecords, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, arrRecords); }, () => {\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Dataset Records를 Initialize]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateInitRecords: (obj, strDatasetId, arrRecords) => {\r\n\t\tobj.setState((state) => { return DataLib.initRecordsToDs(state, strDatasetId, arrRecords); });\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [SelectBox List로 변환]\r\n\t* @param\t:\tarray arrRecords, string args\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. arrRecords : select inner list data\r\n\t\t\t\t\t2. args : list add flag (all : 전체 / select : 선택 / none)\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tconvComboList: (arrRecords, args) => {\r\n\t\tvar arr = [];\r\n\t\tif (arrRecords.length > 1) {\r\n\t\t\tif (args === newScrmObj.constants.select.argument.all) {\r\n\t\t\t\tarr.push({value: \"\", name: \"전체\"});\r\n\t\t\t} else if (args === newScrmObj.constants.select.argument.select) {\r\n\t\t\t\tarr.push({value: \"\", name: \"선택\"});\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var index = 0; index < arrRecords.length; index++) {\r\n\t\t\tarr.push({value: arrRecords[index][\"CODE\"], name: arrRecords[index][\"CODE_NM\"]});\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [메시지 코드에 해당하는 메시지 내용을 갖고 온다]\r\n\t* @param\t:\tstring msgcd, array args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. msgcd : 메시지 코드\r\n\t\t\t\t\t2. args : 메시지 내용 Replace value\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetMsgCont: (msgcd, args) => {\r\n\t\tvar strMsg = \"\";\r\n\t\tvar objMsg = ComLib.getSession(\"gdsMsgList\").filter(msg => msg.MSG_CD === msgcd);\r\n\t\tif (objMsg.length == 0) strMsg = \"Message not found\";\r\n\t\telse strMsg = objMsg[0].MSG_CONT;\r\n\r\n\t\tif (args != undefined && args.hasOwnProperty('length')) {\r\n\t\t\tfor (var idx = 0; idx < args.length; idx++) {\r\n\t\t\t\tstrMsg = strMsg.replace(\"{\" + idx + \"}\", args[idx]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn strMsg;\r\n\t},\r\n\r\n\tsetServerInfos: () => {\r\n\t\tvar serverInfos = JSON.parse(localStorage.getItem(\"infos\"));\r\n\t\tif (serverInfos.prod.host == window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"P\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.prod.host + \":\" + serverInfos.prod.port);\r\n\t\t} else if (serverInfos.dev.host == window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"D\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.dev.host + \":\" + serverInfos.dev.port);\r\n\t\t\tdocument.title = \"AI-QA [dev]\";\r\n\t\t} else if (serverInfos.localbuild.host == window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"B\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.localbuild.host + \":\" + serverInfos.localbuild.port);\r\n\t\t\tdocument.title = \"AI-QA [local]\";\r\n\t\t} else {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"L\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.local.host + \":\" + serverInfos.local.port);\r\n\t\t\tdocument.title = \"AI-QA [local]\";\r\n\t\t}\r\n\t},\r\n\r\n\tgetCentList: () => { //Type에 따라 Filtering?\r\n\t\treturn ComLib.getSession(\"gdsCentList\");\r\n\t},\r\n\tgetTeamList: (objDs) => { //Filtering 필요한 경우 추가\r\n\t\tlet arrTeamList = ComLib.getSession(\"gdsTeamList\");\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\")))\r\n\t\t\tarrTeamList = ComLib.getSession(\"gdsTeamList\").filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\treturn arrTeamList;\r\n\t},\r\n\tgetUserList: (objDs, blnActive) => { //Active Filtering\r\n\t\tif (ComLib.isNull(blnActive)) blnActive = true;\r\n\r\n\t\tlet arrUsrList = ComLib.getSession(\"gdsUserList\");\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\")))\r\n\t\t\tarrUsrList = arrUsrList.filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"TEAM_CD\")))\r\n\t\t\tarrUsrList = arrUsrList.filter(item => item.TEAM_CD === objDs.getValue(0, \"TEAM_CD\"));\r\n\t\tif (blnActive)\r\n\t\t\tarrUsrList = arrUsrList.filter(usr => usr.USE_YN === 'Y');\r\n\r\n\t\treturn arrUsrList;\r\n\t},\r\n};\r\n\r\nconst StrLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력값이 null에 해당하는 경우 모두를 한번에 체크한다]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t:\t1. sValue : 체크할 문자열 ( 예 : null 또는 undefined 또는 \"\" 또는 \"abc\" )\r\n\t\t\t\t\t2. sValue가 undefined, null, NaN, \"\", Array.length = 0인 경우 = true, 이외의 경우 false를 return한다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNull: (sValue) => {\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\t\tif (String(sValue).valueOf() === \"undefined\") return true;\r\n\t\tif (String(sValue).valueOf() === \"null\") return true;\r\n\t\tif (String(sValue).valueOf() === \"\") return true;\r\n\t\tif (sValue === null) return true;\r\n\t\tif (sValue === '') return true;\r\n\t\tif ((sValue === \"\") && (String(sValue.length).valueOf() === \"undefined\")) return true;\r\n\t\tif (sValue.length === 0) return true;\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4 )\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\t getPos: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.indexOf(sFind, nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.toLowerCase().indexOf(sFind.toLowerCase(), nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverse: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr(pos, sFind.length) === sFind) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverseCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr( pos, sFind.length ).toLowerCase() === sFind.toLowerCase()) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별하여 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxbbccxx\" ) return\r\n\t\t\t\t\t   실패 => sOrg return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplace: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return sOrg;\r\n\t\tif (StrLib.isNull(sRepTo)) return sOrg;\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPos(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별없이 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxxxccxx\" ) return\r\n\t\t\t\t\t   실패 => sOrg return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplaceCase: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return sOrg;\r\n\t\tif (StrLib.isNull(sRepTo)) return sOrg;\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPosCase(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [주민번호(7자리 이상)에서 성별 구분]\r\n\t* @param\t:\tstring sRrNo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sRrNo : 생년월일성별 또는 주민번호\r\n\t\t\t\t\t2. 성공 => 7번째 자리 번호 기준 남자 : 'M' / 여자 : 'F' return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetSexCd: (sRrNo) => {\r\n\t\tlet strRno = StrLib.getNumStr(sRrNo);\r\n\t\tif (strRno.length < 7) return '';\r\n\r\n\t\tlet strSexCd = \"\";\r\n\t\tif ((parseInt(strRno.substr(6, 1), 10)%2) === 0) strSexCd = \"F\";\r\n\t\telse strSexCd = \"M\";\r\n\r\n\t\treturn strSexCd;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [왼쪽에 문자열 추가]\r\n\t* @param\t:\tstring sOrg, string sPad, integer nCnt\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. sPad : Pad할 문자열(옵션 : Default=\" \")( 예 : \"aa\" )\r\n\t\t\t\t\t3. nCnt : 반복횟수(옵션 : Default=1) (예 : 2)\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"aaaabbccCC\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLPad: (sOrg, sPad, nCnt) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\t\tif (StrLib.isNull(nCnt)) nCnt = 1;\r\n\r\n\t\tvar sRet = \"\";\r\n\t\tfor (var i = 0; i < nCnt; i++) {\r\n\t\t\tsRet += sPad;\r\n\t\t}\r\n\r\n\t\treturn sRet += sOrg;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [오른쪽에 문자열 추가]\r\n\t* @param\t:\tString sOrg, String sPad, integer nCnt\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. sPad : Pad할 문자열(옵션 : Default=\" \")( 예 : \"aa\" )\r\n\t\t\t\t\t3. nCnt : 반복횟수(옵션 : Default=1) (예 : 2)\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"bbccCCaaaa\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRPad:(sOrg, sPad, nCnt) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\t\tif (StrLib.isNull(nCnt)) nCnt = 1;\r\n\r\n\t\tvar sRet = \"\";\r\n\t\tfor (var i = 0 ; i < nCnt ; i++) {\r\n\t\t\tsRet += sPad;\r\n\t\t}\r\n\r\n\t\treturn sOrg + sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 오른쪽에서 nSize만큼의 문자열을 가져온다]\r\n\t* @param\t:\tstring sOrg, integer nSize\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. nSize : 가져올문자열 길이 ( 예 : 2 )\r\n\t\t\t\t\t3. 성공 => 오른쪽에서 nSize만큼의 문자열 ( 예 : \"cc\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note\t\t:\tsOrg의 길이가 nSize보다 작은경우는 sOrg가 Return된다.\r\n\t\t\t\t\t( 예 : sOrg=\"a\", nSize=2 ===> return = \"a\" )\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRight: (sOrg, nSize) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(nSize)) return \"\";\r\n\t\tif (sOrg.length < nSize) return sOrg;\r\n\t\telse return sOrg.substr(sOrg.length - nSize, nSize);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 2Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 7 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLenB: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 2;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 3Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 9 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLen3B: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 3;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [전각문자를 반각문자로]\r\n\t* @reference:\t전각문자는 \"정사각형\" 안에 들어가는 문자이고, 반각은 그 정사각형의 반쪽에 들어가는 문자이다.\r\n\t\t\t\t\t전각문자의 폭은, 반각문자의 2배입니다.\r\n\t\t\t\t\t예를 들어 숫자 \"3\" 은, 한글 \"가\"의 절반의 폭만을 가지고 있습니다.\r\n\t\t\t\t\t그래서 영문과 숫자 등은 반각이고, 한글이나 한자들은 전각문자입니다.\r\n\t\t\t\t\t다만, 영문과 숫자를 전각으로 표현할 수도 있습니다.\r\n\t\t\t\t\t(예 : 전각문자 ===> ※★０＋\r\n\t\t\t\t\t\t반각문자 ===> 1a )\r\n\t* @param\t:\tstring sFull\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sFull : 전각문자( 예 : \"０＋\" )\r\n\t\t\t\t\t2. 성공 => 반각문자 ( 예 : \"0+\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetFull2Half: (sFull) => {\r\n\t\tif (StrLib.isNull(sFull)) return \"\";\r\n\r\n\t\tlet sHalf = \"\";\r\n\t\tfor (var i = 0; i < sFull.length; i++) {\r\n\t\t\tlet c = sFull.charCodeAt(i);\r\n\t\t\tif (c === 12288) sHalf += unescape(\"%20\");\r\n\t\t\telse if ((c >= 65281) && (c <= 65374)) sHalf += unescape(\"%\"+(c-65248).toString(16));\r\n\t\t\telse sHalf += sFull.charAt(i);\r\n\t\t}\r\n\t\treturn  sHalf;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [반각문자를 전각문자로]\r\n\t* @param\t:\tstring sHalf\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sHalf : 반각문자( 예 : \"0+\" )\r\n\t\t\t\t\t2. 성공 => 전각문자 ( 예 : \"０＋\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetHalf2Full: (sHalf) => {\r\n\t\tif (StrLib.isNull(sHalf)) return \"\";\r\n\r\n\t\tlet rTmp = \"\";\r\n\t\tlet iTmp = \"\";\r\n\t\tfor (var i = 0; i < sHalf.length; i++ ) {\r\n\t\t\t//기본 아스키 코드 값을 벗어난 경우(한글)는 전자로 변환할 필요 없음.\r\n\t\t\tif ((sHalf.charCodeAt(i) >= 32) && (sHalf.charCodeAt(i) <= 126)) {\r\n\t\t\t\tif (sHalf.charCodeAt(i) === 32) iTmp = unescape(\"%u\"+(12288).toString(16));\r\n\t\t\t\telse iTmp = sHalf.charCodeAt(i) + 65248;\r\n\t\t\t} else {\r\n\t\t\t\tiTmp = sHalf.charCodeAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (sHalf.charCodeAt(i) === 32) rTmp = rTmp + (iTmp);\r\n\t\t\telse rTmp += String.fromCharCode(iTmp);\r\n\t\t}\r\n\r\n\t\treturn rTmp;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 숫자형식에 맞는지 여부 체크]\r\n\t* @param\t:\tString sNum\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sNum : 체크할 문자열숫자 ( 예 : \"-1234.56\" ) (단, \",\"가 들어있으면 안 됨)\r\n\t\t\t\t\t2. 숫자형식에 맞는경우 => true return\r\n\t\t\t\t\t   숫자형식에 맞지않는 경우 => false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNum: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return false;\r\n\r\n\t\tlet point_cnt = 0;\r\n\t\tlet ret = true;\r\n\t\tfor (var i = 0; i < sNum.length; i++) {\r\n\t\t\tvar c = sNum.charAt(i);\r\n\t\t\tif (i === 0 && (c === \"+\" || c === \"-\"));\r\n\t\t\telse if (c >= \"0\" && c <= \"9\");\r\n\t\t\telse if (c === \".\") {\r\n\t\t\t\tpoint_cnt++;\r\n\t\t\t\tif (point_cnt > 1) {\r\n\t\t\t\t\tret = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tret = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z)만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ\" )\r\n\t\t\t\t\t2. 알파벳만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlpha: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z), 숫자만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ09\" )\r\n\t\t\t\t\t2. 알파벳, 숫자만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳, 숫자가 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlNum: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z0-9]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 한글로만 구성되어 있는지 체크]\r\n\t* @param\t: String sVal\r\n\t* @return\t: boolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"가나다\" )\r\n\t\t\t\t\t2. 한글만 있는경우 = true return,\r\n\t\t\t\t\t한글이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisKor: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tfor (var i = 0; i < sVal.length; i++ ) {\r\n\t\t\tif (!((sVal.charCodeAt(i) > 0x3130 && sVal.charCodeAt(i) < 0x318F) || (sVal.charCodeAt(i) >= 0xAC00 && sVal.charCodeAt(i) <= 0xD7A3))) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열 Trim 함수]\r\n\t* @param\t:\tstring args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. args : trim 할 값\r\n\t\t\t\t\t2. 성공 => trim String return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTrim: (arg) => {\r\n\t\tvar str = new String(arg);\r\n\t\tif (str === null || str === \"null\") return \"\";\r\n\t\tif (new String(str).valueOf() === \"undefined\") return \"\";\r\n\t\tif (new String(str) == null) return \"\";\r\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열에서 숫자만 추출한다.]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. sValue : 추출대상 ( 예 : '2020-09-02' )\r\n\t\t\t\t\t2. 성공 => '20200902' return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetNumStr: (sValue) => {\r\n\t\tif (StrLib.getTrim(sValue) === \"\") return \"\";\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\r\n\t\tvar sResult = \"\";\r\n\t\tvar sNum = \"0123456789\";\r\n\t\tfor (var i = 0; i<sValue.length; i++) {\r\n\t\t\tif (sNum.indexOf(sValue.charAt(i)) > -1) sResult += sValue.charAt(i);\r\n\t\t}\r\n\t\treturn sResult;\r\n\t},\r\n};\r\n\r\nconst NumLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [숫자에 \",\"를 집어넣기]\r\n\t* @param\t:\tinteger sNum\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sNum : 숫자( 예 : -1234567.89 )\r\n\t\t\t\t\t2. 성공 => \",\"가 들어간 문자열 ( 예 : -1,234,567.89 ) return,\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetComma: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return \"\";\r\n\r\n\t\tvar nEnd, nStart = 0, sRet = \"\";\r\n\t\tsNum = StrLib.getTrim(sNum);\r\n\r\n\t\tif (sNum.charAt(0) === \"+\" || sNum.charAt(0) === \"-\") {\r\n\t\t\tsRet += sNum.charAt(0);\r\n\t\t\tnStart = 1;\r\n\t\t}\r\n\r\n\t\tvar ppos = StrLib.getPos(sNum, \".\", nStart);\r\n\t\tif (ppos < 0) nEnd = sNum.length;\r\n\t\telse nEnd = ppos;\r\n\r\n\t\tvar sDigit = sNum.substr(nStart, nEnd-nStart);\r\n\t\tfor (var pos = 0; pos < sDigit.length; pos ++ ) {\r\n\t\t\tif ( pos !== 0 && (sDigit.length-pos)%3 === 0) sRet += \",\";\r\n\t\t\tsRet += sDigit.charAt(pos);\r\n\t\t}\r\n\r\n\t\tsRet += sNum.substr(nEnd);\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Array에 있는 값들을 Distinct(중복제거)한다]\r\n\t* @param\t:\tarray aOrg\r\n\t* @return\t:\tarray\r\n\t* @see\t\t: \t1. aOrg : 중복을 제거할 원래 Array ( 예 : (1,1,2,2,3,4,5) )\r\n\t\t\t\t\t2. 성공 => 중복이 제거된 Array ( 예 : (1,2,3,4,5) ) return,\r\n\t\t\t\t\t   실패 => 빈 Array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDistinct: (aOrg) => {\r\n\t\tvar aDist = new Array();\r\n\t\tif (StrLib.isNull(aOrg)) return aDist;\r\n\r\n\t\tfor (var i = 0; i < aOrg.length; i++) {\r\n\t\t\tvar vDist = aOrg[i];\r\n\t\t\tvar flag = false;\r\n\t\t\tfor (var j = 0; j < aDist.length; j++) {\r\n\t\t\t\tif (\"x\" + aDist[j] === \"x\" + vDist) {\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag === false) aDist[aDist.length] = vDist;\r\n\t\t}\r\n\t\treturn aDist;\r\n\t}\r\n};\r\n\r\nconst FileLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [File Path 문자열(예 : C:\\a\\b\\filename.ext)에서 File명(예 : filename)을 추출]\r\n\t* @param\t: string sPath, boolean bExt\r\n\t* @return\t: string\r\n\t* @see\t\t: \t1. sPath   - File Path 문자열 (예 : \"C:\\a\\b\\filename.ext\")\r\n\t\t\t\t\t2. bExt    - extend를 return되는 File명에 포함시킬지 여부 ( 옵션 : Default=false )\r\n\t\t\t\t\t\t\t\t- true \t: extend를 File명에 포함시킴\r\n\t\t\t\t\t\t\t\t- false : extend를 File명에 포함시키지 않음\r\n\t\t\t\t\t2. 성공 =\r\n\t\t\t\t\t\t\t- bExt = true인 경우 ===> sPath에서 File명(예 : \"filename.ext\") return\r\n\t\t\t\t\t\t\t- bExt = false인 경우 ===> sPath에서 File명(예 : \"filename\") return\r\n\t\t\t\t\t실패 = \"\" return\r\n\r\n\tgetFileName : ( sPath, bExt ) => {\r\n\t\tlet start_pos, end_pos, tmp_pos, filename;\r\n\r\n\t\tif( StrLib.isNull(sPath) )\t\treturn \"\";\r\n\t\tif( StrLib.isNull(bExt) )\r\n\t\t\tbExt = false;\r\n\r\n\t\tstart_pos = Math.max(StrLib.getPosReverse( sPath, \"\\\\\" ), StrLib.getPosReverse( sPath, \"/\" ));\r\n\t\ttmp_pos = StrLib.getPosReverse( sPath, \"::\");\r\n\t\tif( tmp_pos > 0 ) tmp_pos++;\r\n\t\tstart_pos = Math.max( start_pos, tmp_pos );\r\n\t\tif( bExt === false ) {\r\n\t\t\tend_pos = StrLib.getPosReverse( sPath, \".\" );\r\n\t\t\tif( end_pos < 0 )\r\n\t\t\t\tend_pos = sPath.length;\r\n\t\t\tfilename = sPath.substr( start_pos+1, end_pos-start_pos-1 );\r\n\t\t} else {\r\n\t\t\tfilename = sPath.substr( start_pos+1 );\r\n\t\t}\r\n\r\n\t\treturn filename;\r\n\t}\r\n\t*--------------------------------------------------------------------------------------*/\r\n};\r\nconst ExcelLib = {\r\n\r\n};\r\nconst DateLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 숫자로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => 마지막 날짜 숫자값 ( 예 : 30 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDateNum: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tlet nMonth, nLastDate;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return -1;\r\n\r\n\t\tnMonth = parseInt(sDate.substr(4,2), 10);\r\n\t\tif (nMonth === 1 || nMonth === 3 || nMonth === 5 || nMonth === 7  || nMonth === 8 || nMonth === 10 || nMonth === 12 ) {\r\n\t\t\tnLastDate = 31;\r\n\t\t} else if (nMonth === 2) {\r\n\t\t\tif ( DateLib.isLeapYear(sDate) === true ) nLastDate = 29;\r\n\t\t\telse nLastDate = 28;\r\n\t\t} else {\r\n\t\t\tnLastDate = 30;\r\n\t\t}\r\n\t\treturn nLastDate;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [윤년여부 확인]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sDate가 윤년인 경우\t\t\t=> true return\r\n\t\t\t\t\t   sDate가 윤년이 아닌 경우\t\t=> false return\r\n\t\t\t\t\t   sDate가 입력되지 않은 경우\t=> false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisLeapYear: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tlet ret, nY;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return false;\r\n\r\n\t\tnY = parseInt(sDate.substring(0,4), 10);\r\n\t\tif ((nY % 4) === 0) {\r\n\t\t\tif ((nY % 100) !== 0 || (nY % 400) === 0) ret = true;\r\n\t\t\telse ret = false;\r\n\t\t} else {\r\n\t\t\tret = false;\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 yyyyMMdd형태로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => yyyyMMdd형태의 마지막 날짜 ( 예 : \"20121130\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDate: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tif (StrLib.isNull(sDate)) return \"\";\r\n\t\tlet nLastDate = DateLib.getLastDateNum(sDate);\r\n\t\treturn sDate.substr(0,6) + nLastDate.toString();\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 일을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 일 증감값 ( 예 : 10 또는 -10 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121112\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddDate: (sDate, nOffset) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\r\n\t\tlet nYear\t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth\t= parseInt(sDate.substr(4, 2));\r\n\t\tlet nDate\t= parseInt(sDate.substr(6, 2)) + nOffset;\r\n\r\n\t\tlet objDate = new Date(nYear, nMonth - 1, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tlet sDay\t= StrLib.getRight(\"0\", objDate.getDate(), 2);\r\n\r\n\t\treturn sYear + sMonth + sDay;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 월을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 월 증감값 ( 예 : 1 또는 -1 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121022\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note  \t:\t단, 증감된 날짜가 그달의 마지막 날짜 월보다 큰 경우 그달의 마지막 날짜를 return한다.\r\n\t\t\t\t\t예를 들어, sDate=\"20120531\", nOffset=-1일 경우 return=\"20120430\" 이 된다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddMonth: (sDate, nOffset) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\t\tsDate = StrLib.getTrim(sDate);\r\n\r\n\t\tlet nYear \t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth \t= parseInt(sDate.substr(4, 2)) + nOffset;\r\n\t\tlet nDate \t= parseInt(sDate.substr(6, 2));\r\n\r\n\t\tlet nLastDate, sRet;\r\n\r\n\t\tlet objDate = new Date(nYear, nMonth, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tlet sDay\t= StrLib.getRight(\"0\", objDate.getDate(), 2);\r\n\t\tsRet = sYear + sMonth + sDay;\r\n\r\n\t\tlet nsDate \t= parseInt(sRet.substr(6, 2));\r\n\t\tnLastDate = DateLib.getLastDateNum(sRet);\r\n\t\tsRet = sRet.substr(0,6);\r\n\r\n\t\tif (nsDate > nLastDate) sRet += nLastDate.toString();\r\n\t\telse sRet += (StrLib.getRight(\"0\" + nsDate, 2)).toString();\r\n\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜를 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMdd형태의 오늘 날짜 ( 예 : \"20121122\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetToday: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜 + 시간을 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMddhhmiss형태의 오늘 날짜 ( 예 : \"20121122223010\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTodayTime: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getHours(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getMinutes(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getSeconds(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 일자간의 차이 일수 계산]\r\n\t* @param\t: \ttring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20121202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이일수  ( 예 : 10 )  return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다\r\n\t\t\t\t\t   실패 => return \"\"\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffDate: (sStartDate, sEndDate) => {\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return \"\";\r\n\r\n\t\tlet vFromDate = new Date(parseInt(sEndDate.substring(0,4),  10), parseInt(sEndDate.substring(4,6)-1,  10), parseInt(sEndDate.substring(6,8), 10));\r\n\t\tlet vToDate = new Date(parseInt(sStartDate.substring(0,4),  10), parseInt(sStartDate.substring(4,6)-1,  10), parseInt(sStartDate.substring(6,8), 10));\r\n\r\n\t\treturn parseInt((vFromDate - vToDate) / (1000 * 60 * 60 * 24));\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 월간의 차이 월수 계산]\r\n\t* @param\t:\tstring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20131202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이월수  ( 예 : 10 ) return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다.\r\n\t\t\t\t\t   실패 => NaN return\r\n\t* @note\t\t:\t단, sStartDate, sEndDate의 일은 포함하지 않고 계산된다\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffMonth: (sStartDate, sEndDate) => {\r\n\t\tlet nStartMon, nEndMon;\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return NaN;\r\n\r\n\t\tnStartMon = parseInt(sStartDate.substr(0, 4), 10) * 12 + parseInt(sStartDate.substr(4, 2), 10);\r\n\t\tnEndMon = parseInt(sEndDate.substr(0, 4), 10) * 12 + parseInt(sEndDate.substr(4, 2), 10);\r\n\r\n\t\treturn (nEndMon - nStartMon);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [date => string]\r\n\t* @param\t:\tdate objDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. objDate : Date Object\r\n\t\t\t\t\t2. 성공 => yyyyMMdd 형태의 날짜 문자열 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetStringDate: (objDate) => {\r\n\t\tif (StrLib.isNull(objDate)) return '';\r\n\r\n\t\tlet year = objDate.getFullYear();\r\n\t\tlet month = (1 + objDate.getMonth());\r\n\t\tmonth = month >= 10 ? month : '0' + month;\r\n\t\tlet day = objDate.getDate();\r\n\t\tday = day >= 10 ? day : '0' + day;\r\n\r\n\t\treturn year + month + day;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [string => date]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tdate\r\n\t* @see\t\t:\t1. sDate : yyyyMMdd 형태의 날짜 문자열\r\n\t\t\t\t\t2. 성공 => Date Object 형태로 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDateYymmdd: (sDate) => {\r\n\t\tif (StrLib.isNull(sDate)) return '';\r\n\t\tif (sDate.length === 8) return new Date(parseInt(sDate.substring(0, 4)), parseInt(sDate.substring(4, 6)) - 1, parseInt(sDate.substring(6, 8)));\r\n\t\telse return '';\r\n\t},\r\n};\r\n\r\nconst DataLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Value를 Dataset Objec 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, integer nRowIndex, string, strColumnId, string strValue\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin')\r\n\t\t\t\t\t3. nRowIndex : 변경 Value의 Target Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 Value의 Target Column ID ( 예 : 'USR_CD')\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetValueToDs: (prevState, strDatasetId, nRowIndex, strColumnId, strValue) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setValue(nRowIndex, strColumnId, strValue);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Record를 Dataset Object 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Dataset Record를 Initialize]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tinitRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.initRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\tdatalist: {\r\n\t\trecords: [],\r\n\t\torgrecords: [],\r\n\t\theader: {},\r\n\t\tsize: function() {return this.records.length;},\r\n\t\tget: function(index) {\r\n\t\t\tif (this.records.length > 0) return this.records[index];\r\n\t\t\telse return null;\r\n\t\t},\r\n\t\tgetRecords: function() {\r\n\t\t\treturn this.records;\r\n\t\t},\r\n\t\tgetTransRecords: function() {\r\n\t\t\tvar arrRecords = JSON.parse(JSON.stringify(this.records));\r\n\t\t\tvar arrOrgRecs = this.orgrecords;\r\n\r\n\t\t\tfor (var idxA = 0; idxA < arrRecords.length; idxA++) {\r\n\t\t\t\tfor (var idxB = 0; idxB < arrOrgRecs.length; idxB++) {\r\n\t\t\t\t\tif (arrRecords[idxA].recid === arrOrgRecs[idxB].recid) arrRecords[idxA].orgdata = arrOrgRecs[idxB];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arrRecords;\r\n\t\t},\r\n\t\tsetRecords: function(records) {\r\n\t\t\tthis.records = records;\r\n\t\t},\r\n\t\tappendRecords: function(records) {\r\n\t\t\tthis.records = this.records.concat(records);\r\n\t\t\tthis.orgrecords = this.orgrecords.concat(JSON.parse(JSON.stringify(records)));\r\n\t\t},\r\n\t\tinitRecords: function(records) {\r\n\t\t\trecords = records || {};\r\n\t\t\tif (records.length != undefined) {\r\n\t\t\t\tthis.initialize(records);\r\n\t\t\t\tthis.records = records;\r\n\t\t\t\tthis.orgrecords = JSON.parse(JSON.stringify(records));\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValue: function(index, column) {return this.records[index][column];},\r\n\t\tsetValue: function(index, column, value) {\r\n\t\t\tthis.records[index][column] = value;\r\n\t\t\tvar recid = this.records[index].recid;\r\n\t\t\tif (this.records[index].rowtype != 'c' && this.records[index].rowtype != 'd') {\r\n\t\t\t\tfor (var idx = 0; idx < this.orgrecords.length; idx++) {\r\n\t\t\t\t\tif (this.orgrecords[idx].recid === recid) {\r\n\t\t\t\t\t\tif (this.orgrecords[idx][column] === value) this.records[index].rowtype = \"r\";\r\n\t\t\t\t\t\telse if (this.orgrecords[idx][column] !== value) this.records[index].rowtype = \"u\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueByRecId: function(recid, column) {return this.records[this.indexOf(\"recid\", recid)][column];},\r\n\t\tsetValueByRecId: function(recid, column, value) {\r\n\t\t\tvar index = this.indexOf(\"recid\", recid);\r\n\t\t\tthis.records[index][column] = value;\r\n\t\t\tif (this.records[index].rowtype != 'c' && this.records[index].rowtype != 'd') {\r\n\t\t\t\tfor (var idx = 0; idx < this.orgrecords.length; idx++) {\r\n\t\t\t\t\tif (this.orgrecords[idx].recid === recid) {\r\n\t\t\t\t\t\tif (this.orgrecords[idx][column] === value) this.records[index].rowtype = \"r\";\r\n\t\t\t\t\t\telse if (this.orgrecords[idx][column] !== value) this.records[index].rowtype = \"u\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\taddRow: function() {\r\n\t\t\tthis.records.push(this.header);\r\n\t\t\tthis.records[this.size()-1]['recid'] = this.size();\r\n\t\t\tthis.records[this.size()-1]['rowtype'] = 'c';\r\n\t\t\treturn this.size() - 1;\r\n\t\t},\r\n\t\tgetRow: function(index) {\r\n\t\t\treturn JSON.parse(JSON.stringify([this.records[index]]));\r\n\t\t},\r\n\t\tindexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = 0; i < this.records.length; i++) {\r\n\t\t\t\tif (this.records[i][column] == value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tlastIndexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = this.records.length; i >=0; i--) {\r\n\t\t\t\tif (this.records[i][column] == value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tfind: function(column, value) {\r\n\t\t\treturn this.records.filter((new Function(`return obj => obj.${column}=='${value}'`))());\r\n\t\t},\r\n\t\tfindFirst: function(column, value) {\r\n\t\t\treturn this.records[this.indexOf(column, value)];\r\n\t\t},\r\n\t\tfindLast: function(column, value) {\r\n\t\t\treturn this.records[this.lastIndexOf(column, value)];\r\n\t\t},\r\n\t\tfilter: function(filterexpr) {\r\n\t\t\treturn this.records.filter((new Function(`return ds => ${filterexpr}`))());\r\n\t\t},\r\n\t\tlookup: function(column, value, target) {\r\n\t\t\tvar record = this.findFirst(column, value);\r\n\t\t\treturn record == undefined ? undefined : record[target];\r\n\t\t},\r\n\t\tisUpdated: function() {\r\n\t\t\tif (this.records.filter(obj => obj.rowtype != 'r').length > 0) return true;\r\n\t\t\telse return false;\r\n\t\t},\r\n\t\tinitialize: function(records) {\r\n\t\t\tfor (var idx = 0; idx < records.length; idx++) {\r\n\t\t\t\tif (!records[idx].hasOwnProperty(\"recid\")) records[idx].recid = idx + 1;\r\n\t\t\t\tif (!records[idx].hasOwnProperty(\"rowtype\")) records[idx].rowtype = 'r';\r\n\t\t\t}\r\n\r\n\t\t\tvar arrCol = Object.keys(records[0]);\r\n\t\t\tfor (var idx = 0; idx < arrCol.length; idx++) {\r\n\t\t\t\tthis.header[arrCol[idx]] = \"\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetInstance: function(props) {\r\n\t\t\tprops = props || {};\r\n\t\t\tif (props.length != undefined) {\r\n\t\t\t\tthis.initialize(props);\r\n\t\t\t\tprops = {records: props, orgrecords: JSON.parse(JSON.stringify(props))};\r\n\t\t\t}\r\n\t\t\treturn _.assign({}, DataLib.datalist, props);\r\n\t\t},\r\n\t}\r\n};\r\n\r\nclass TransManager {\r\n\tconstructor() {\r\n\t\tthis.id = '';\r\n\t\tthis.url = '';\r\n\t\tthis.callback = null;\r\n\t\tthis.beforeSend = null;\r\n\t\tthis.erorr = null;\r\n\t\tthis.timeout = (1000 * 30);\r\n\t\tthis.async = true;\r\n\t\tthis.asyncdata = null;\r\n\t\tthis.dataType = 'json';\r\n\t\tthis.contentType = 'application/json';\r\n\t\tthis.progress = true;\r\n\t\tthis.constants = {\r\n\t\t\turl: {\r\n\t\t\t\tcommon: '/json.service.do',\r\n\t\t\t\tupload: '/upload.service.do',\r\n\t\t\t},\r\n\t\t\terrorcode: {\r\n\t\t\t\tSUCCESS: '0',\r\n\t\t\t\tERROR: '-2'\r\n\t\t\t},\r\n\t\t\tsystemid: {\r\n\t\t\t},\r\n\t\t\tcrudh: {\r\n\t\t\t\tcreate: '0',\r\n\t\t\t\tread: '1',\r\n\t\t\t\tupdate: '2',\r\n\t\t\t\tdestroy: '3',\r\n\t\t\t\tprocedure: '4',\r\n\t\t\t\thandle: '5',\r\n\t\t\t\tsequence: '6',\r\n\t\t\t\titerator: '7',\r\n\t\t\t\tbatch: '8',\r\n\t\t\t\tdir: '9',\r\n\t\t\t\tpasswd: '10',\r\n\r\n\t\t\t\tdataset: 'ds_config'\r\n\t\t\t},\r\n\t\t\tdao: {\r\n\t\t\t\tbase: '0'\r\n\t\t\t},\r\n\t\t\tconfig: {\r\n\t\t\t\tdao: '',\r\n\t\t\t\tcrudh: '',\r\n\t\t\t\tsqlmapid: '',\r\n\t\t\t\tdatasetmap: '',\r\n\t\t\t\tdatasetsend: '',\r\n\t\t\t\tdatasetrecv: '',\r\n\t\t\t\tcolumnid: '',\r\n\t\t\t\tsystemid: '',\r\n\t\t\t\tretry: 0\r\n\t\t\t},\r\n\t\t\taccessToken: '',\r\n\t\t\tcontentType: {\r\n\t\t\t\tupload: 'multipart/form-data',\r\n\t\t\t\tjson: 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.transdata = {\r\n\t\t\tepytwor: newScrmObj.constants.crud,\r\n\t\t\tgifnoc: [],\r\n\t\t\tdatasets: {},\r\n\t\t\treyolpme: { \"CENT_CD\": \"\", \"TEAM_CD\": \"\", \"USR_CD\" : \"\", \"AUTH_LV\": \"\", \"CONN_IP\": \"\" },\r\n\t\t};\r\n\t\tthis.datatype = {\r\n\t\t\thtml: 'html',\r\n\t\t\tjson: 'json',\r\n\t\t\tscript: 'script',\r\n\t\t\txml: 'xml'\r\n\t\t};\r\n\t};\r\n\tinitialize = () => {\r\n\t\tthis.transdata.epytwor = newScrmObj.constants.crud;\r\n\t\tthis.transdata.gifnoc = [];\r\n\t\tthis.transdata.reyolpme = { \"CENT_CD\": \"\", \"TEAM_CD\": \"\", \"USR_CD\" : \"\", \"AUTH_LV\": \"\", \"CONN_IP\": \"\" };\r\n\t\tthis.transdata.datasets = {};\r\n\t\tthis.setAccessToken(ComLib.getSession('accessToken'));\r\n\t};\r\n\tsetReyolpme = () => {\r\n\t\tvar reyolpme = this.transdata.reyolpme;\r\n\t\tif (sessionStorage.getItem(\"gdsUserInfo\") != null) {\r\n\t\t\tvar arrUser = ComLib.getSession(\"gdsUserInfo\");\r\n\t\t\treyolpme = {\r\n\t\t\t\t\"CENT_CD\": arrUser[0][\"CENT_CD\"],\r\n\t\t\t\t\"TEAM_CD\": arrUser[0][\"TEAM_CD\"],\r\n\t\t\t\t\"USR_CD\" : arrUser[0][\"USR_CD\"],\r\n\t\t\t\t\"AUTH_LV\": arrUser[0][\"AUTH_LV\"],\r\n\t\t\t\t\"CONN_IP\": arrUser[0][\"CONN_IP\"],\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn reyolpme;\r\n\t};\r\n\tsetTransUrl = (url) => {\r\n\t\tthis.url = url;\r\n\t\tif (this.constants.url.common === url) this.contentType = this.constants.contentType.json;\r\n\t\telse if (this.constants.url.upload === url) this.contentType = this.constants.contentType.upload;\r\n\t};\r\n\tsetBeforeSend = (beforeSend) => {\r\n\t\tthis.beforeSend = beforeSend;\r\n\t};\r\n\tsetTransId = (transId) => {\r\n\t\tthis.initialize();\r\n\t\tthis.id\t= transId;\r\n\t\tthis.transdata.reyolpme = this.setReyolpme();\r\n\t};\r\n\tsetCallBack = (callback) => {\r\n\t\tthis.callback\t= callback;\r\n\t};\r\n\tsetError = (error) => {\r\n\t\tthis.error = error;\r\n\t};\r\n\tsetTimeout = (timeout) => {\r\n\t\tthis.timeout = timeout;\r\n\t};\r\n\tsetAsync = (async) => {\r\n\t\tthis.async = async;\r\n\t};\r\n\tsetProgress = (progress) => {\r\n\t\tthis.progress = progress;\r\n\t};\r\n\tmakeTransData = () => {\r\n\t\treturn { transdata: JSON.stringify(this.transdata) };\r\n\t};\r\n\taddConfig = (props) => {\r\n\t\tthis.transdata.gifnoc.push(_.assign({}, this.constants.config, props));\r\n\t};\r\n\taddDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddSequence = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.sequence }));\r\n\t};\r\n\taddIterator = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.iterator }));\r\n\t};\r\n\taddSendDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddRecvDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\tsetAccessToken = (token) => {\r\n\t\tthis.constants.accessToken = token;\r\n\t};\r\n\treplcaceSpChar = (data) => {\r\n\t\treturn data.replace(/%/g, '％').replace(/=/g, '＝').replace(/&amp;/g, '＆').replace(/&/g, '＆');\r\n\t};\r\n\tdoLoading = (bVisible) => {\r\n\t\tlet objLoadDiv = document.getElementById(newScrmObj.constants.mdi.LOADING);\r\n\t\tif (ComLib.isNull(objLoadDiv)) {\r\n\t\t\tobjLoadDiv = document.createElement(\"div\");\r\n\t\t\tobjLoadDiv.id = newScrmObj.constants.mdi.LOADING;\r\n\t\t}\r\n\t\tdocument.body.appendChild(objLoadDiv);\r\n\t\tReactDOM.render(<Dialog.ModalLoading isOpen = {bVisible}/>, objLoadDiv);\r\n\t};\r\n\tupload = (onUploadProgress, callback) => {\r\n\t\tconst instance = axios.create({\r\n\t\t\tbaseURL: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.constants.contentType.upload,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken,\r\n\t\t\t}\r\n\t\t\t});\r\n\t\tconst config = {\r\n\t\t\tonUploadProgress: onUploadProgress\r\n\t\t}\r\n\r\n\t\tinstance.post(this.url, this.transdata.datasets.formData.formData, config)\r\n\t\t\t.then(function (response) {\r\n\t\t\treturn callback({id : response.data.resData.transId, data : response.data });\r\n\t\t})\r\n\t\t.catch(function (error) {\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t})\r\n\t\t.then(function () {\r\n\r\n\t\t});\r\n\t};\r\n\tagent = () => {\r\n\t\tconsole.log('request => ');\r\n\t\tconsole.log(this.transdata);\r\n\r\n\t\tloadProgressBar();\r\n\t\tif (this.progress) this.doLoading(this.progress);\r\n\t\tif (!this.async) this.agentSync();\r\n\t\telse this.agentAsync();\r\n\t};\r\n\tagentSync = () => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\t//url: process.env.API_URL + this.url,\r\n\t\t\turl: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\tdata: this.replcaceSpChar(JSON.stringify({\"transdata\":this.transdata})),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.constants.contentType.json,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true,\r\n\t\t\tretry: 0,\r\n\t\t\tprogress: this.progress,\r\n\t\t\ttimeout: this.timeout,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = axios(reqOptions);\r\n\t\t\tconsole.log('response => ');\r\n\t\t\tconsole.log(resData);\r\n\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', resData.data.gifnoc.ERR_MESSAGE);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('catch => ');\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t};\r\n\tagentAsync = async() => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\t//url: process.env.API_URL + this.url,\r\n\t\t\turl: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\tdata: this.replcaceSpChar(JSON.stringify({\"transdata\":this.transdata})),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.constants.contentType.json,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true,\r\n\t\t\tretry: 0,\r\n\t\t\tprogress: this.progress,\r\n\t\t\ttimeout: this.timeout,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = await axios(reqOptions);\r\n\t\t\tconsole.log('response => ');\r\n\t\t\tconsole.log(resData);\r\n\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', resData.data.gifnoc.ERR_MESSAGE);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('catch => ');\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t};\r\n};\r\nexport {newScrmObj, ComLib, StrLib, NumLib, FileLib, ExcelLib, DateLib, TransManager, DataLib };","import React from 'react';\r\nimport { ComLib, TransManager, StrLib, DataLib } from 'common';\r\nimport { Link } from 'react-router-dom';\r\nimport 'assets/styles/login.css';\r\n\r\nclass Login extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tComLib.setServerInfos();\r\n\r\n\t\t// state 초기화\r\n\t\tthis.state = {\r\n\t\t\tdsLogin: DataLib.datalist.getInstance(),\r\n\t\t\tdsRst: DataLib.datalist.getInstance(),\r\n\t\t\tdsLoginInfo: DataLib.datalist.getInstance([{USR_CD: \"\", PWD: \"\", CENT_CD: \"\", CONN_IP: \"\"}]),\r\n\t\t};\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.input.onKeyDown = this.event.input.onKeyDown.bind(this);\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogin':\r\n\t\t\t\t\t if (this.validation('LOGIN_R01')) { this.transaction('LOGIN_R01'); }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnChgPasswd':\r\n\t\t\t\t\tif (document.getElementById('popup_div_0') != undefined) {\r\n\t\t\t\t\t\tdocument.getElementById('popup_div_0').hidden = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet option = { width: '300px', height: '450px', modaless: false }\r\n\t\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', option);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrCd':\r\n\t\t\t\t\t//this.setState({...this.state, dsLoginInfo: {...this.state.dsLoginInfo, record: {...this.state.dsLoginInfo.record, USR_CD: e.target.value}}});\r\n\t\t\t\t\tthis.state.dsLoginInfo.setValue(0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tComLib.setStateDs(this, \"dsLoginInfo\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\t//this.setState({...this.state, dsLoginInfo: {...this.state.dsLoginInfo, record: {...this.state.dsLoginInfo.record, PWD: e.target.value}}});\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsLoginInfo\", 0, \"PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyDown: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\tdocument.getElementById('btnLogin').click();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"USR_CD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'ID를 입력해주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '비밀번호를 입력해주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tthis.state.dsRst.setValue(0, \"CONN_IP\", this.state.dsLoginInfo.getValue(0, \"CONN_IP\"));\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t * LOGIN_R01 : 로그인 체크\r\n\t * LOGIN_R02 : 사용자 정보 조회\r\n\t * LOGIN_U01 : 비멀번호 오류 카운트 업데이트\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'LOGIN_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsLogin\",\r\n\t\t\t\t\tcolumnid: \"PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_doLogin\",\r\n\t\t\t\t\tdatasetsend:\"dsLogin\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsLogin', this.state.dsLoginInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'LOGIN_R02':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t// 비밀번호 오류 카운트 초기화\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_initPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 로그인 정보 Merge\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_doLoginAfter\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 사용자 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 공통코드 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCommCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCommCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 메뉴 정보 조회 -> TO-DO : Main Frame으로 이동 ?\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMenuList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMenuInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 센터 기준값 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentStndList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentStvlInfo\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getTeamList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsTeamList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMsgList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMsgList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSendData', this.state.dsRst.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t// 비밀번호 에러 카운트 업데이트\r\n\t\t\tcase 'LOGIN_U01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_addPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsUpdatePwd\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUpdatePwd', this.state.dsLoginInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\t//this.setState({...this.state, dsRst: {...this.state.dsRst, records: res.data.dsRst}});\r\n\t\t\tComLib.setStateInitRecords(this, \"dsRst\", res.data.dsRst);\r\n\r\n\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'Y') {\r\n\t\t\t\t//console.log('accessToken : ' +  res.data.dsLogin.accessToken);\r\n\t\t\t\t//ComLib.setSession('accessToken', res.data.dsLogin.type + ' ' + res.data.dsLogin.accessToken);\r\n\t\t\t\tif (this.validation('LOGIN_R02')) this.transaction('LOGIN_R02');\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'USR_CD') {\r\n\t\t\t\t\tComLib.openDialog('A', '사용자가 존재하지 않습니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'LOGIN') {\r\n\t\t\t\t\tComLib.openDialog('A', '이미 로그인 된 사용자 입니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'MAX_ERR') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 입력 오류가 5회 초과하였습니다. 비밀번호를 초기화 해주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'INIT') {\r\n\t\t\t\t\tComLib.openDialog('C', '비밀번호 변경 대상자 입니다.\\n 비밀번호 변경 화면으로 이동합니다.', foo => { if (foo === true) document.getElementById('btnChgPasswd').click();});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'PWD_ERR') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 오류입니다.');\r\n\t\t\t\t\tif (this.validation('LOGIN_U01')) this.transaction('LOGIN_U01');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tconst access_token = true;\r\n\t\t\tComLib.setSession('token', access_token);\r\n\r\n\t\t\tComLib.setSession('gdsUserInfo',\tres.data.dsUserInfo);\r\n\t\t\tComLib.setSession('gdsCommCode',\tres.data.dsCommCodeInfo);\r\n\t\t\tComLib.setSession('gdsMenu', \t\tres.data.dsMenuInfo);\r\n\t\t\tComLib.setSession('gdsCentStndVl',\tres.data.dsCentStvlInfo);\r\n\t\t\tComLib.setSession('gdsCentList',\tres.data.dsCentList);\r\n\t\t\tComLib.setSession('gdsTeamList',\tres.data.dsTeamList);\r\n\t\t\tComLib.setSession('gdsUserList',\tres.data.dsUserList);\r\n\t\t\tComLib.setSession('gdsMsgList',\t\tres.data.dsMsgList);\r\n\r\n\t\t\t// 메인 화면으로 이동\r\n\t\t\t//window.location = '/base';\r\n\t\t\tdocument.getElementById('linkBase').click();\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className = 'scrm-login'>\r\n\t\t\t\t\t<div className = 'scrm-login-div'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-main'>\r\n\t\t\t\t\t\t\tAI-QA\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'txtUsrCd' value = {this.state.dsLoginInfo.records[0][\"USR_CD\"]} placeholder = {' 아이디'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'txtUsrPasswd' value = {this.state.dsLoginInfo.records[0][\"PWD\"]} placeholder = {' 비밀번호'} onChange = {this.event.input.onChange} onKeyDown = {this.event.input.onKeyDown}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t<button id = 'btnLogin' onClick = {this.event.button.onClick}>{'로그인'}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t<button id = 'btnChgPasswd' onClick = {this.event.button.onClick}>{'비밀번호 변경'}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{display: 'none'}}>\r\n\t\t\t\t\t{/*<Link id = 'linkPwdChg'\tto = {{pathname: '/pwdChg',\tstate: {param: this.state.dsLoginInfo.getRecords()}}}/>*/}\r\n\t\t\t\t\t<Link id = 'linkBase'\tto = {{pathname: '/base',\tstate: {}}}/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, CentListSelectBox} from 'components';\r\nimport {Grid, ScrmLineBarChart, ProgressBar, Selectbox} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n//\tNo. COM010000\r\n//\tName : 대쉬보드 화면\r\n//\tWritten By : HW.LEE\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone] \r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tid : 'selTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{value : 'opt1', name : '옵션1'},\r\n\t\t\t\t\t{value : 'opt2', name : '옵션2'},\r\n\t\t\t\t\t{value : 'opt3', name : '옵션3'},\r\n\t\t\t\t\t{value : 'opt4', name : '옵션4'},\r\n\t\t\t\t\t{value : 'opt5', name : '옵션5'},\r\n\t\t\t\t\t{value : 'opt6', name : '옵션6'},\r\n\t\t\t\t\t{value : 'opt7', name : '옵션7'},\r\n\t\t\t\t\t{value : 'opt8', name : '옵션8'},\r\n\t\t\t\t],\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tselected : 1,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\toptions : {\r\n\t\t\t\tXAsisKey : 'hour',\r\n\t\t\t\tdataKey : [{key : 'data', stroke: '#8884d8'}]\r\n\t\t\t},\r\n\t\t\tdsSrvDailyInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsSrvDailyInfoTest : DataLib.datalist.getInstance([{USR_CD: \"\", PWD: \"\", CENT_CD: \"\", CONN_IP: \"127.0.0.1\"}])\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\t//this.transaction('COM010000_R01');\r\n\t\tComLib.setStateRecords(this, \"dsSrvDailyInfo\", [\r\n\t\t\t{job: 'test', hour : '00', data : 1},\r\n\t\t\t{job: 'test', hour : '01', data : 2},\r\n\t\t\t{job: 'test', hour : '02', data : 3},\r\n\t\t\t{job: 'test', hour : '03', data : 4},\r\n\t\t\t{job: 'test', hour : '04', data : 5},\r\n\t\t\t{job: 'test', hour : '05', data : 2},\r\n\t\t\t{job: 'test', hour : '06', data : 3},\r\n\t\t\t{job: 'test', hour : '07', data : 1},\r\n\t\t]);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tswitch (id) {\r\n\t\t\tcase 'COM010000_R01' :\r\n\t\t\t\tthis.transaction('COM010000_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'COM010000_R01' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'COM010000_R02' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteFileInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteFileInfo', [{BORD_MNG_NO : this.state.srchFileParam}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'COM010000_R01' : \r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010000_R02' : \r\n\t\t\t\tthis.setState({...this.state, dsNoteFileInfo : res.data.dsNoteFileInfo});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :  break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tgrid : {\r\n\t\t\tonRowClicked  : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'grdNoteInfo' :\r\n\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n\t\t\t\t\t\t\t,   srchFileParam : e.data.BORD_MNG_NO\r\n\t\t\t\t\t\t}, () => this.transaction('COM010000_R02'));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSrvDailyInfo\", [\r\n\t\t\t\t\t{job: 'test', hour : '00', data : 1},\r\n\t\t\t\t\t{job: 'test', hour : '01', data : 2},\r\n\t\t\t\t\t{job: 'test', hour : '02', data : 3},\r\n\t\t\t\t\t{job: 'test', hour : '03', data : 4},\r\n\t\t\t\t\t{job: 'test', hour : '04', data : 5},\r\n\t\t\t\t\t{job: 'test', hour : '05', data : 2},\r\n\t\t\t\t\t{job: 'test', hour : '06', data : 3},\r\n\t\t\t\t\t{job: 'test', hour : '07', data : 1},\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selTest' :\r\n\t\t\t\t\t\tconsole.log('selTest onChange');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, selected : e.target.selectedIndex, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mulSelTest' :\r\n\t\t\t\t\t\tconsole.log('mulSelTest');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, multiSelectboxProps : {...this.state.multiSelectboxProps, dataset : e.dataset}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<span>완료건수</span>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>220건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>배치 : 196</span>\r\n\t\t\t\t\t\t\t<span>재처리 : 0</span>\r\n\t\t\t\t\t\t\t<span>수동처리 : 24</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>성공건수 파일길이 339.8분</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>성공건수 파일크기 312.7MB</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ProgressBar data={97}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>성공건수 213건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ProgressBar data={23.1}\toptions={{type: 'circle', status: 'error'}}/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>실패건수 7</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<span>서버별 금일 작업내역</span>\r\n\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\twidth = {1000}\r\n\t\t\t\t\t\theight = {300}\r\n\t\t\t\t\t\tdata = {this.state.dsSrvDailyInfo.getRecords()}\r\n\t\t\t\t\t\toptions = {this.state.options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>서버 상황</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>서버 선택</span>\r\n\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.id}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.value}\r\n\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.dataset}\r\n\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.width}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.disabled}\r\n\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selected}\r\n\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>DISK 사용률</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ProgressBar data={97}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>CPU 사용률</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ProgressBar data={97}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>Memory 사용률</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","// 평가항목관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsValItemList : DataLib.datalist.getInstance(),\r\n\t\t\tdsValItemStndInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsValContList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가항목\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsValItemList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가항목',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"평가항목\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"신규\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsValContList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"평가내용\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"신규\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsValItemStndInfo}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가기준',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '배점',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,}\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Table  id=\"tblSrchUsrMenuInfo\" colGrp = {[{width: '20%'}, {width: '30%'}, {width: '20%'}, {width: '30%'}]}\r\n\t\t\t\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '평가기준'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield/>, colSpan: 3},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '설명'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield/>, colSpan: 3},\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '사용여부'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox value = {''} dataset = {[]}/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '배점'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield/>},\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"복사\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"신규\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 평가표관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsAllValStndList : DataLib.datalist.getInstance(),\r\n\t\t\tdsValTblStndList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsAllValStndList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '항목',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가기준',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t<Label value=\"평가표명\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"삭제\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\tkeyProp = {'QAM020000_chkUseYn'}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {'신규평가표 생성'}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange = {(e) => {return null;}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsAllValStndList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '항목',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가기준',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 표준스크립트관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsValScrptList : DataLib.datalist.getInstance(),\r\n\t\t\tdsScrptValTblInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가표명\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"버전\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsValScrptList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가표명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가구분',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '스크립트제목',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '스크립트내용',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '배점',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '순번',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsScrptValTblInfo}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가구분',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '순번',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가표\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가구분\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가내용\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"스크립트제목\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"순서\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"스크립트내용(조건1)\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value=\"조건2\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value=\"조건3\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"80px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsScrptValTblInfo}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가항목',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '배점',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"적용일자\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"삭제\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 배정대상조회\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsDeAsgnValTgtList : DataLib.datalist.getInstance(),\r\n\t\t\tdsQaList : DataLib.datalist.getInstance(),\r\n\t\t\tdsAsgValTgtList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\" 조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"500px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsDeAsgnValTgtList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상담원ID',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '통화시작시간',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsQaList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'QA ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'QA명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsAsgValTgtList}\r\n\t\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원ID',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '통화시작시간',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 통화이력관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsCallSpList : DataLib.datalist.getInstance(),\r\n\t\t\tdsValTgtCtrCallSp : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"통화일자\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\" 조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"500px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsCallSpList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상담원ID',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '통화시작시간',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Radio  \r\n\t\t\t\t\t\t\t\t\t\tdataset = {[\r\n\t\t\t\t\t\t\t\t\t\t\t{ key : 'rHtml',         txt : '수동입력'},\r\n\t\t\t\t\t\t\t\t\t\t\t{ key : 'rCss',          txt : '건별자동'},\r\n\t\t\t\t\t\t\t\t\t\t\t{ key : 'rJavascript',   txt : '전건자동'}\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {'key'}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {'txt'}\r\n\t\t\t\t\t\t\t\t\t\tselected = 'rCss'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\" 중복확인\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsValTgtCtrCallSp}\r\n\t\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원ID',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '통화시작시간',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 상담원현황\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table, Label} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsUsrTopLankInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsUsrAvgByTeamInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsUsrList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"상담원명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={100}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"검색기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가표명\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"버전\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"100px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsUsrTopLankInfo}\r\n\t\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '성명',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '점수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"100px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsUsrAvgByTeamInfo}\r\n\t\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '팀명',\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '점수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\theight= \"300px\"\r\n\t\t\t\t\t\t\tdata = {this.state.dsUsrList}\r\n\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '센터명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '팀명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '상담원명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '계약건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '평균건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '통화품질관리',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 콜 평가 현황 조회\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsValCallList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"상담원\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsValCallList}\r\n\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '팀',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '평가건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '평균평점',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '평가상태',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 수동STT요청\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsFileList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<InputFileUpload/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\tdata = {this.state.dsFileList}\r\n\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담내용',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '파일명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t{headerName: '처리자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t{headerName: '작업상태',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","//STT 결과조회\r\nimport React from 'react';\r\n\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsSttResultInfo : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Label value=\"검색기간\"/>\r\n\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsSttResultInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'Call ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '작업상태',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '요청자',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '작업일자',\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea> \r\n\t\t\t\t\t\t\t\t\t<Button value=\"재요청\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"추가\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"추가\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Tabs, TabPanel} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\nimport STT030010 from '../STT030010';\r\nimport STT030020 from '../STT030020';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t\tthis.event.tab.onClick\t\t= this.event.tab.onClick.bind(this);\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\tevent = {\r\n\t\ttab : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tconsole.log('onClick');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"데이터 다운로드\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"파일업로드\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"학습진행\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Tabs tabWidth='100px' onClick = {this.event.tab.onClick}>\r\n\t\t\t\t\t\t\t\t<TabPanel id = {'STT030010'} index={0} label={'복합명사'}>\r\n\t\t\t\t\t\t\t\t\t<STT030010/>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t\t<TabPanel id = {'STT030020'} index={1} label={'문자'}>\r\n\t\t\t\t\t\t\t\t\t<STT030020/>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStudyList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습일자',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '타이틀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습상태',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '적용상태',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"오인식문장관리\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"학습로그\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FullPanel>\r\n\t\t\t\t</FlexPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsMisSenList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Label value=\"검색기간\"/>\r\n\t\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"오인식문장다운로드\"/>\r\n\t\t\t\t\t\t\t\t<Button value=\"오인식단어다운로드\"/>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsMisSenList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '오인식 상담 원문',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '작성문장',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '결과 문장',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습전 정확도',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습후 정확도',\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 키워드관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsKeywordList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"타입\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsKeywordList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '키워드',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '키워드 타입',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '등록자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 코드관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup } from 'components';\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsBigCdList : DataLib.datalist.getInstance(),\r\n\t\t\tdsSmlCdList : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tbtnSearchProps : {\r\n\t\t\t\tid : 'searchBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tbtnBigSaveProps : {\r\n\t\t\t\tid : 'bigSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '저장',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tbtnSmlSaveProps : {\r\n\t\t\t\tid : 'smlSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '저장',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgrdBigCdProps : {\r\n\t\t\t\tid : 'bigCdGrid',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t//{headerName: '순번',  \t\tfield: 'ROWNUM',\tcolId: 'ROWNUM',\teditable: false, req: true},\r\n\t\t\t\t\t{headerName: '대분류코드',\t field: 'BIG_CD',\tcolId: 'BIG_CD', \teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '대분류코드명', field: 'BIG_NM',\tcolId: 'BIG_NM',\t editable: true, req: true},\r\n\t\t\t\t\t{headerName: '사용여부',\t field: 'USE_YN',\tcolId: 'USE_YN',\t editable: true, req: true},\r\n\t\t\t\t],\r\n\t\t\t},\t\t\t\r\n\t\t\tgrdSmlCdProps : {\r\n\t\t\t\tid : 'smlCdGrid',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t//{headerName: '순번',\t\tfield: 'ROWNUM',\tcolId: 'ROWNUM',\teditable: false, req: true},\r\n\t\t\t\t\t{headerName: '소분류코드',\tfield: 'SML_CD',\tcolId: 'SML_CD',\teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '코드명',\t\tfield: 'SML_NM',\tcolId: 'TEAM_CD',\teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_NO',\tcolId: 'SORT_NO',\teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_YN',\tcolId: 'USE_YN',\teditable: true, req: true},\r\n\t\t\t\t],\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SYS010000_R01\")) this.transaction(\"SYS010000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\tconsole.log(\"updated!!\");\r\n\t\tconsole.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SYS010000_R01' :\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS010000_R02' :\r\n\t\t\t\tif (params[1] === undefined || params[1] === \"\") {\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS010000_H01' :\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tconsole.log(transId);\r\n\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'SYS010000_R01' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"SYS.R_getBigCdList\",\r\n\t\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsBigCdRecv\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsUser', [{}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'SYS010000_R02' :\r\n\t\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\t\tsqlmapid:\"SYS.R_getSmlCdList\",\r\n\t\t\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t\t\t\tdatasetrecv:\"dsSmlCdRecv\",\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\ttransManager.addDataset('dsUser', [{\"BIG_CD\": params[1]}]);\r\n\r\n\t\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.log(res.data)\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS010000_R01':\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsBigCdList\", res.data.dsBigCdRecv);\r\n\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010000_R02':\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", res.data.dsSmlCdRecv);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"searchBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_R01\")) this.transaction(\"SYS010000_R01\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"bigSaveBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_H01\")) this.transaction(\"SYS010000_H01\");\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlSaveBtn\" :\r\n\t\t\t\t\t\talert(e.target.id);\r\n\r\n\t\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t//console.log('onRowClicked');\r\n\t\t\t\t//console.log(this.state.dsBigCdList)\t\t\t\t\r\n\t\t\t\tif (e.id === \"bigCdGrid\" && e.data.rowtype ===\"r\" || e.data.rowtype ===\"u\") {\r\n\t\t\t\t\tif (this.validation(\"SYS010000_R02\", e.data.orgdata.BIG_CD)) this.transaction(\"SYS010000_R02\", e.data.orgdata.BIG_CD);\r\n\t\t\t\t\t//console.log(\"SYS010000_R02\");\r\n\t\t\t\t\t//console.log(e.data.BIG_CD);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellFocused: () => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: () => {\r\n\t\t\t\t//console.log('onCellClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: () => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: () => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: () => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: () => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: () => {\r\n\t\t\t\t//console.log('onRowSelected');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"대분류코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid={this.state.grdBigCdProps.id} \r\n\t\t\t\t\t\t\t\t\tref={this.state.grdBigCdProps.id} \r\n\t\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\t\theader = {this.state.grdBigCdProps.header}\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsBigCdList}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.btnBigSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnBigSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnBigSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnBigSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid={this.state.grdSmlCdProps.id} \r\n\t\t\t\t\t\t\t\t\tref={this.state.grdSmlCdProps.id} \r\n\t\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\t\theader = {this.state.grdSmlCdProps.header}\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsSmlCdList}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.btnSmlSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnSmlSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSmlSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnSmlSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 사용자관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsUsrList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"권한\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsUsrList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용자ID',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용자명',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '권한',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자 ID\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"권한\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"활동상태\"/>\r\n\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = 'key'\r\n\t\t\t\t\t\t\t\t\t\tvalue = 'txt'\r\n\t\t\t\t\t\t\t\t\t\tdataset = {\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ key : 'rHtml',\ttxt : '활동'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{ key : 'rCss',\t\ttxt : '미활동'},\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tselected = 'rCss'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {'SYS020000_chkUseYn'}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {(e) => {return null;}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"로그인초기화\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"비밀번호초기화\"/>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"신규\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 메뉴관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsMenuInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴ID\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"화면유형\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsMenuInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메뉴ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메뉴명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상위메뉴ID',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메뉴유형',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '파일경로',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메뉴순서',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 권한관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsAuthInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsPrgmInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsAuthInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용자권한',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '권한레벨',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsPrgmInfo}\r\n\t\t\t\t\t\t\t\trowSelection = 'multiple' suppressRowClickSelection = {true}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '프로그램ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',\theaderCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상위메뉴',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '프로그램명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '화면유형',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 센터 관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsCentList : DataLib.datalist.getInstance(),\r\n\t\t\tdsTeamList : DataLib.datalist.getInstance(),\r\n\t\t\tdsCentStndValList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터코드/센터명\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"200px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsCentList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"200px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsTeamList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀코드',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsCentStndValList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준코드',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준코드명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준값',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '적용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준일',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기타속성',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기타속성2',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 기준값관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStndValInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"적용속성\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기준일속성\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStndValInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '코드',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '코드명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용구분',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '적용여부',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '센터수정가능여부',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준일',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기타속성',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기타속성2',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '정렬순서',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 메시지관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStndValInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메시지코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStndValInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메시지코드',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메시지명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\n// 레이아웃 컴포넌트\r\nimport {    AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\t\t\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree} from 'components';\r\nimport {ScrmRadialBarChart} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component{\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// state 초기화 및 이벤트 바인딩할 때 사용\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsGrp: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", USR_CD: \"\"}]),\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tid : 'btnTest',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : 'TEST Button',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tstring : {\r\n\t\t\t\t\tid : 'iptStringTest',\r\n\t\t\t\t\tname : 'iptStringTest',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : 'String....',\r\n\t\t\t\t\tminLength : 5,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tnumber : {\r\n\t\t\t\t\tid : 'iptNumberTest',\r\n\t\t\t\t\tname : 'iptNumberTest',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : 'Number....',\r\n\t\t\t\t\tminLength : 5,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tradioProps : {\r\n\t\t\t\tid : 'rdoTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'rHtml',         txt : 'HTML'},\r\n\t\t\t\t\t{ key : 'rCss',          txt : 'CSS'},\r\n\t\t\t\t\t{ key : 'rJavascript',   txt : 'Javascript'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tselected : 'rCss'\r\n\t\t\t},\r\n\t\t\tsingleCheckProp : {\r\n\t\t\t\tid : 'singleChkTest',\r\n\t\t\t\tindex : 0,\r\n\t\t\t\tkeyProp : 'scVsCode',\r\n\t\t\t\tvalue : 'VsCode',\r\n\t\t\t\tchecked : 'Y',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tmultiCheckProps : {\r\n\t\t\t\tid : 'multiChkTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'cReact',   txt : 'React',      value : 'Y'} ,\r\n\t\t\t\t\t{ key : 'cVue',     txt : 'Vue',        value : 'N'} ,\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t},\r\n\t\t\tcalendarProps : {\r\n\t\t\t\tid : 'iptCalTest',\r\n\t\t\t\tvalue : '20200831',\r\n\t\t\t\tcloseCalendar : true,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdisableCalendar : false,\r\n\t\t\t\tformat : 'y-MM-dd',\r\n\t\t\t\tisOpen : false,\r\n\t\t\t\tmaxDate : null,\r\n\t\t\t\tminDate : null,\r\n\t\t\t\trequired : false,\r\n\t\t\t\treturnValue : 'start'\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tstId : 'iptRangeCalStrtTest',\r\n\t\t\t\tendId : 'iptRangeCalEndTest',\r\n\t\t\t\tstartDate : '20200801',\r\n\t\t\t\tendDate : '20200831',\r\n\t\t\t},\r\n\t\t\tchartProps : {\r\n\r\n\t\t\t},\r\n\t\t\tpopupProps : {\r\n\t\t\t\talert : {\r\n\t\t\t\t\tid : 'btnTestAlert',\r\n\t\t\t\t\tvalue : 'Alert Test'\r\n\t\t\t\t},\r\n\t\t\t\tconfirm : {\r\n\t\t\t\t\tid : 'btnTestConfirm',\r\n\t\t\t\t\tvalue : 'Confirm Test'\r\n\t\t\t\t},\r\n\t\t\t\tmodal : {\r\n\t\t\t\t\tid : 'btnTestModal',\r\n\t\t\t\t\tvalue : 'Modal Test'\r\n\t\t\t\t},\r\n\t\t\t\tmodaless : {\r\n\t\t\t\t\tid : 'btnTestModaless',\r\n\t\t\t\t\tvalue : 'Modaless Test'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tid : 'selTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{value : 'opt1', name : '옵션1'},\r\n\t\t\t\t\t{value : 'opt2', name : '옵션2'},\r\n\t\t\t\t\t{value : 'opt3', name : '옵션3'},\r\n\t\t\t\t\t{value : 'opt4', name : '옵션4'},\r\n\t\t\t\t\t{value : 'opt5', name : '옵션5'},\r\n\t\t\t\t\t{value : 'opt6', name : '옵션6'},\r\n\t\t\t\t\t{value : 'opt7', name : '옵션7'},\r\n\t\t\t\t\t{value : 'opt8', name : '옵션8'},\r\n\t\t\t\t],\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tselected : 1,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tmultiSelectboxProps : {\r\n\t\t\t\tid : 'mulSelTest',\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'cReact',   txt : 'React',      value : 'Y'},\r\n\t\t\t\t\t{ key : 'cVue',     txt : 'Vue',        value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\tdisplayCount : 5\r\n\t\t\t},\r\n\t\t\ttreeProps : {\r\n\t\t\t\tid : 'tstTree',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdepth : 3,\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{id : 'depth1', parn_id : 'none', value : 'depth1'},\r\n\t\t\t\t\t{id : 'depth1-1', parn_id : 'depth1', value : 'depth1-1'},\r\n\t\t\t\t\t{id : 'depth1-2', parn_id : 'depth1', value : 'depth1-2'},\r\n\t\t\t\t\t{id : 'depth1-3', parn_id : 'depth1', value : 'depth1-3'},\r\n\t\t\t\t\t{id : 'depth1-1-1', parn_id : 'depth1-1', value: 'depth1-1-1'},\r\n\t\t\t\t\t{id : 'depth1-1-2', parn_id : 'depth1-1', value: 'depth1-1-2'},\r\n\t\t\t\t\t{id : 'depth2', parn_id : 'none', value : 'depth2'},\r\n\t\t\t\t\t{id : 'depth2-1', parn_id : 'depth2', value : 'depth2-1'},\r\n\t\t\t\t\t{id : 'depth2-2', parn_id : 'depth2', value : 'depth2-2'},\r\n\t\t\t\t\t{id : 'depth2-3', parn_id : 'depth2', value : 'depth2-3'},\r\n\t\t\t\t\t{id : 'depth2-2-1', parn_id : 'depth2-2', value: 'depth2-2-1'},\r\n\t\t\t\t\t{id : 'depth2-2-2', parn_id : 'depth2-2', value: 'depth2-2-2'},\r\n\t\t\t\t\t{id : 'depth3', parn_id : 'none', value : 'depth3'},\r\n\t\t\t\t\t{id : 'depth3-1', parn_id : 'depth3', value : 'depth3-1'},\r\n\t\t\t\t\t{id : 'depth3-2', parn_id : 'depth3', value : 'depth3-2'},\r\n\t\t\t\t\t{id : 'depth3-2-1', parn_id : 'depth3-2', value: 'depth3-2-1'},\r\n\t\t\t\t\t{id : 'depth3-2-2', parn_id : 'depth3-2', value: 'depth3-2-2'},\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.radio.onChange = this.event.radio.onChange.bind(this);\r\n\t\tthis.event.checkbox.onChange = this.event.checkbox.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\tconsole.log(\"updated!!\");\r\n\t\tconsole.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SAM010000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tconsole.log('transaction');\r\n\t\ttry  {\r\n\t\t\tconsole.log(transId);\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.log('callback');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnTest\" :\r\n\t\t\t\t\t\talert(e.target.id);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnDisabled\" :\r\n\t\t\t\t\t\tthis.setState({...this.state, buttonProps : { ...this.state.buttonProps, disabled : !this.state.buttonProps.disabled }});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnControlInputText\" :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestAlert\" :\r\n\t\t\t\t\t\tComLib.openDialog('A', 'Alert test 입니다.');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestConfirm\" :\r\n\t\t\t\t\t\tComLib.openDialog('C', 'Confirm 테스트입니다.', foo => { if (foo === true) return; });\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestModal\" :\r\n\t\t\t\t\t\tlet option1 = { width: '500px', height: '400px', modaless: false, callback : () => {alert('callback 먼저');} }\r\n\t\t\t\t\t\tComLib.openPop('pwdInit', '비밀번호 초기화', option1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestModaless\" :\r\n\t\t\t\t\t\tlet option2 = { width: '800px', height: '600px',  modaless: true,}\r\n\t\t\t\t\t\tComLib.openPop('pwdInit', '비밀번호 초기화', option2);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptStringTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, string : {...this.state.textFieldProps.string, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptNumberTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, number : {...this.state.textFieldProps.number, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tradio : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'rdoTest' :\r\n\t\t\t\t\t\t//alert(e.value);\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : e.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'singleChkTest' :\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'multiChkTest' :\r\n\t\t\t\t\t\tlet data = this.state.multiCheckProps.dataset;\r\n\t\t\t\t\t\tdata = data.map((item, index) => {\r\n\t\t\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\t\t\tif (e.checked === true) {\r\n\t\t\t\t\t\t\t\t\titem['value'] = 'Y';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\titem['value'] = 'N';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t, multiCheckProps : {\r\n\t\t\t\t\t\t\t\t...this.state.multiCheckProps\r\n\t\t\t\t\t\t\t\t, dataset : data\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, calendarProps : {...this.state.calendarProps, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptRangeCalStrtTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, startDate : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptRangeCalEndTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, endDate : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selTest' :\r\n\t\t\t\t\t\tconsole.log('selTest onChange');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, selected : e.target.selectedIndex, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mulSelTest' :\r\n\t\t\t\t\t\tconsole.log('mulSelTest');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, multiSelectboxProps : {...this.state.multiSelectboxProps, dataset : e.dataset}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbCent':\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsGrp);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbTeam':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbUser':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsGrp);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\t// 화면 그림 리턴\r\n\t\tconsole.log('parent');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Button Component</label>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.buttonProps.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.buttonProps.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.buttonProps.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tid = 'btnDisabled'\r\n\t\t\t\t\t\t\t\tvalue = '버튼 Disabled 하기'\r\n\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>TextFiled Component</label>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}>문자 입력</label>\r\n\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.string.id}\r\n\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.string.name}\r\n\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.string.value}\r\n\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.string.placeholder}\r\n\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.string.minLength}\r\n\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.string.maxLength}\r\n\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.string.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.string.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}>숫자만 입력</label>\r\n\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\ttype = \"onlyNum\"\r\n\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.number.id}\r\n\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.number.name}\r\n\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.number.value}\r\n\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.number.placeholder}\r\n\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.number.minLength}\r\n\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.number.maxLength}\r\n\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.number.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.number.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Radio Component</label>\r\n\t\t\t\t\t\t<Radio  id = {this.state.radioProps.id}\r\n\t\t\t\t\t\t\t\tdataset = {this.state.radioProps.dataset}\r\n\t\t\t\t\t\t\t\tkeyProp = {this.state.radioProps.keyProp}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.radioProps.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.radioProps.disabled}\r\n\t\t\t\t\t\t\t\tdefaultSelected = {2}\r\n\t\t\t\t\t\t\t\tselected = {this.state.radioProps.selected}\r\n\t\t\t\t\t\t\t\tdata = {this.state.radioProps.data}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.radio.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Single Checkbox Component </label>\r\n\t\t\t\t\t\t<Checkbox   id = {this.state.singleCheckProp.id}\r\n\t\t\t\t\t\t\t\t\tkeyProp = {this.state.singleCheckProp.keyProp}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.singleCheckProp.value}\r\n\t\t\t\t\t\t\t\t\tchecked = {this.state.singleCheckProp.checked}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.singleCheckProp.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Mulit Checkbox Component </label>\r\n\t\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\t\t\t\tid = {this.state.multiCheckProps.id}\r\n\t\t\t\t\t\t\t\t\tdataset = {this.state.multiCheckProps.dataset}\r\n\t\t\t\t\t\t\t\t\tkeyProp = {this.state.multiCheckProps.keyProp}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.multiCheckProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.multiCheckProps.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> InputCalendar Component </label>\r\n\t\t\t\t\t\t<InputCalendar\r\n\t\t\t\t\t\t\t\t\tid = {this.state.calendarProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.calendarProps.value}\r\n\t\t\t\t\t\t\t\t\tautoFocus = {this.state.calendarProps.autoFocus}\r\n\t\t\t\t\t\t\t\t\tcloseCalendar = {this.state.calendarProps.closeCalendar}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.calendarProps.disabled}\r\n\t\t\t\t\t\t\t\t\tdisableCalendar = {this.state.calendarProps.disableCalendar}\r\n\t\t\t\t\t\t\t\t\tformat = {this.state.calendarProps.format}\r\n\t\t\t\t\t\t\t\t\tisOpen = {this.state.calendarProps.isOpen}\r\n\t\t\t\t\t\t\t\t\tmaxDate = {this.state.calendarProps.maxDate}\r\n\t\t\t\t\t\t\t\t\tminDate = {this.state.calendarProps.minDate}\r\n\t\t\t\t\t\t\t\t\trequired = {this.state.calendarProps.required}\r\n\t\t\t\t\t\t\t\t\treturnValue = {this.state.calendarProps.returnValue}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\tonCalendarOpen = {this.event.inputcalendar.onCalendarOpen}\r\n\t\t\t\t\t\t\t\t\tonCalendarClose = {this.event.inputcalendar.onCalendarClose}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> RangeInputCalendar Component </label>\r\n\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\tstId = {this.state.rangeCalendarProps.stId}\r\n\t\t\t\t\t\t\tendId = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\tendDate = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ScrmRadialBarChart/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Button Component</label>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.alert.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.alert.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.alert.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.alert.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.confirm.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.confirm.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.confirm.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.confirm.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.modal.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.modal.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.modal.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.modal.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.modaless.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.modaless.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.modaless.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.modaless.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel width=\"20%\">\r\n\t\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Selectbox Component </label>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbCent\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsGrp.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbTeam\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getTeamList(this.state.dsGrp), newScrmObj.constants.select.argument.all)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsGrp.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbUser\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getUserList(this.state.dsGrp), newScrmObj.constants.select.argument.none)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsGrp.records[0][\"USR_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbComm\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('100'), newScrmObj.constants.select.argument.none)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<MulitSelectBox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.multiSelectboxProps.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.multiSelectboxProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {this.state.multiSelectboxProps.keyProp}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.multiSelectboxProps.value}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.multiSelectboxProps.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.multiSelectboxProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tdisplayCount = {this.state.multiSelectboxProps.displayCount}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\tid = {this.state.treeProps.id}\r\n\t\t\t\t\t\t\tdataset = {this.state.treeProps.dataset}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\nimport {Checkbox, Radio, Textfield, InputCalendar, Table, Grid, ComponentPanel, SubFullPanel, FullPanel, Player, RFloatArea} from 'components';\r\nimport {Selectbox} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component{\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tstate = {\r\n\t\tdsUserList: DataLib.datalist.getInstance(),\r\n\t\tplayerProps : {\r\n\t\t\tid  : 'btnPlayerTest',\r\n\t\t\tvalue : 'playerTest',\r\n\t\t},\r\n\t\tgridProps : {\r\n\t\t\tid : 'testGrid',\r\n\t\t\theader: [\r\n\t\t\t\t{headerName: '센터코드',\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\treq: true},\r\n\t\t\t\t{headerName: '팀코드',\t\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\t},\r\n\t\t\t\t{headerName: '사용자코드',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true},\r\n\t\t\t\t{headerName: '사용자명',\t\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t{headerName: '권한레벨',\t\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t{headerName: '영업가능여부',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t{headerName: '사용여부',\t\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\teditable: true},\r\n\t\t\t],\r\n\t\t\tdata : DataLib.datalist.getInstance(\r\n\t\t\t\t[\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t]\r\n\t\t\t),\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount() {\r\n\t\tif (this.validation(\"SAM010000_R01\")) this.transaction(\"SAM010000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SAM010000_R01':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SAM010000_H01':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SAM010000_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserListTEST\",\r\n\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUser', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SAM010000_H01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid:\"COM.H_handleTEST\",\r\n\t\t\t\t\tdatasetsend:\"dsUserList\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUserList', this.state.dsUserList.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SAM010000_R01':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsUserList\", res.data.dsRst);\r\n\t\t\tbreak;\r\n\t\tcase 'SAM010000_H01':\r\n\t\t\tthis.transaction(\"SAM010000_R01\");\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnPlayerTest':\r\n\t\t\t\t\talert('btnPlayerTest');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnAdd':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnDel':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSave':\r\n\t\t\t\t\tif (this.validation(\"SAM010000_H01\")) this.transaction(\"SAM010000_H01\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t//console.log('onRowClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\t//console.log('onCellClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tconsole.log('onCellValueChanged');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\t//ComLib.setStateRecords(this, \"dsUserList\", e.data);\r\n\t\t\t\tconsole.log(this.state.dsUserList);\r\n\t\t\t\t// this.setState({...this.state, dsUserList : {...this.state.dsUserList, records : e.data}});\r\n\t\t\t\t console.log(123);\r\n\t\t\t\tComLib.setStateValue(this, \"dsUserList\", e.index, e.col, e.newValue);\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\t\t\t\t//console.log('onRowSelected');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\t//console.log('onDeleteRow');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tComLib.setStateRecords(this, \"dsUserList\", e.data, e.callback);\r\n//\t\t\t\te.callback();\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\t\t\t\tconsole.log('onInsertRow');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tthis.state.dsUserList.setRecords(e.data);\r\n\t\t\t\tthis.state.dsUserList.setValue(e.index, \"CENT_CD\", \"0000000\");\r\n\t\t\t\tthis.state.dsUserList.setValue(e.index, \"TEAM_CD\", \"0000001\");\r\n\r\n\t\t\t\tComLib.setStateDs(this, \"dsUserList\", e.callback);\r\n\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\tconsole.log('container render');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tid = {this.state.playerProps.id}\r\n\t\t\t\t\t\tvalue = {this.state.playerProps.value}\r\n\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tid={this.state.gridProps.id} ref={this.state.gridProps.id} height= \"600px\"\r\n\t\t\t\t\t\theader = {this.state.gridProps.header}\r\n\t\t\t\t\t\tdata = {this.state.dsUserList}\r\n\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/*<Button id = \"btnAdd\" value = {\"행추가\"} onClick = {this.event.button.onClick}/>\r\n\t\t\t\t\t<Button id = \"btnDel\" value = {\"행삭제\"} onClick = {this.event.button.onClick}/>*/}\r\n\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t<Button id = \"btnSave\" value = {\"저장\"} onClick = {this.event.button.onClick}/>\r\n\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport {Grid, Tabs, TabPanel, ComponentPanel, InputFileUpload} from 'components';\r\n\r\nclass Index extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\t\tthis.state = { \r\n\t\t\tuploadProps : {\r\n\t\t\t\tid : 'testUpload',\r\n\t\t\t\theight : '300px'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel areaName=\"파일업로드\">\r\n\t\t\t\t\t<InputFileUpload id = {this.state.uploadProps.id} height = {this.state.uploadProps.height}/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n }\r\nexport default Index;","import React from 'react';\r\n\r\nimport {BasicButton as Button, SubFullPanel, LFloatArea, RFloatArea, FlexPanel, FullPanel, ComponentPanel} from 'components';\r\nimport {Checkbox, Radio, Textfield, InputCalendar, Table, Grid, RangeInputCalendar, Label } from 'components';\r\nimport {Selectbox, MulitSelectBox, AlertDialog, PopupDialog} from 'components';\r\nimport {ComLib, TransManager} from 'common';\r\n\r\n\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\n\r\n\r\nclass Index extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    state = {\r\n        val1 : 1,\r\n        val2 : 'val2',\r\n        dataList : [],\r\n        dataListTest : [],\r\n        radioValue : '',\r\n        checkValue : [],\r\n        stateDataList : [],\r\n        alert : {\r\n            flag : false,\r\n            message : ''\r\n        },\r\n        popup : {\r\n            flag : false,\r\n        }\r\n    }\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SAM030000_R01' :\r\n                this.transaction('SAM030000_R01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                case 'SAM030000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"COM.R_selectTest\",\r\n                        datasetsend:\"dsTest\",\r\n                        datasetrecv:\"datasetTest\"\r\n                    });\r\n                    transManager.addDataset('dsTest', [{ id : 'test' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (param) => {\r\n        console.log('callback start');\r\n        console.log(param);\r\n        try  {\r\n            switch (param.id) {\r\n                case 'SAM030000_R01' :\r\n                    console.log('SAM030000_R01 callback 성공');\r\n                    console.log(param.data);\r\n\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    onClick = (e) => {\r\n        console.log('onclick');\r\n        switch (e.target.id) {\r\n            case 'btnSearch' :\r\n                console.log('SAM030000_R01 시작');\r\n                this.validation('SAM030000_R01');\r\n                break;\r\n            case 'btnNew' :\r\n                alert(2);\r\n                break;\r\n            case 'btnSave' :\r\n                alert(3);\r\n                break;\r\n            case 'btnDel' :\r\n                alert(4);\r\n                break;\r\n            case 'btnChgState' :\r\n                console.log('값 변경');\r\n                this.setState({...this.state, val1: this.state.val1+1});\r\n                console.log(this.state.val1);\r\n                break;\r\n            case 'btnRestState' :\r\n                console.log('값 리셋');\r\n                this.setState({...this.state, val1: 1});\r\n                console.log(this.state.val1);\r\n                break;\r\n            case 'btnGetValue' :\r\n                console.log('값 확인');\r\n                console.log(this.state.dataList.getRowCount());\r\n                this.setState({ dataList: { ...this.state.dataList,  data : [{ id : 'test'}] } });\r\n                break;\r\n            case 'btnTestAlert' :\r\n                this.setState({...this.state,  alert : { flag: true, message : '팝업 완료'} });\r\n                break;\r\n            case 'btnTestPop' : \r\n                this.setState({...this.state,  popup : { flag: true } });\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        switch (e.target.id) {\r\n            case 'txtTest' :\r\n                this.setState({ ...this.state, val2: e.target.value});\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    onclick = (e) => {\r\n        var checkList = document.getElementById('list1');\r\n        if (checkList.classList.contains('visible'))\r\n             checkList.classList.remove('visible');\r\n         else\r\n             checkList.classList.add('visible');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        const { dataList, val1, val2 } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    {123444}\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n }\r\nexport default Index;","import COM010000 from 'containers/com/COM010000';\r\n\r\nimport QAM010000 from 'containers/qam/QAM010000';\r\nimport QAM020000 from 'containers/qam/QAM020000';\r\nimport QAM030000 from 'containers/qam/QAM030000';\r\nimport QAM040000 from 'containers/qam/QAM040000';\r\nimport QAM050000 from 'containers/qam/QAM050000';\r\n\r\nimport STA010000 from 'containers/sta/STA010000';\r\nimport STA020000 from 'containers/sta/STA020000';\r\n\r\nimport STT010000 from 'containers/stt/STT010000';\r\nimport STT020000 from 'containers/stt/STT020000';\r\nimport STT030000 from 'containers/stt/STT030000';\r\nimport STT040000 from 'containers/stt/STT040000';\r\nimport STT050000 from 'containers/stt/STT050000';\r\n\r\nimport SYS010000 from 'containers/sys/SYS010000';\r\nimport SYS020000 from 'containers/sys/SYS020000';\r\nimport SYS030000 from 'containers/sys/SYS030000';\r\nimport SYS040000 from 'containers/sys/SYS040000';\r\nimport SYS050000 from 'containers/sys/SYS050000';\r\nimport SYS060000 from 'containers/sys/SYS060000';\r\nimport SYS070000 from 'containers/sys/SYS070000';\r\n\r\n\r\nimport SAM000000 from 'containers/sam/SAM000000';\r\nimport SAM010000 from 'containers/sam/SAM010000';\r\nimport SAM020000 from 'containers/sam/SAM020000';\r\nimport SAM030000 from 'containers/sam/SAM030000';\r\n// import SYS010000 from 'containers/sys/SYS010000';\r\n// import SYS020000 from 'containers/sys/SYS020000';\r\n// import SYS030000 from 'containers/sys/SYS030000';\r\n// import SYS040000 from 'containers/sys/SYS040000';\r\n// import SYS050000 from 'containers/sys/SYS050000';\r\n// import SYS060000 from 'containers/sys/SYS060000';\r\n\r\n\r\nexport const appRoute = [\r\n\t{ id: 'BASE',       path: \"/base\",              exact: true,    component: SAM010000 },\r\n\t{ id: 'COM010000',  path: \"/com/COM010000\",     exact: true,    component: COM010000 },\r\n\r\n\t{ id: 'QAM010000',  path: \"/qam/QAM010000\",     exact: true,    component: QAM010000 },\r\n\t{ id: 'QAM020000',  path: \"/qam/QAM020000\",     exact: true,    component: QAM020000 },\r\n\t{ id: 'QAM030000',  path: \"/qam/QAM030000\",     exact: true,    component: QAM030000 },\r\n\t{ id: 'QAM040000',  path: \"/qam/QAM040000\",     exact: true,    component: QAM040000 },\r\n\t{ id: 'QAM050000',  path: \"/qam/QAM050000\",     exact: true,    component: QAM050000 },\r\n\r\n\t{ id: 'STA010000',  path: \"/sta/STA010000\",     exact: true,    component: STA010000 },\r\n\t{ id: 'STA020000',  path: \"/sta/STA020000\",     exact: true,    component: STA020000 },\r\n\r\n\t{ id: 'STT010000',  path: \"/stt/STT010000\",     exact: true,    component: STT010000 },\r\n\t{ id: 'STT020000',  path: \"/stt/STT020000\",     exact: true,    component: STT020000 },\r\n\t{ id: 'STT030000',  path: \"/stt/STT030000\",     exact: true,    component: STT030000 },\r\n\t{ id: 'STT040000',  path: \"/stt/STT040000\",     exact: true,    component: STT040000 },\r\n\t{ id: 'STT050000',  path: \"/stt/STT050000\",     exact: true,    component: STT050000 },\r\n\r\n\t{ id: 'SYS010000',  path: \"/sys/SYS010000\",     exact: true,    component: SYS010000 },\r\n\t{ id: 'SYS020000',  path: \"/sys/SYS020000\",     exact: true,    component: SYS020000 },\r\n\t{ id: 'SYS030000',  path: \"/sys/SYS030000\",     exact: true,    component: SYS030000 },\r\n\t{ id: 'SYS040000',  path: \"/sys/SYS040000\",     exact: true,    component: SYS040000 },\r\n\t{ id: 'SYS050000',  path: \"/sys/SYS050000\",     exact: true,    component: SYS050000 },\r\n\t{ id: 'SYS060000',  path: \"/sys/SYS060000\",     exact: true,    component: SYS060000 },\r\n\t{ id: 'SYS070000',  path: \"/sys/SYS070000\",     exact: true,    component: SYS070000 },\r\n\t\r\n\r\n\t// { id: 'BAT010000',  path: \"/bat/BAT010000\",     exact: true,    component: SAM010000 },\r\n\t// { id: 'BAT010000',  path: \"/bat/BAT010000\",     exact: true,    component: SAM020000 },\r\n\r\n\t{ id: 'SAM000000',  path: \"/sam/SAM010000\",     exact: true,    component: SAM000000 },\r\n\t{ id: 'SAM010000',  path: \"/sam/SAM010000\",     exact: true,    component: SAM010000 },\r\n\t{ id: 'SAM020000',  path: \"/sam/SAM020000\",     exact: true,    component: SAM020000 },\r\n\t{ id: 'SAM030000',  path: \"/sam/SAM030000\",     exact: true,    component: SAM030000 }\r\n];","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {appRoute} from 'routes';\r\nimport {sampleRoute} from 'routes/sampleRoute.js';\r\nimport {TrayPanel, IconButton, RFloatArea, LFloatArea, Tray as TrayMenu, TrayDiv} from 'components';\r\nimport { Route, Switch, Link} from 'react-router-dom';\r\nimport COM010000 from '../../com/COM010000';\r\n\r\nclass Main extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttrayProp : []\r\n\t\t}\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onPrevMove = this.onPrevMove.bind(this);\r\n\t\tthis.onNextMove = this.onNextMove.bind(this);\r\n\t\tthis.onSelect = this.onSelect.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tconsole.log('main > index > onClick');\r\n\t\tthis.selectMenu();\r\n\t}\r\n\tonClose = (e) => {\r\n\t\tconsole.log('main > index > onClose');\r\n\t\tthis.props.closeMenu(e);\r\n\t}\r\n\tonPrevMove  = (e) => {\r\n\t\tconsole.log('main > index > onPrevMove');\r\n\t\tthis.props.prevMenu(e);\r\n\t}\r\n\tonNextMove  = (e) => {\r\n\t\tconsole.log('main > index > onNextMove');\r\n\t\tthis.props.nextMenu(e);\r\n\t}\r\n\tonSelect  = (e) => {\r\n\t\tconsole.log('main > index > onSelectMenu');\r\n\t\tthis.props.selectMenu(e);\r\n\t}\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'btnPrev' :\r\n\t\t\t\t\t\t// 이전 메뉴 이동\r\n\t\t\t\t\t\tthis.props.prevMenu(this.props.selected);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'btnNext' :\r\n\t\t\t\t\t\t// 다음 메뉴 이동\r\n\t\t\t\t\t\tthis.props.nextMenu(this.props.selected);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'btnClose' :\r\n\t\t\t\t\t\tthis.props.closeAllMenu();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<TrayPanel>\r\n\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t<TrayDiv data= {this.props.tray} selected = {this.props.selected} onClick = {this.onClick} onClose = {this.onClose} onSelect={this.onSelect}/>\r\n\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t<div className=\"scrm-tray-btn-div\">\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-prev' id='btnPrev' onClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-next' id='btnNext' onClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-close' id='btnClose' onClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t</TrayPanel>\r\n\t\t\t\t<div style={{ height:'96%', overflow: 'auto'}}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.tray.map(tray => {\r\n\t\t\t\t\t\t\treturn  appRoute.filter(item => item.id === tray.MNU_ID).map((prop, key) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div id={prop.id} style={{display : (this.props.selected.MNU_ID === prop.id) ? 'block' : 'none'}} key={key}>\r\n\t\t\t\t\t\t\t\t\t\t<prop.component/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Main;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\nimport {TrayPanel, IconButton, RFloatArea, LFloatArea} from 'components';\r\nclass Footer extends React.Component{\r\n\trender () {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\treturn (\r\n\t\t\t<TrayPanel>\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div id=\"scrmFooterDiv\" className=\"scrm-footer-div\">\r\n\t\t\t\t\t\t<ul className=\"scrm-footer-pop-ul\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.props.popupList !== undefined) ? this.props.popupList.map((item, index) => { return (\r\n\t\t\t\t\t\t\t\t\t<li className=\"scrm-footer-pop-li\">\r\n\t\t\t\t\t\t\t\t\t\t<div onClick={e => {document.getElementById(item.id).hidden = false; AppModuleAction.selectPop(item)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)})\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t<div className=\"scrm-tray-btn-div\">\r\n\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-close' id='btnPopAllClose'\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tthis.props.popupList.forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.body.removeChild(document.getElementById(element.id));\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tAppModuleAction.delAllPop()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</RFloatArea>\r\n\t\t\t</TrayPanel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(\r\n\t(state) => ({\r\n\t\tpopupList : state.appModule.popupList,\r\n\t}),\r\n\t(dispatch) => ({\r\n\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t})\r\n)(Footer);","import React from 'react';\r\nimport { Menu } from 'components';\r\n\r\nclass Side extends React.Component{\r\n\trender () { \r\n\t\treturn ( \r\n\t\t\t// <Menu data={this.props.menu}/> \r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"side-badge-div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>STT완료건수</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>220 건</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>배치 : 196건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>재처리 : 0건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>수동처리 : 24건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"side-badge-div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>STT성공 건수</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>213 건</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"side-badge-div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>STT실패 건수</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>7 건</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Side;","import React from 'react';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\nimport {IconButton, LFloatArea, RFloatArea, HeaderMenu} from 'components';\r\nimport 'assets/styles/header.css';\r\n\r\nclass Header extends React.Component{\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\t}\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogout':\r\n\t\t\t\t\tif (this.validation(\"HEADER_D01\")) this.transaction(\"HEADER_D01\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnNoti':\r\n\t\t\t\t\tlet notiOption = { width: '700px', height: '800px' }\r\n\t\t\t\t\tComLib.openPop('COM010010', '공지사항조회', 'modal', notiOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnMyinfo':\r\n\t\t\t\t\tlet infoOption = { width: '500px', height: '335px', pop: true }\r\n\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', 'modal', infoOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSetting':\r\n\t\t\t\t\tlet setOption = { width: '500px', height: '600px' }\r\n\t\t\t\t\tComLib.openPop('COM010020', '설정변경', 'modal', setOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'HEADER_D01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'HEADER_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'HEADER_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid:\"COM.D_delLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUser', this.state.dsUser.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'HEADER_D01':\r\n\t\t\t\t//sessionStorage.clear();\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tComLib.setSession(\"logoutComplete\", true);\r\n\t\t\t\twindow.close();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div style = {{display: 'flex'}}>\r\n\t\t\t\t\t\t<div className = 'scrm-header-left-div'/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t<div className=\"scrm-header-btn-div\">\r\n\t\t\t\t\t\t{/*<IconButton classes='scrm-btn-noti'\t\tid='btnNoti'\tonClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-user'\t\tid='btnMyinfo'\tonClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-setting'\tid='btnSetting'\tonClick={this.event.button.onClick}/>*/}\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-logut'\tid='btnLogout'\tonClick={this.event.button.onClick}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</RFloatArea>\r\n\t\t\t\t<HeaderMenu menu={this.props.menu} openMenu = {this.props.openMenu}/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Main from './main';\r\nimport Side from './side';\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport {AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, FooterPanel, HeaderMenu} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\nimport {menuData, loginData} from 'sample';\r\n\r\nclass AppMain extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\tthis.event.window.onbeforeunload = this.event.window.onbeforeunload.bind(this);\r\n\t\t\tthis.event.window.onunload = this.event.window.onunload.bind(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstate = {\r\n\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t\tmenu: ComLib.getSession(\"gdsMenu\").filter(item => item.MNU_KND === '10' || item.MNU_KND === '20'),\r\n\t\t//menu: menuData.filter(item => item.MENU_TYPE === '10' || item.MENU_TYPE === '20'),\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\tAppModuleAction.addTray(ComLib.getInitScreen());\r\n\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\twindow.addEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\t\twindow.addEventListener('unload', this.event.window.onunload);\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\twindow.removeEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\t\twindow.removeEventListener('unload', this.event.window.onunload);\r\n\t\t}\r\n\t}\r\n\tevent = {\r\n\t\twindow: {\r\n\t\t\tonbeforeunload: (e) => {\r\n\t\t\t\tif (!ComLib.getSession(\"logoutComplete\")) e.returnValue = \"로그아웃?\";\r\n\t\t\t},\r\n\t\t\tonunload: (e) => {\r\n\t\t\t\tif (!ComLib.getSession(\"logoutComplete\")) {\r\n\t\t\t\t\tif (this.validation(\"BASE_D01\")) this.transaction(\"BASE_D01\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch(serviceid) {\r\n\t\t\tcase 'BASE_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.setAsync(false);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid:\"COM.D_delLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUsr\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUsr', this.state.dsUser.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch(res.id) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * User Function\r\n\t *******************************************************************/\r\n\r\n\trender () {\r\n\t\tconst {selected, tray, popupList} = this.props;\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\treturn(\r\n\t\t\t<AppPanel>\r\n\t\t\t\t<HeadPanel>\r\n\t\t\t\t\t<Header menu={this.state.menu} openMenu = {AppModuleAction.addTray}/>\r\n\t\t\t\t</HeadPanel>\r\n\t\t\t\t<MiddlePanel>\r\n\t\t\t\t\t{/* <SidePanel>\r\n\t\t\t\t\t\t<Side/>\r\n\t\t\t\t\t</SidePanel> */}\r\n\t\t\t\t\t<MainPanel width=\"100%\">\r\n\t\t\t\t\t\t{/* <Main menu = {ComLib.getMenuList().filter(item => item.MENU_TYPE === '10' || item.MENU_TYPE === '20')}/> */}\r\n\t\t\t\t\t\t<Main\r\n\t\t\t\t\t\t\tmenu = {this.state.menu}\r\n\t\t\t\t\t\t\ttray={tray}\r\n\t\t\t\t\t\t\tselected = {selected}\r\n\t\t\t\t\t\t\topenMenu = {AppModuleAction.addTray}\r\n\t\t\t\t\t\t\tcloseMenu = {AppModuleAction.delTray}\r\n\t\t\t\t\t\t\tprevMenu = {AppModuleAction.prevTray}\r\n\t\t\t\t\t\t\tnextMenu = {AppModuleAction.nextTray}\r\n\t\t\t\t\t\t\tselectMenu = {AppModuleAction.selectTray}\r\n\t\t\t\t\t\t\tcloseAllMenu = {AppModuleAction.delAllTray}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</MainPanel>\r\n\t\t\t\t</MiddlePanel>\r\n\t\t\t\t<FooterPanel>\r\n\t\t\t\t\t<Footer popupList = {popupList}/>\r\n\t\t\t\t</FooterPanel>\r\n\t\t\t</AppPanel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(\r\n\t(state) => ({\r\n\t\tselected : state.appModule.selected,\r\n\t\ttray : state.appModule.tray,\r\n\t\tpopupList : state.appModule.popupList,\r\n\t}),\r\n\t(dispatch) => ({\r\n\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t})\r\n)(AppMain);","import React from 'react';\r\nimport Login from 'containers/base/common/login.js'\r\nimport Main from 'containers/base/main';\r\nimport Side from 'containers/base/side';\r\nimport Footer from 'containers/base/footer';\r\nimport Header from 'containers/base/header';\r\nimport AppMain from 'containers/base';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\n\r\nconst NotFound = () => <h1>404.. This page is not found!</h1>\r\n\r\nclass App extends React.Component{\r\n\tcomponentDidMount(){\r\n\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\r\n\t}\r\n\trender () {\r\n\t\tconst token = sessionStorage.getItem('token');\r\n\t\t//const token = true;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\r\n\t\t\t\t\t{ token ? ( <Provider store={store}><AppMain/></Provider>)\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t\t<Route path={'/'} exact={true} component={Login}/>\r\n\t\t\t\t\t\t\t\t\t<Route path={'/base'} exact={true} component={<Provider store={store}><AppMain/></Provider>}/>\r\n\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'containers/App.js';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route } from 'react-router-dom';\r\n\r\nconst history = createBrowserHistory();\r\n\r\n//ReactDOM.render( <App />,  document.getElementById('root'));\r\nReactDOM.render( <Router history={history}>  <Route path='/'  component= {App} /> </Router>, document.getElementById('root'));","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\nrequire('babel-polyfill');\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\r\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\r\n// We don't polyfill it in the browser--this is user's responsibility.\r\nif (process.env.NODE_ENV === 'test') {\r\n  require('raf').polyfill(global);\r\n}\r\n"],"sourceRoot":""}