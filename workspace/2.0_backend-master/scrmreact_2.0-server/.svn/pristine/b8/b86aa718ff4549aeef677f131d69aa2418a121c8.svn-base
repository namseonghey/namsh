{"version":3,"sources":["components/Button/index.js","components/Charts/index.js","routes/popupRoute.js","containers/base/common/pwdInit.js","containers/base/common/pwdChg.js","containers/com/COM010010/index.js","containers/com/COM010020/index.js","store/modules/appModule.js","components/Dialog/index.js","components/FileUpload/index.js","components/Grid/components/date/index.js","components/Grid/components/checkbox/index.js","components/Grid/components/button/index.js","components/Grid/index.js","components/HtmlEditor/index.js","components/Input/index.js","components/Label/index.js","components/Layout/index.js","components/Menu/index.js","components/Player/index.js","components/Progressbar/index.js","components/SelectBox/index.js","components/Slide/index.js","components/Tab/index.js","containers/qam/QAM020000/index.js","components/Table/index.js","components/Tray/index.js","components/Textarea/index.js","components/Tree/index.js","store/modules/index.js","store/index.js","store/configure.js","common/index.js","containers/base/common/login.js","containers/com/COM010000/index.js","containers/qam/QAM010000/index.js","containers/qam/QAM030000/index.js","containers/qam/QAM040000/index.js","containers/qam/QAM050000/index.js","containers/sta/STA010000/index.js","containers/sta/STA020000/index.js","containers/stt/STT010000/index.js","containers/stt/STT020000/index.js","containers/stt/STT030010/index.js","containers/stt/STT030020/index.js","containers/stt/STT030000/index.js","containers/stt/STT040000/index.js","containers/stt/STT050000/index.js","containers/sys/SYS010000/index.js","containers/sys/SYS020000/index.js","containers/sys/SYS030000/index.js","containers/sys/SYS040000/index.js","containers/sys/SYS050000/index.js","containers/sys/SYS060000/index.js","containers/sys/SYS070000/index.js","containers/sam/SAM000000/index.js","containers/sam/SAM010000/index.js","containers/sam/SAM020000/index.js","containers/sam/SAM030000/index.js","routes/index.js","containers/base/main/index.js","containers/base/footer/index.js","containers/base/side/index.js","containers/base/header/index.js","containers/base/index.js","containers/App.js","index.js","assets/audio/test3.WAV","../config/polyfills.js"],"names":["BasicButton","props","state","disbaled","disabled","id","this","onClick","style","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","visibility","hidden","value","React","Component","defaultProps","IconButton","className","classes","data","ScrmLineBarChart","e","onMouseEnter","onMouseMove","onMouseLeave","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","options","XAsisKey","map","item","key","type","stroke","color","ScrmRadialBarChart","innerRadius","outerRadius","startAngle","endAngle","minAngle","label","fill","position","background","clockWise","iconSize","layout","verticalAlign","align","popRoute","component","validation","StrLib","isNull","param","ComLib","openDialog","name","telNo","transaction","transId","console","log","transManager","TransManager","setTransId","setTransUrl","constants","url","init","setCallBack","callback","addConfig","dao","base","crudh","create","datasetsend","datasetrecv","addDataset","USR_CD","USR_NM","TEL_NO","birth","agent","err","alert","res","dsRecvData","password","onClose","event","button","target","input","onChange","setState","open","bind","placeholder","setStateValue","document","getElementById","popupdivid","remove","serviceid","dsPwdInfo","getValue","length","isAlpha","substr","test","setdata","common","passwd","columnid","read","sqlmapid","getTransRecords","dsChkCurPwdRst","dsChkNewPwdRst","click","DataLib","datalist","getInstance","CUR_PWD","NEW_PWD","CON_PWD","undefined","location","setStateRecords","records","SRCH_YN","BORD_MNG_NO","srchFileParam","dsNoteInfo","dsNoteFileInfo","dsModifyInfo","TITLE","VALD_DT","DateLib","getToday","CONT","CONT_DV","DEL_YN","REG_DT","REG_USR","MFY_ER","MFY_DT","grid","onRowClicked","Object","assign","getRowJSON","index","REG_CENT","REG_DTM","REG_ID","CHG_ID","CHG_DTM","Fragment","ref","header","headerName","field","colId","valueFormatter","getFormatterDate","cellEditor","cellEditorParams","values","setGridComCodeComboCellVal","setGridComCodeComboCellNm","readOnly","toolbarHidden","Slide","addTray","createAction","delTray","delAllTray","selectTray","prevTray","nextTray","addPop","delPop","delAllPop","selectPop","handleActions","popup","payload","popupList","concat","filter","action","menu","tray","indexOf","MNU_ID","selected","parseInt","findIndex","element","AlertDialog","isOpen","containerClassName","defaultPosition","x","y","noBackdrop","clickBackdropToClose","padding","float","alignItems","message","ConfirmDialog","returnVal","onReturnVal","positions","PopupDialog","onMinimize","AppModuleAction","onCallbackFunc","modal","onMouseDown","modaless","positionOffset","overflow","comp","ModalLoading","backdropStyle","connect","appModule","dispatch","bindActionCreators","appModuleActions","InputFileUpload","getUploadParams","handleChangeStatus","status","meta","mete","setProgressPercent","progressEvent","uploadPercent","Math","floor","loaded","total","uploadStatus","handleSubmit","files","allFiles","validate","showProgressbar","formData","FormData","Array","from","forEach","f","append","file","upload","setTimeout","set","JSON","stringify","transdata","gifnoc","ERR_CODE","result","percent","inputContent","inputWithFilesContent","submitButtonContent","onChangeStatus","onSubmit","styles","dropzone","preview","inputLabel","fontColor","DateComponent","date","Date","getStringDate","TimeComponent","time","format","disableClock","maxTime","RangeDateComponent","onStrtDtChange","strtDate","onEndDtChange","endDate","STRT_DT","END_DT","getDateYymmdd","display","RangeTimeComponent","onStrtTmChange","strtTime","onEndTmChange","endTime","STRT_TM","END_TM","replace","getFormatterTime","CheckboxRenderer","checkedHandler","checked","column","node","setDataValue","DelRowButton","context","componentParent","onDeleteRow","Grid","onGridReady","fromEntries","Map","row","gridApi","api","columnApi","keys","addEventListener","onScrollEnd","sizeColumnsToFit","onBodyScroll","isMaxRowFound","onPaginationChanged","onCellValueChanged","oldValue","newValue","rowData","parse","getRecords","newScrmObj","crud","destroy","recid","orgrecords","update","rowIndex","col","colDef","onCellClicked","onCellDoubleClicked","onCellFocused","onRowDoubleClicked","onCellEditingStopped","getRenderedNodes","req","onRowDataChanged","onSelectionChanged","onRowSelected","getSelectedNodes","rtnVal","intA","intB","Number","moveRow","onInsertRow","addRow","onExcelDown","ExcelLib","ExportToExcel","rtnNode","forEachNode","idx","infinite","setInfiniteRowCount","ensureIndexVisible","setSelected","doFilter","setQuickFilter","getSelectedRowIndex","getSelectedRows","getDeSelectedRows","deSelectRows","isSelected","push","editStart","setFocusedCell","startEditingCell","colKey","autoSizeFit","getDatasource","MyDatasource","rowCount","prototype","getRows","params","rowsThisPage","slice","startRow","endRow","lastRow","successCallback","rowSpan","columnDefs","prevProps","prevState","snapshot","paging","noName","areaName","addRowBtn","delRowBtn","dnlExcelBtn","suppressAutoSize","alwaysShowVerticalScroll","components","frameworkComponents","rangeDate","rangeTime","checkbox","selectbox","SelectboxRenderer","headerCheckbox","HeaderCheckboxRender","delButton","suppressMovableColumns","immutableColumns","multiSortKey","headerHeight","rowHeight","defaultColDef","resizable","sortable","sort","editable","autoHeight","floatingFilter","autoGroupColumnDef","rowDragManaged","suppressDragLeaveHidesColumns","suppressRowClickSelection","stopEditingWhenGridLosesFocus","rowNum","valueGetter","datasource","localeText","noRowsToShow","rowSelection","colResizeDefault","rowBuffer","rowModelType","maxBlocksInCache","maxConcurrentDatasourceRequests","suppressScrollOnNewData","pagination","paginationPageSize","paginationAutoPageSize","HtmlEditor","modules","toolbar","size","font","list","indent","clipboard","matchVisual","formats","theme","Checkbox","keyProp","htmlFor","MultiCheckBox","getElementsByName","dataset","i","Radio","setRadio","defaultSelected","selectedOption","Textfield","minLength","maxLength","InputCalendar","onCalendarOpen","onCalendarClose","closeCalendar","disableCalendar","maxDate","minDate","required","returnValue","RangeInputCalendar","stId","startDate","endId","Label","AppPanel","children","HeadPanel","MiddlePanel","MainPanel","ComponentPanel","FooterPanel","FlexPanel","FullPanel","SubFullPanel","LFloatArea","RFloatArea","RelativeGroup","TrayPanel","HeaderMenu","setMenuDivOpen","PARE_MNU_ID","MNU_NM","subMenu","subKey","openMenu","mp3File","testMp3","Player","onBtnPlaying","playing","howler","seek","play","pause","duration","onLoad","load","onPlay","renderSeekPos","onPause","onVolume","volume","parseFloat","onStop","onEnd","onPositionChange","pos","round","onClickListItem","onCopyAllText","onSaveAllText","initialize","callId","CALL_ID","dsRcvCallData","dsRcvSttJobData","sound","Howl","src","onplay","onload","onpause","onend","setWaveForm","getTest","a","fetch","arrayBuffer","setRate","rate","getContext","window","AudioContext","webkitAudioContext","mozAudioContext","oAudioContext","getAudioBuffer","audio","audioBuffer","Promise","resolve","reject","decodeAudioData","buffer","requestAnimationFrame","cancelAnimationFrame","seconds","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","string","getContents","getListItem","TEXT","ele","IDX","POS_START","VALUE","markerStyle","responsive","waveStyle","animate","pointWidth","min","max","step","dateTime","ProgressBar","default","symbol","error","success","Selectbox","prop","getCentList","dsCentComboInfo","comboItem","CENT_CD","CENT_NM","getTeamList","centCd","dsTeamComboInfo","TEAM_CD","TEAM_NM","getUserList","teamCd","dsUsrComboInfo","MulitSelectBox","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","expended","openCheckbox","checkboxes","onCheckAll","text","baseOption","onCheckboxClick","rtnText","checkedList","toString","removeEventListener","displayCount","SlidePreview","process","alt","filepath","SlideContainer","onDownload","reqOptions","method","headers","responseType","axios","resData","URL","createObjectURL","Blob","link","createElement","href","setAttribute","body","appendChild","removeChild","onPreview","mdi","DIALOG","dialog","render","unmountComponentAtNode","ext","doc","xls","ppt","pdf","img","CustomSlide","setSlideInfo","setSlideContent","FILE_NM","onDownloadAll","onSelectPrev","slider","slickPrev","onSelectNext","slickNext","settings","dots","slidesToShow","slidesToScroll","initialSlide","speed","breakpoint","textAlign","c","Tabs","onClickTab","active","Children","toArray","child","tab","tabWidth","Tab","TabPanel","compare1","compare2","value1","value2","Table","setColGroup","colGrp","setBody","setRow","rowArray","colArray","setColumn","colJson","colSpan","head","tbData","footer","TrayDiv","selectMenu","onSelect","removeMenu","stopPropagation","Tree","parentElement","querySelector","classList","toggle","setComboItem","parn_key","parn_id","html","span","ul","li","innerText","onclick","combineReducers","configure","devTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","datetime","POP_UP","PLAYER","LOADING","select","argument","all","none","obj","isJson","setSession","sessionStorage","setItem","getSession","getItem","msg","Dialog","openPop","callbackFunc","arrPopTag","tag","tagName","substring","popDiv","store","then","catch","openPlayer","arrPlayerPop","getCommCodeList","sBigCtgCd","commCodeList","BIG_CD","getCentStndVl","strStndCd","strTargetCol","strRtn","arrStndVl","STND_CD","APY_YN","getInitScreen","rtn","iScrnId","setStateDs","strDatasetId","setRecordsToDs","nRowIndex","strColumnId","strValue","setValueToDs","arrRecords","setStateInitRecords","initRecordsToDs","convComboList","args","arr","getMsgCont","msgcd","strMsg","objMsg","MSG_CD","MSG_CONT","hasOwnProperty","setServerInfos","serverInfos","localStorage","prod","host","hostname","port","dev","title","localbuild","local","objDs","arrTeamList","blnActive","arrUsrList","usr","USE_YN","sValue","getTrim","String","valueOf","getPos","sOrg","sFind","nStart","getPosCase","toLowerCase","getPosReverse","getPosReverseCase","getReplace","sRepFrom","sRepTo","sRet","getReplaceCase","getSexCd","sRrNo","strRno","getNumStr","getLPad","nTotLen","sPad","nPadLen","getRPad","getRight","nSize","getLenB","sVal","len","charCodeAt","getLen3B","getFull2Half","sFull","sHalf","unescape","charAt","getHalf2Full","rTmp","iTmp","fromCharCode","isNum","sNum","point_cnt","ret","search","isAlNum","isKor","arg","str","sResult","setComma","nEnd","ppos","sDigit","getDistinct","aOrg","aDist","vDist","flag","j","excelComponent","base64","Export","ConvertDataStructureToTable","htmltable","excelFile","ctx","worksheet","table","s","m","p","btoa","encodeURIComponent","getLastDateNum","sDate","nMonth","isLeapYear","nY","getLastDate","nLastDate","getAddDate","nOffset","nYear","nDate","objDate","getFullYear","getMonth","getDate","getAddMonth","sYear","sMonth","sDay","nsDate","sToday","getTodayTime","getHours","getMinutes","getSeconds","getDiffDate","sStartDate","sEndDate","NaN","vFromDate","vToDate","getDiffMonth","nStartMon","setValue","setRecords","initRecords","arrOrgRecs","idxA","idxB","orgdata","appendRecords","rowtype","getValueByRecId","setValueByRecId","getRow","lastIndexOf","find","Function","findFirst","findLast","filterexpr","lookup","record","isUpdated","arrCol","_","epytwor","reyolpme","datasets","setAccessToken","setReyolpme","arrUser","contentType","json","setBeforeSend","beforeSend","setError","timeout","setAsync","async","setProgress","progress","makeTransData","config","addSequence","sequence","addIterator","iterator","addSendDataset","addRecvDataset","token","accessToken","replcaceSpChar","doLoading","bVisible","objLoadDiv","loadProgressBar","agentAsync","agentSync","fileupload","retry","errorcode","SUCCESS","UPLOADFAIL","ERR_MESSAGE","erorr","asyncdata","dataType","ERROR","systemid","procedure","handle","batch","dir","datasetmap","noisivid","datatype","script","xml","Login","dsLoginInfo","onKeyDown","keyCode","dsRst","foo","dsUserInfo","dsCommCodeInfo","dsMenuInfo","dsCentStvlInfo","dsCentList","dsTeamList","dsUserList","dsMsgList","dsLogin","PWD","CONN_IP","to","pathname","View","dsJobStatstic","targetObj","selectboxProps","dsSvrInfo","NAME","defaultSelBox","dsSvrResourceInfo","dsSvrJobInfo","dsSvrJobDailyInfo","dsResStatstic","REG_TIME","TOTAL_CNT","first","second","b","job","hour","selectedIndex","multiSelectboxProps","AVG_CPU","AVG_IO","AVG_MEM","AVG_SWAP","DISK","MAX_CPU","MAX_IO","MAX_MEM","MAX_SWAP","SV_NM","SUCC_CNT","FAIL_CNT","FILE_SIZE","FILE_LENGTH","dsJobStatsticDaily","dsSrvDailyInfo","dsSrvDailyInfoTest","itemNm","textFieldProps","iptVlaSearch","itemUse","selVlaSearch","rowType","useIndex","dsVlaItemRecv","iptVlaItem","VLA_ITM_NM","iptVlaItemSort","SORT_ORD","selVlaItemUseYn","refs","grdVlaItem","rowModel","rowsToDisplay","itemCd","dsVlaItemList","VLA_ITM_CD","dsVlaContRecv","iptVlaCont","VLA_CONT_NM","iptVlaContSort","selVlaContUseYn","grdVlaCont","contCd","dsVlaContList","VLA_CONT_CD","dsVlaStndRecv","scoIndex","SCO","iptVlaStndNm","VLA_STND_NM","iptVlaStndExpl","VLA_EXPL","iptVlaStndSort","selVlaStndUseYn","selSco","grdVlaStnd","dsVlaStndList","currRowData","bigCdGrid","smlCdGrid","btnProps","btnVlaSearch","btnVlaItemNew","btnVlaItemSave","btnVlaContNew","btnVlaContSave","btnVlaStndCopy","btnVlaStndNew","btnVlaStndSave","grdProps","rowSpanFnc","CNT","createShowCellRenderer","ShowCellRenderer","ui","innerHTML","getGui","STD_VLA","group","dsAllValStndList","dsSelValStndList","radio","radioProps","singleCheckProp","inputcalendar","stt01RangeCalendarProps","dsGrp","showCellRenderer","buttonSaveProps","buttonModifyProps","leftHeader","headerCheckboxSelection","checkboxSelection","cellRenderer","hide","suppressToolPanel","leftColumnApi","rightHeader","rightColumnApi","dsValScrptList","dsScrptValTblInfo","dsDeAsgnValTgtList","dsQaList","dsAsgValTgtList","dsCallSpList","dsValTgtCtrCallSp","buttonSearchProps","buttonDupleCheckProps","callHistoryList","gridId","gridLabel","gridHeader","callEvaluateCreateCallHistoryList","gridLable","txt","dsUsrTopLankInfo","dsUsrAvgByTeamInfo","dsUsrList","dsValCallList","dsFileList","dsSttResultInfo","dsStudyList","STT030010","STT030020","dsMisSenList","dsInputCalendar","dsKeywordList","calendarProps","rangeCalndarProps","rangeCalendarProps","iptRangeCalStr","iptRangeCalEnd","gridProps","chkCnt","dsBigCdList","dsSmlCdList","iptBigCdNm","dsBigCdRecv","bigCd","dsSmlCdRecv","btnSearchProps","btnBigSaveProps","btnSmlSaveProps","grdBigCdProps","grdSmlCdProps","dsUserDet","usrCd","dsSrch","stndParam","dsPwdData","INIT_PWD","AUTH_LV","ACT_STA_CD","dsPwdStndCd","STND_VL","pwdStndUseYn","btnTransactionControl","dsgetUserCheck","CHK_CNT","clickBtnId","dsSrchTemp","CODE","SRCH_DV","SRCH_VALUE","btnSearch","btnSave","btnAdd","btnInitLogin","btnInitPwd","cmbSrchCent","cmbSrchTeam","cmbSrchAuth","cmbSrchDv","cmbCentCd","cmbTeamCd","cmbAuthCd","textSrchWord","textUsrCd","textUsrNm","start","page","iptMenuId","iptMenuNm","dsSel","dsMenuRecv","menuCdGrid","MNU_KND","btnMenuSearchProps","btnBMenuSaveProps","grdMenuCdProps","dsAuthInfo","dsPrgmInfo","dsCentStndValList","iptCdNm","dsStndValInfo","dsStndCdRecv","stndCdGrid","btnSaveProps","grdStndCdProps","rowspan","buttonProps","option1","number","multiCheckProps","chartProps","popupProps","confirm","treeProps","depth","autoFocus","playerProps","TEST1","TEST2","TEST3","TEST4","TEST5","TEST6","TEST7","TEST8","Index","uploadProps","val1","val2","dataList","dataListTest","radioValue","checkValue","stateDataList","getRowCount","checkList","add","appRoute","path","exact","SAM010000","COM010000","QAM010000","QAM020000","QAM030000","QAM040000","QAM050000","STA010000","STA020000","STT010000","STT020000","STT030000","STT040000","STT050000","SYS010000","SYS020000","SYS030000","SYS040000","SYS050000","SYS060000","SYS070000","SAM000000","SAM020000","Main","closeMenu","onPrevMove","prevMenu","onNextMove","nextMenu","closeAllMenu","trayProp","Footer","Header","pop","dsUser","close","AppMain","onbeforeunload","onunload","App","history","createBrowserHistory","module","exports","require","enable"],"mappings":"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,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC,MAAQ,SAChI,CAAEP,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAQ,QAASC,MAAO,QAASC,MAAQ,QAASC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","file":"public/js/main.78b3ed63.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass BasicButton extends React.Component{\r\n    constructor (props) {\r\n      super(props);\r\n      this.state = { disbaled : this.props.disabled }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tmt: '10px',\r\n\t\tmr: '5px',\r\n\t\tmb: '0px',\r\n\t\tml: '0px',\r\n\t\tdisabled: false,\r\n\t}\r\n    render () {\r\n      return (\r\n          <button id = {this.props.id} onClick = {this.props.onClick} disabled={this.props.disabled}\r\n                  style={{\r\n                    marginTop: this.props.mt,\r\n                    marginRight: this.props.mr,\r\n                    marginBottom: this.props.mb,\r\n                    marginLeft: this.props.ml,\r\n                    visibility : (this.props.hidden) ? 'hidden' :  'visible'\r\n                  }}\r\n          >\r\n            {this.props.value}\r\n          </button>\r\n      );\r\n    }\r\n}\r\nclass IconButton extends React.Component{\r\n  render () {\r\n    return (\r\n      <button className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n    );\r\n  }\r\n}\r\nclass BadgeButton extends React.Component{\r\n  render () {\r\n    return (\r\n      <button className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n    );\r\n  }\r\n}\r\nexport {BasicButton, IconButton, BadgeButton};\r\n","import React from 'react';\r\nimport {\r\n\tRadialBarChart, RadialBar, Legend, Tooltip, \r\n\tLineChart, CartesianGrid, XAxis,YAxis, Line \r\n} from 'recharts';\r\nconst data = [\r\n\t\t{\r\n\t\t\t\"name\": \"18-24\",\r\n\t\t\t\"uv\": 31.47,\r\n\t\t\t\"pv\": 2400,\r\n\t\t\t\"fill\": \"#8884d8\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"25-29\",\r\n\t\t\t\"uv\": 26.69,\r\n\t\t\t\"pv\": 4567,\r\n\t\t\t\"fill\": \"#83a6ed\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"30-34\",\r\n\t\t\t\"uv\": -15.69,\r\n\t\t\t\"pv\": 1398,\r\n\t\t\t\"fill\": \"#8dd1e1\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"35-39\",\r\n\t\t\t\"uv\": 8.22,\r\n\t\t\t\"pv\": 9800,\r\n\t\t\t\"fill\": \"#82ca9d\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"40-49\",\r\n\t\t\t\"uv\": -8.63,\r\n\t\t\t\"pv\": 3908,\r\n\t\t\t\"fill\": \"#a4de6c\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"50+\",\r\n\t\t\t\"uv\": -2.63,\r\n\t\t\t\"pv\": 4800,\r\n\t\t\t\"fill\": \"#d0ed57\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"name\": \"unknow\",\r\n\t\t\t\"uv\": 6.67,\r\n\t\t\t\"pv\": 4800,\r\n\t\t\t\"fill\": \"#ffc658\"\r\n\t\t}\r\n\t]\r\nclass ScrmLineBarChart extends React.Component {\r\n\tonClick = (e) => {\r\n\r\n\t}\r\n\tonMouseEnter = (e) => {\r\n\t\t\r\n\t}\r\n\tonMouseMove = (e) => {\r\n\t\t\r\n\t}\r\n\tonMouseLeave = (e) => {\r\n\t\t\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-line-chart-div\">\r\n\t\t\t\t<LineChart width={this.props.width} height={this.props.height} data={this.props.data} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t<XAxis dataKey={this.props.options.XAsisKey} />\r\n\t\t\t\t\t<YAxis/>\r\n\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t<Legend />\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.options.dataKey.map((item, key) => {\r\n\t\t\t\t\t\t\t\treturn <Line type=\"monotone\" dataKey={item.key} key={key} stroke={item.color} />\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t</LineChart>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nclass ScrmRadialBarChart extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-chart-div\">\r\n\t\t\t\t\t{/* <RadialBar/> */}\r\n\t\t\t\t\t<RadialBarChart \r\n\t\t\t\t\t\twidth={730} \r\n\t\t\t\t\t\theight={250} \r\n\t\t\t\t\t\tinnerRadius=\"10%\" \r\n\t\t\t\t\t\touterRadius=\"80%\" \r\n\t\t\t\t\t\tdata={data} \r\n\t\t\t\t\t\tstartAngle={180} \r\n\t\t\t\t\t\tendAngle={0}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<RadialBar minAngle={15} label={{ fill: '#666', position: 'insideStart' }} background clockWise={true} dataKey='uv' />\r\n\t\t\t\t\t\t<Legend iconSize={10} width={120} height={140} layout='vertical' verticalAlign='middle' align=\"right\" />\r\n\t\t\t\t\t\t<Tooltip />\r\n\t\t\t\t\t</RadialBarChart>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {ScrmRadialBarChart, ScrmLineBarChart};","import PwdInit   from 'containers/base/common/pwdInit.js';\r\nimport pwdChg   from 'containers/base/common/pwdChg.js';\r\nimport COM010010 from 'containers/com/COM010010';\r\nimport COM010020 from 'containers/com/COM010020';\r\n// import SYS030001 from 'containers/sys/SYS030001';\r\n\r\nexport const popRoute = [\r\n    { id: 'pwdInit',  component: PwdInit },\r\n    { id: 'pwdChg',  component: pwdChg },\r\n    { id: 'COM010010',  component: COM010010 },\r\n    { id: 'COM010020',  component: COM010020 },\r\n    // { id: 'SYS030001',  component: SYS030001 },\r\n];","import React from 'react'\r\nimport {ComLib, TransManager, StrLib} from 'common';\r\n\r\nclass PwdInit extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        // state 초기화\r\n        this.state = {\r\n            open : false,\r\n            param : {\r\n                id : '',\r\n                name : '',\r\n                telNo : ''\r\n             }\r\n        }\r\n        // 이벤트 바인딩\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.event.input.onChange = this.event.input.onChange.bind(this)\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            // 로그인 체크\r\n            case 'PWD_INIT_C01' :\r\n                if (StrLib.isNull(this.state.param.id)) {\r\n                    ComLib.openDialog('A', 'ID를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.name)) {\r\n                    ComLib.openDialog('A', '사용자 성명을 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.telNo)) {\r\n                    ComLib.openDialog('A', '전화번호를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 로그인 체크\r\n                case 'PWD_INIT_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.init);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        // sqlmapid:\"COM.C_doInitPwd\",\r\n                        datasetsend:\"dsSendData\",\r\n                        datasetrecv:\"dsRecvData\",\r\n                    });\r\n                    transManager.addDataset('dsSendData', [{ USR_CD : this.state.param.id, USR_NM: this.state.param.name, TEL_NO: this.state.param.birth }]);\r\n                    transManager.agent();\r\n                    break;\r\n\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        console.log('callback start');\r\n        console.log(res);\r\n        try  {\r\n            switch (res.id) {\r\n                case 'PWD_INIT_C01' :\r\n                    console.log(res.data);\r\n                    alert(res.data.dsRecvData.password);\r\n                    this.props.onClose();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnPwdInitConfirm' : \r\n                        if (this.validation('PWD_INIT_C01')) {\r\n                            this.transaction('PWD_INIT_C01');\r\n                        }\r\n                        break;\r\n                    case 'btnPwdInitCancel' :\r\n                        this.props.onClose();\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'txtInitId'    : this.setState({...this.state, param : {...this.state.param, id : e.target.value}}); break;\r\n                    case 'txtInitPwd'   : this.setState({...this.state, param : {...this.state.param, name : e.target.value}}); break;\r\n                    case 'txtInitTelNo' : this.setState({...this.state, param : {...this.state.param, telNo : e.target.value}}); break;\r\n                    default: break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"scrm-pwdinit\">\r\n                <div className=\"scrm-pwd-init-div\">\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>ID</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitId' value={this.state.param.id} placeholder={'사용자 ID를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div> \r\n                    <div className = 'scrm-login-input'>\r\n                        <label>성명</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitPwd' value={this.state.param.name} placeholder={'성명을 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>전화번호</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitTelNo' value={this.state.param.telNo} placeholder={'전화번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-btn-div'>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PwdInit;","import React from 'react';\r\nimport {ComLib, StrLib, TransManager, DataLib} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n//  화면 ID     : pwdChg\r\n//  화면명      : 비밀번호 변경\r\n//  화면 종류   : 팝업\r\n//  작성자      : HW.LEE\r\n//  작성일자    : 2020.07.26\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass PwdChg extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\tdsPwdInfo: DataLib.datalist.getInstance([{USR_CD: '', CUR_PWD: '', NEW_PWD: '', CON_PWD: ''}]),\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this)\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.location !== undefined) {\r\n\t\t\tComLib.setStateRecords(this, \"dsPwdInfo\", this.props.location.state.param);\r\n\t\t\tconsole.log(this.state.dsPwdInfo);\r\n\t\t} else {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tevent = {\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptUsrCd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptCurPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CUR_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptNewPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"NEW_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptConPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CON_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnPwdchgConfirm':\r\n\t\t\t\t\tif (this.validation('PWDCHG_R01')) this.transaction('PWDCHG_R01');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnPwdchgCancel':\r\n\t\t\t\t\t//window.location = '/';\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid).remove();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t * PWDCHG_R01 : 인증 / 신규 비밀번호 체크\r\n\t * PWDCHG_C01 : 신규 비밀번호 등록\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"USR_CD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '아이디를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CUR_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '현재 비밀번호를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '새로운 비밀번호를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"CUR_PWD\") === this.state.dsPwdInfo.getValue(0, \"NEW_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', '현재 비밀번호와 신규 비밀번호가 같습니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").length < 4) {\r\n\t\t\t\tComLib.openDialog('A', '최소 4자리 이상 입력해 주세요');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").length > 10) {\r\n\t\t\t\tComLib.openDialog('A', '최대 10자리 까지 입력해 주세요');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") === this.state.dsPwdInfo.getValue(0, \"USR_CD\")) {\r\n\t\t\t\tComLib.openDialog('A', '사용자 ID와 비밀번호가 동일합니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!StrLib.isAlpha(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").substr(0, 1))) {\r\n\t\t\t\tComLib.openDialog('A', '비밀번호는 영문자로 시작해야 합니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!/[_!@#$%^&*()_+=-]/.test(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '특수문자가 포함되어야 합니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CON_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '신규 비밀번호를 재 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") !== this.state.dsPwdInfo.getValue(0, \"CON_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', '신규 비밀번호와 재입력된 비밀번호가 다릅니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Sen data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkCurUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkCurPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkNewPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkNewPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.C_addUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\tif (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'USR') {\r\n\t\t\t\t\tComLib.openDialog('A', '아이디가 없습니다.');\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'N') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 오류 입니다.');\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'Y') {\r\n\t\t\t\t\tif (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'Y') {\r\n\t\t\t\t\t\tComLib.openDialog('A', '최근 6개월 이내 사용된 비밀번호 입니다.');\r\n\t\t\t\t\t} else if (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'N') {\r\n\t\t\t\t\t\tif (this.validation('PWDCHG_C01')) this.transaction('PWDCHG_C01');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\t//ComLib.openDialog('A', '비밀번호가 변경되었습니다.');\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tdocument.getElementById('_btnClose').click();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className = {(this.props.options) ? 'scrm-login-pop' : 'scrm-login'}>\r\n\t\t\t\t<div className = \"scrm-login-div\">\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'iptUsrCd' value = {this.state.dsPwdInfo.records[0][\"USR_CD\"]} placeholder = {'아이디를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>현재 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptCurPwd' value = {this.state.dsPwdInfo.records[0][\"CUR_PWD\"]} placeholder = {'현재 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>신규 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptNewPwd' value = {this.state.dsPwdInfo.records[0][\"NEW_PWD\"]} placeholder = {'신규 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>비밀번호 확인</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptConPwd' value = {this.state.dsPwdInfo.records[0][\"CON_PWD\"]} placeholder = {'신규 비밀번호를 재입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn'><button id = 'btnPwdchgConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn'><button id = 'btnPwdchgCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PwdChg;","import React from 'react';\r\nimport {SubFullPanel, HtmlEditor, CustomSlide as Slide} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DateLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone] \r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsrchFileParam : '',\r\n\t\t\tdsNoteInfo : [],\r\n\t\t\tdsNoteFileInfo : [],\r\n\t\t\tdsModifyInfo : { BORD_MNG_NO: '', TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', REG_CENT: '', DEL_YN : '', REG_DTM : '', REG_ID : '' , CHG_ID: '', CHG_DTM: ''}\r\n\t\t}\r\n\t\tthis.event.grid.onRowClicked = this.event.grid.onRowClicked.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction('COM010010_R01');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tswitch (id) {\r\n\t\t\tcase 'COM010010_R01' :\r\n\t\t\t\tthis.transaction('COM010010_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'COM010010_R01' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'COM010010_R02' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteFileInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteFileInfo', [{BORD_MNG_NO : this.state.srchFileParam}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'COM010010_R01' : \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tdsNoteInfo : res.data.dsNoteInfo,\r\n\t\t\t\t\t\tdsNoteFileInfo : [],\r\n\t\t\t\t\t\tdsModifyInfo : { TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', DEL_YN : '', REG_DT : '', REG_USR : '' , MFY_ER: '', MFY_DT: ''}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010010_R02' : \r\n\t\t\t\tthis.setState({...this.state, dsNoteFileInfo : res.data.dsNoteFileInfo});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :  break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tgrid : {\r\n\t\t\tonRowClicked  : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'grdNoteInfo' :\r\n\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n\t\t\t\t\t\t\t,   srchFileParam : e.data.BORD_MNG_NO\r\n\t\t\t\t\t\t}, () => this.transaction('COM010010_R02'));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<Grid   id = 'grdNoteInfo' ref='grdNoteInfo' height=\"200px\"\r\n\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t{   headerName : 'No',          field : 'BORD_MNG_NO',  colId : 'BORD_MNG_NO',  width: 80      },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록일자',    field : 'REG_DTM',      colId : 'REG_DTM',      width: 120,\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n\t\t\t\t\t\t\t\t{   headerName : '유효일자',    field : 'VALD_DT',      colId : 'VALD_DT',      width: 120,        \r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n\t\t\t\t\t\t\t\t{   headerName : '제목',        field : 'TITLE',        colId : 'TITLE',        width: 200      },\r\n\t\t\t\t\t\t\t\t{   headerName : '내용구분',    field : 'CONT_DV',      colId : 'CONT_DV',      width: 120,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor', \r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.setGridComCodeComboCellVal('106') },\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '106')            },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록센터',    field : 'CENT_NM',      colId : 'CENT_NM',     width: 120       },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록자',      field : 'REG_ID',       colId : 'REG_ID',      width: 110       }\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tdata = {this.state.dsNoteInfo}\r\n\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<HtmlEditor id=\"iptNoteCont\"  value={this.state.dsModifyInfo.CONT} readOnly={true} toolbarHidden={true} height={320}/>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t{(this.state.dsNoteFileInfo.length !== 0) ? <Slide data={this.state.dsNoteFileInfo} height={150}></Slide> : <span>{'조회된 파일 없습니다.'}</span> }\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, CentListSelectBox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    \r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default View;","import { createAction, handleActions} from 'redux-actions';\r\n\r\nconst ADD_POP = 'base/ADD_POP';\r\nconst DELETE_POP = 'base/DELETE_POP';\r\nconst DELETE_ALL_POP = 'base/DELETE_ALL_POP';\r\nconst SELECT_POP = 'base/SELECT_POP';\r\nconst ADD_TRAY = 'base/ADD_TRAY';\r\nconst DELETE_TRAY = 'base/DELETE_TRAY';\r\nconst DELETE_ALL_TRAY = 'base/DELETE_ALL_TRAY';\r\nconst SELECT_TRAY = 'base/SELECT_TRAY';\r\nconst PREVIOUS_TRAY = 'base/PREVIOUS_TRAY';\r\nconst NEXT_TRAY = 'base/NEXT_TRAY';\r\n\r\nexport const addTray\t= createAction(ADD_TRAY);\r\nexport const delTray\t= createAction(DELETE_TRAY);\r\nexport const delAllTray\t= createAction(DELETE_ALL_TRAY);\r\nexport const selectTray\t= createAction(SELECT_TRAY);\r\nexport const prevTray\t= createAction(PREVIOUS_TRAY);\r\nexport const nextTray\t= createAction(NEXT_TRAY);\r\n\r\nexport const addPop\t\t= createAction(ADD_POP);\r\nexport const delPop\t\t= createAction(DELETE_POP);\r\nexport const delAllPop\t= createAction(DELETE_ALL_POP);\r\nexport const selectPop\t= createAction(SELECT_POP);\r\n\r\nconst initState = {\r\n\tselected : '',\r\n\ttray : [],\r\n\tpopupList : []\r\n}\r\n\r\nexport default handleActions ({\r\n\t[ADD_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.concat(popup) };\r\n\t},\r\n\t[DELETE_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.filter(item => item.id !== popup.id) };\r\n\t},\r\n\t[DELETE_ALL_POP] : (state, action) => {\r\n\t\treturn { ...state , popupList : [] };\r\n\t},\r\n\t[SELECT_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.filter(item => item.id !== popup.id) };\r\n\t},\r\n\t[ADD_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (state.tray.indexOf(state.tray.filter(item => item.MNU_ID === menu.MNU_ID)[0]) < 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray.concat(menu),\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[DELETE_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (parseInt(state.tray.findIndex(element => element === menu)) !== 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray : state.tray.filter(item => item.MNU_ID !== menu.MNU_ID),\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element.MNU_ID === menu.MNU_ID)) - 1]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t},\r\n\t[DELETE_ALL_TRAY] : (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttray : [state.tray[0]],\r\n\t\t\tselected : state.tray[0]\r\n\t\t};\r\n\t},\r\n\t[SELECT_TRAY] : (state, { payload : menu }) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttray: state.tray,\r\n\t\t\tselected : menu\r\n\t\t}\r\n\t},\r\n\t[PREVIOUS_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (parseInt(state.tray.findIndex(element => element === menu)) === 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element === menu)) - 1]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[NEXT_TRAY] : (state, { payload : menu }) => {\r\n\t\tif(parseInt(state.tray.findIndex(element => element === menu)) === state.tray.length-1) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element === menu)) + 1]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}, initState);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {popRoute} from 'routes/popupRoute.js';\r\nimport Draggable from 'react-draggable';\r\nimport DialogBox from 'react-modeless';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\n\r\nclass AlertDialog extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmessage : '',\r\n\t\tonClose : () => {return false;}\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClose = () => { this.props.onClose();};\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tonClose={this.onClose}\r\n\t\t\t\tcontainerClassName={\"scrm-alert-modal\"}\r\n\t\t\t\tdefaultPosition={{x: 0, y: 0}}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t\tclickBackdropToClose={true}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClose}>&#xd7;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<h2>{this.props.message}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ConfirmDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\treturnVal : false\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false ,\r\n\t\tmessage :  '',\r\n\t\tonReturnVal : () =>  { return false; } ,\r\n\t\tonClose: () =>  { return false; }\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonReturnVal : PropTypes.func.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClick = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase 'btnConfirm' :  this.setState({...this.state, returnVal : true}, () => this.onClose()); break;\r\n\t\t\tcase 'btnCancel' : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t\tdefault : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t}\r\n\t}\r\n\tonClose = () => {\r\n\t\tthis.props.onClose();\r\n\t\tthis.props.onReturnVal(this.state.returnVal);\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tdefaultPosition={{x: 0, y: 0}}\r\n\t\t\t\tcontainerClassName={\"scrm-alert-modal\"}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClick.bind(this)}>&#xd7;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<h2>{this.props.message}</h2>\r\n\t\t\t\t\t\t<button id='btnConfirm' style={{positions:'relative', float: 'center', width: '80px', height : '30px', marginRight: '5px'}} onClick ={this.onClick.bind(this)}>예</button>\r\n\t\t\t\t\t\t<button id='btnCancel' style={{positions:'relative', float: 'center', width: '80px', height : '30px', marginLeft: '5px'}} onClick ={this.onClick.bind(this)}>아니오</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass PopupDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false ,\r\n\t\t\tmodal : true\r\n\t\t}\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onMinimize = this.onMinimize.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmodaless : false,\r\n\t\tposition : {x : 0, y: 0}\r\n\t};\r\n\tstatic propTypes = { onClose: PropTypes.func };\r\n\tonClose = (e) => {\r\n\t\tthis.props.onClose(e);\r\n\t}\r\n\tonMinimize = (e) => {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\tAppModuleAction.addPop({id : this.props.popupdivid, name : this.props.name});\r\n\t\tdocument.getElementById(this.props.popupdivid).hidden = true;\r\n\r\n\t}\r\n\tonCallbackFunc = (data) => {this.props.onCallbackFunc(data);}\r\n\trender () {\r\n\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tonMouseDown = {(e) => {}}\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tnoBackdrop={this.props.modaless}\r\n\t\t\t>\r\n\t\t\t\t<Draggable\r\n\t\t\t\t\tonClick = {(e) => {}}\r\n\t\t\t\t\tdefaultPosition = {this.props.position}\r\n\t\t\t\t\tpositionOffset = {{x: '-50%', y: 0}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className = \"scrm-popup-modal-content\" style={{width: this.props.options.width, height: this.props.options.height}}>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-header\">\r\n\t\t\t\t\t\t\t<div style={{float: 'left'}}>\r\n\t\t\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClose}>&#xd7;</button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(this.props.modaless)\r\n\t\t\t\t\t\t\t\t\t? <button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onMinimize}>-</button>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-body\" style={{overflow: 'auto'}}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpopRoute.filter(item => item.id === this.props.url).map((comp, key) => {\r\n\t\t\t\t\t\t\t\t\treturn <comp.component popupdivid={this.props.popupdivid} onCallbackFunc={this.onCallbackFunc} key={'pop_' + comp.id + '_' + key} onClose={this.onClose} options = {this.props.options}/>}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Draggable>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ModalLoading extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tisOpen: false\r\n\t\t}\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen = {this.props.isOpen}\r\n\t\t\t\tdefaultPosition = {{x: 0, y: 0}}\r\n\t\t\t\t//containerClassName = {\"scrm-alert-modal\"}\r\n\t\t\t\tnoBackdrop = {false}\r\n\t\t\t\tbackdropStyle={{background: 'transparent'}}\r\n\t\t\t>\r\n\t\t\t\t{/*<div className={\"scrm-loading\"}/>*/}\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nexport default {\r\n\tAlertDialog, ConfirmDialog, ModalLoading,\r\n\tPopupDialog : connect(\r\n\t\t(state) => ({\r\n\t\t\tpopupList : state.appModule.popupList,\r\n\t\t}),\r\n\t\t(dispatch) => ({\r\n\t\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t\t})\r\n\t)(PopupDialog)\r\n}","import React from 'react';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\n\r\nimport { Progress } from \"react-sweet-progress\";\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\n\r\nimport { TransManager, ComLib } from \"common\";\r\n\r\nclass InputFileUpload extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tid : this.props.id || '',\r\n\t\t\tfiles : null,\r\n\t\t\tuploadPercent: 0,\r\n\t\t\tuploadStatus: \"\",\r\n\t\t\tshowProgressbar: false\r\n\t\t}\r\n\t\tthis.getUploadParams = this.getUploadParams.bind(this);\r\n\t\tthis.handleChangeStatus = this.handleChangeStatus.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.setProgressPercent = this.setProgressPercent.bind(this);\r\n\t\tthis.callback = this.callback.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\theight : 200,\r\n\t\thandleChangeStatus : () => { return;},\r\n\t\thandleSubmit : () => { return;}\r\n\t}\r\n\tgetUploadParams = () => {\r\n\t\treturn { url: 'https://httpbin.org/post' }\r\n\t}\r\n\thandleChangeStatus = ({ meta }, status) => {\r\n\t\tthis.props.handleChangeStatus({ id : this.state.id, data : {status : status, mete: meta}})\r\n\t}\r\n\tsetProgressPercent = (progressEvent) => {\r\n\t\tthis.setState({...this.state, uploadPercent: Math.floor((progressEvent.loaded * 100) / progressEvent.total)});\r\n\t\tif (this.state.uploadPercent === 100) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state, uploadStatus: \"success\",\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleSubmit = (files, allFiles) => {\r\n\t\tif (this.validate(files)) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tshowProgressbar: false,\r\n\t\t\t\tfiles: files\r\n\t\t\t}, () => {\r\n\t\t\t\tlet formData = new FormData();\r\n\t\t\t\tArray.from(this.state.files).forEach((f) => formData.append(\"files\", f.file));\r\n\r\n\t\t\t\tlet transManager = new TransManager();\r\n\t\t\t\ttransManager.setTransId(\"_FILEUPLOAD\");\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.upload);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.setTimeout(1000 * 60 * 10);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.upload,\r\n\t\t\t\t\tdatasetsend:\"fileupload\",\r\n\t\t\t\t});\r\n\t\t\t\tformData.set(\"transdata\", JSON.stringify({transdata: transManager.transdata}));\r\n\t\t\t\ttransManager.addDataset('fileupload', formData);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase \"UPLOAD\":\r\n\t\t\t\tif (res.data.gifnoc.ERR_CODE === 0) {\r\n\t\t\t\t\tthis.setState({...this.state, uploadStatus : \"success\"}\r\n\t\t\t\t\t, () => {\r\n\t\t\t\t\t\tthis.props.handleSubmit({ id : this.state.id, files : this.state.files});\r\n\t\t\t\t\t\tsetTimeout(this.setState({...this.state,  files : null, showProgressbar: false, uploadPercent : 0, uploadStatus : \"\"}), 2000);\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({...this.state, uploadStatus: \"error\"});\r\n\t\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\tcase \"_FILEUPLOAD\":\r\n\t\t\t\tif (res.result == 0) {\r\n\t\t\t\t\talert(\"업로드 완료\");\r\n\t\t\t\t\t// Success -> onUploadComplete\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert(\"업로드 실패\");\r\n\t\t\t\t\t// Upload fail -> onUploadComplete\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\tvalidate = (files) => {\r\n\t\tlet size = 0;\r\n\t\tfiles.forEach((item) => { size += parseInt(item['file']['size']); })\r\n\t\t// if (Math.round(size/(1024*1024)) > 5) {\r\n\t\t// \tComLib.openDialog('A', '업로드할 파일의 총 용랑은 5MB 이하로 제한됩니다.');\r\n\t\t// \treturn false;\r\n\t\t// }\r\n\t\tif (files.length > 100) {\r\n\t\t\tComLib.openDialog('A', '첨부파일의 갯수는 최대 100개로 제한됩니다.');\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\trender () {\r\n\t\t//this.setState({...this.state,  showProgressbar: false, uploadPercent : 0, uploadStatus : \"\"});\r\n\t\treturn  (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{   this.state.showProgressbar\r\n\t\t\t\t\t? <Progress percent={this.state.uploadPercent} status={this.state.uploadStatus}/>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t\t<Dropzone\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tinputContent=\"클릭 또는 파일을 드래그 하세요.\"\r\n\t\t\t\t\tinputWithFilesContent = \"파일추가\"\r\n\t\t\t\t\tsubmitButtonContent = \"업로드\"\r\n\t\t\t\t\tgetUploadParams={this.getUploadParams}\r\n\t\t\t\t\tonChangeStatus={this.handleChangeStatus}\r\n\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\t// maxSizeBytes = {1024 * 1024 * 3}\r\n\t\t\t\t\tstyles={\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdropzone: { height: this.props.height } ,\r\n\t\t\t\t\t\t\tpreview :  { height: '10px', padding: '10px'},\r\n\t\t\t\t\t\t\tinputLabel : { fontColor: 'black'}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass MultiFileUpload extends React.Component {\r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass IconFileUpload extends React.Component {\r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<></>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport {InputFileUpload, MultiFileUpload, IconFileUpload}","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport {StrLib, DateLib} from 'common';\r\n\r\n\r\nclass DateComponent extends React.Component {\r\n    state = { date: new Date() }\r\n    componentDidMount() {\r\n        if (this.props.value === null || this.props.value === undefined) {\r\n\r\n        }\r\n    }\r\n    onChange = date => this.setState({ date })\r\n    getValue () {\r\n        return DateLib.getStringDate(this.state.date);\r\n    }\r\n    isPopup() {return true;}\r\n    render() {\r\n        return ( <DatePicker onChange={this.onChange} value={this.state.date} />);\r\n    }\r\n\r\n}\r\nclass TimeComponent extends React.Component {\r\n    state = { time: '00:00'}\r\n    onChange = time => this.setState({ time })\r\n    getValue () {return this.state.time;}\r\n    isPopup() {return true;}\r\n    render() {\r\n        return ( <TimePicker onChange={this.onChange} value={this.state.time} format=\"HH:m\" disableClock={true} maxTime={'23:59:59'}/> );\r\n    }\r\n}\r\nclass RangeDateComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { strtDate: '', endDate : '' }\r\n    }\r\n    static defaultProps = {\r\n        STRT_DT : '', END_DT : ''\r\n    }\r\n    \r\n    isPopup() {return true;}\r\n    onStrtDtChange = date => this.setState({ ...this.state, strtDate : date });\r\n    onEndDtChange = date => this.setState({ ...this.state, endDate : date });\r\n    getValue () {\r\n        let strtDate = DateLib.getStringDate(this.state.strtDate);\r\n        let endDate = DateLib.getStringDate(this.state.endDate);\r\n\r\n        if (StrLib.isNull(endDate) && StrLib.isNull(strtDate)) {\r\n            this.props.data.STRT_DT = '';\r\n            this.props.data.END_DT = '';\r\n            return '';\r\n        } else {\r\n            if (StrLib.isNull(endDate)) {\r\n                this.props.data.STRT_DT = strtDate;\r\n                return strtDate;\r\n            }\r\n            if (StrLib.isNull(strtDate)) {\r\n                this.props.data.END_DT = endDate;\r\n                return endDate;\r\n            }\r\n            this.props.data.STRT_DT = strtDate;\r\n            this.props.data.END_DT = endDate;\r\n            return strtDate + endDate;\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.setState({strtDate : DateLib.getDateYymmdd(this.props.data.STRT_DT), endDate : DateLib.getDateYymmdd(this.props.data.END_DT)});\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={{display : 'flex'}}>\r\n                <span style={{marginRight : '5px'}}><b> 시작일자 : </b></span>\r\n                <DatePicker onChange={this.onStrtDtChange} value={this.state.strtDate} />\r\n                <span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n                <span style={{marginRight : '5px'}}><b> 종료일자 :  </b></span>\r\n                <DatePicker onChange={this.onEndDtChange} value={this.state.endDate} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass RangeTimeComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { strtTime: '00:00', endTime: '23:59'}\r\n        this.onStrtTmChange = this.onStrtTmChange.bind(this);\r\n        this.onEndTmChange = this.onEndTmChange.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        STRT_TM : '', END_TM : ''\r\n    }\r\n    onStrtTmChange = time => this.setState({ ...this.state, strtTime : time });\r\n    onEndTmChange = time => this.setState({ ...this.state, endTime : time });\r\n    getValue () {\r\n        if (StrLib.isNull(this.state.endTime) && StrLib.isNull(this.state.strtTime)) {\r\n            this.props.data.STRT_TM = '';\r\n            this.props.data.END_TM = '';\r\n            return '';\r\n        } else {\r\n            if (StrLib.isNull(this.state.strtTime)) {\r\n                this.props.data.END_TM = this.state.endTime.replace(':', '');\r\n                return this.state.endTime.replace(':', '');\r\n            }\r\n            if (StrLib.isNull(this.state.endTime)) {\r\n                this.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n                return this.state.strtTime.replace(':', '');\r\n            }\r\n            this.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n            this.props.data.END_TM = this.state.endTime.replace(':', '');\r\n            return this.state.strtTime.replace(':', '') + this.state.endTime.replace(':', '');\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.setState({strtTime : StrLib.getFormatterTime(this.props.data.STRT_TM), endTime : StrLib.getFormatterTime(this.props.data.END_TM)});\r\n    }\r\n    isPopup() {return true;}\r\n    render() {\r\n        return (\r\n            <div style={{display : 'flex'}}>\r\n                <span style={{marginRight : '5px'}}><b> 시작시간 : </b></span>\r\n                <TimePicker onChange={this.onStrtTmChange} value={this.state.strtTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n                <span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n                <span style={{marginRight : '5px'}}><b> 종료시간 :  </b></span>\r\n                <TimePicker onChange={this.onEndTmChange} value={this.state.endTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {DateComponent, TimeComponent, RangeDateComponent, RangeTimeComponent}","import React from 'react';\r\nclass CheckboxRenderer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.checkedHandler = this.checkedHandler.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        value : 'N'\r\n    };\r\n    checkedHandler(event) {\r\n        let value = 'N'\r\n        if (event.target.checked) {\r\n            value = 'Y'\r\n        }\r\n        let colId = this.props.column.colId;\r\n        this.props.node.setDataValue(colId, value);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <input type=\"checkbox\"  onClick={this.checkedHandler} checked={(this.props.value === 'Y') ? true : false} />\r\n        )\r\n    }\r\n}\r\nexport default CheckboxRenderer;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\n \r\nclass DelRowButton extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onClick = (e) => {\r\n        console.log(this.props);\r\n        this.props.context.componentParent.onDeleteRow(this.props);\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Button value='삭제' onClick={this.onClick}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DelRowButton;","import React from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\n\r\nimport {ComLib, newScrmObj, StrLib, ExcelLib} from 'common';\r\n//import DatePicker from \"react-datepicker\";\r\n\r\nimport {CentListSelectBox, LFloatArea, RFloatArea, } from 'components';\r\nimport {DateComponent, TimeComponent, CheckboxRenderer, RangeDateComponent, RangeTimeComponent, DelRowButton} from './components';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport \"flatpickr/dist/themes/dark.css\";\r\n\r\nconst gridConstatnts = {\r\n\tmodel : {\r\n\t\tclientSide : 0,\r\n\t\tinfinite :  1\r\n\t}\r\n}\r\nclass Grid extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tgridApi : {},\r\n\t\t\tcolumnApi : {},\r\n\t\t\tcolumnDefs: [],\r\n\t\t\trowData: [],\r\n\t\t}\r\n\t\tthis.onCellClicked\t\t\t=\t\tthis.onCellClicked.bind(this);\r\n\t\tthis.onCellDoubleClicked\t=\t\tthis.onCellDoubleClicked.bind(this);\r\n\t\tthis.onCellFocused\t\t\t=\t\tthis.onCellFocused.bind(this);\r\n\t\tthis.onRowClicked\t\t\t=\t\tthis.onRowClicked.bind(this);\r\n\t\tthis.onRowSelected\t\t\t=\t\tthis.onRowSelected.bind(this);\r\n\t\tthis.onRowDoubleClicked\t\t=\t\tthis.onRowDoubleClicked.bind(this);\r\n\t\tthis.onCellValueChanged\t\t=\t\tthis.onCellValueChanged.bind(this);\r\n\t\tthis.onGridReady\t\t\t=\t\tthis.onGridReady.bind(this);\r\n\t\tthis.onCellEditingStopped\t=\t\tthis.onCellEditingStopped.bind(this);\r\n\t\tthis.onRowDataChanged\t\t=\t\tthis.onRowDataChanged.bind(this);\r\n\t\tthis.onSelectionChanged\t\t=\t\tthis.onSelectionChanged.bind(this);\r\n\t\tthis.onDeleteRow\t\t\t=\t\tthis.onDeleteRow.bind(this);\r\n\t\tthis.onInsertRow\t\t\t=\t\tthis.onInsertRow.bind(this);\r\n\t\tthis.onPaginationChanged\t=\t\tthis.onPaginationChanged.bind(this);\r\n\t\tthis.onBodyScroll\t\t\t=\t\tthis.onBodyScroll.bind(this);\r\n\t}\r\n\t// checkboxSelection: false,\r\n\tstatic defaultProps = {\r\n\t\tid : null,\r\n\t\tdata : [],\r\n\t\theader : [],\r\n\t\tsuppressMovableColumns : true,\r\n\t\trowDragManaged : false,\r\n\t\tsuppressScrollOnNewData : false,\r\n\t\tsuppressRowClickSelection : false,\r\n\t\tsort : true,\r\n\t\tfilter : false,\r\n\t\tfloatingFilter: false,\r\n\t\trowSelection : 'single',\r\n\t\taddRowBtn : true,\r\n\t\tdelRowBtn : true,\r\n\t\tdnlExcelBtn : false,\r\n\t\tpaging : {\r\n\t\t\tpagination : true,\r\n\t\t\tpaginationPageSize : 100,\r\n\t\t\tpaginationAutoPageSize : false\r\n\t\t},\r\n\t\tonRowClicked : () => {return;},\r\n\t\tonCellFocused : () => {return;},\r\n\t\tonCellClicked : () => {return;},\r\n\t\tonCellDoubleClicked : () => {return;},\r\n\t\tonCellValueChanged : () => {return;},\r\n\t\tonRowDoubleClicked : () => {return;},\r\n\t\tonCellEditingStopped  : () => {return;},\r\n\t\tonSelectionChanged  : () => {return;},\r\n\t\tonRowSelected  : () => {return;},\r\n\t\tonDeleteRow : () => {return;},\r\n\t\tonPaginationChanged : () => {return;},\r\n\t\tonBodyScroll : () => {return;}\r\n\t};\r\n\tcomponentDidMount () { \r\n\t\tconsole.log('grid componentDidMount');\r\n\t\t// this.setState({...this.state, columnDefs : ComLib.setGridHeader(this.props.header), rowData : this.props.data.getRecords()});\r\n\t};\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\t// if (this.props.data.length !== prevProps.data.length) {\r\n\t\tif (this.props.paging) {\r\n\t\t\tif (this.props !== prevProps) {\r\n\t\t\t\tif (this.props.data.length !== prevProps.data.length) {\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// if (this.props.data.length !== prevProps.data.length) {\r\n\t\t// \tlet data = this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)\r\n\t\t// \tif (this.props.paging) {\r\n\t\t// \t\tvar dataSource = {\r\n\t\t// \t\t\trowCount: null,\r\n\t\t// \t\t\tgetRows: function (params) {\r\n\t\t// \t\t\t\tconsole.log(params);\r\n\t\t// \t\t\t\tconsole.log('asking for ' + params.startRow + ' to ' + params.endRow);\r\n\t\t// \t\t\t\tsetTimeout(function () {\r\n\t\t// \t\t\t\t\tvar rowsThisPage = data.slice(params.startRow, params.endRow);\r\n\t\t// \t\t\t\t\tvar lastRow = -1;\r\n\t\t// \t\t\t\t\tif (data.length <= params.endRow) {\r\n\t\t// \t\t\t\t\t\tlastRow = data.length;\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t\tparams.successCallback(rowsThisPage, lastRow);\r\n\t\t// \t\t\t\t}, 500);\r\n\t\t// \t\t\t},\r\n\t\t// \t\t};\r\n\t\t// \t\tthis.state.gridApi.setDatasource(dataSource);\r\n\t\t// \t} \r\n\t\t// }\r\n\r\n\t}\r\n\t/* Event Zone */\r\n\tonGridReady = (event) => {\r\n\t\tconsole.log('onGridReady');\r\n\t\t// const data = this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy);\r\n\t\t// \tconsole.log('data');\r\n\t\t// \tconsole.log(data);\r\n\t\t// \tif (this.props.paging) {\r\n\t\t// \t\tvar dataSource = {\r\n\t\t// \t\t\trowCount: null,\r\n\t\t// \t\t\tgetRows: function (params) {\r\n\t\t// \t\t\t\tconsole.log(params);\r\n\t\t// \t\t\t\tconsole.log('asking for ' + params.startRow + ' to ' + params.endRow);\r\n\t\t// \t\t\t\tsetTimeout(function () {\r\n\t\t// \t\t\t\t\tvar rowsThisPage = data.slice(params.startRow, params.endRow);\r\n\t\t// \t\t\t\t\tvar lastRow = -1;\r\n\t\t// \t\t\t\t\tif (data.length <= params.endRow) {\r\n\t\t// \t\t\t\t\t\tlastRow = data.length;\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t\tparams.successCallback(rowsThisPage, lastRow);\r\n\t\t// \t\t\t\t}, 500);\r\n\t\t// \t\t\t},\r\n\t\t// \t\t};\r\n\t\t// \t\tevent.api.setDatasource(dataSource);\r\n\t\t// \t} \r\n\t\tlet obj = Object.fromEntries(new Map(this.props.header.map((row => { return [row.field, '']; }))));\r\n\t\tthis.setState({\r\n\t\t\t...this.state, gridApi: event.api, columnApi: event.columnApi\r\n\t\t}, () => {\r\n\t\t\tif (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n\t\t\t\tthis.state.gridApi.addEventListener('', this.onScrollEnd);\r\n\t\t\t\tsetTimeout(() => this.state.gridApi.sizeColumnsToFit(), 50);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\tonBodyScroll = (e) => {\r\n\t\tconsole.log('onBodyScroll');\r\n\t\t// console.log(e);\r\n\t\tconsole.log(this.state.gridApi.isMaxRowFound());\r\n\t}\r\n\tonPaginationChanged = (e) => {\r\n\t\tconsole.log('onPaginationPageLoaded');\r\n\t};\r\n\t\r\n\tonCellValueChanged = (e) => {\r\n\t\tif (e.oldValue !== e.newValue) {\r\n\t\t\tlet rowData = JSON.parse(JSON.stringify(this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)));\r\n\t\t\tlet data = JSON.parse(JSON.stringify(e.data));\r\n\t\t\tif (rowData[this.props.data.indexOf('recid', e.data.recid)]['rowtype'] !== newScrmObj.constants.crud.create) {\r\n\t\t\t\tif (e.newValue !== this.props.data.orgrecords[this.props.data.indexOf('recid', e.data.recid)][e.column.colId]) {\r\n\t\t\t\t\tif (data['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tdata['rowtype'] = newScrmObj.constants.crud.update;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (data['rowtype'] === newScrmObj.constants.crud.update) {\r\n\t\t\t\t\t\tdata['rowtype'] = newScrmObj.constants.crud.read;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tObject.assign(rowData[this.props.data.indexOf('recid', e.data.recid)], e.data);\r\n\t\t\tthis.props.onCellValueChanged({ \r\n\t\t\t\t\tid : this.props.id\r\n\t\t\t\t,\tdata : rowData\r\n\t\t\t\t,\tindex : e.node.id\r\n\t\t\t\t,\trow: e.rowIndex\r\n\t\t\t\t,\tcol: e.column.colId\r\n\t\t\t\t,\tnode : e.node\r\n\t\t\t\t,\tcellEditor : e.colDef.cellEditor\r\n\t\t\t\t,\tcellEditorParams : e.colDef.cellEditorParams\r\n\t\t\t\t,\toldValue : e.oldValue\r\n\t\t\t\t,\tnewValue : e.newValue\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tonCellClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }  \r\n\t\tthis.props.onCellClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellDoubleClicked = (e) => {\t\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellFocused = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellFocused({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowDoubleClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellEditingStopped = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.state.gridApi.getRenderedNodes().forEach((element, index) => {\r\n\t\t\tthis.props.header.forEach(item => {\r\n\t\t\t\tif (item.req) {\r\n\t\t\t\t\tif (StrLib.isNull(element.data[item.field])) {\r\n\t\t\t\t\t\tComLib.openDialog('A', index + '행의 ' + item.headerName + '의 데이터를 입력 해주십시오.');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t});\r\n\t\tthis.props.onCellEditingStopped({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowDataChanged = () => { \r\n\t\tif (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n\t\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t\t}\r\n\t};\r\n\tonSelectionChanged = (e) => {\r\n\t};\r\n\tonRowSelected = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowSelected({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t}\r\n\tonDeleteRow = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\t\r\n\t\tif (this.state.gridApi.getSelectedNodes().length === 0) {\r\n\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\t\t} else {\r\n\t\t\tlet rtnVal = JSON.parse(JSON.stringify(this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)));\r\n\r\n\t\t\tfor (let intA = 0; intA < rtnVal.length; intA++) {\r\n\t\t\t\tfor (let intB = 0; intB < this.state.gridApi.getSelectedNodes().length; intB++) {\r\n\t\t\t\t\tif (intA === Number(this.state.gridApi.getSelectedNodes()[intB]['id'])) {\r\n\t\t\t\t\t\tif (rtnVal[intA]['rowtype'] === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\trtnVal[intA]['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trtnVal[intA]['rowtype'] = newScrmObj.constants.crud.destroy;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet index = this.state.gridApi.getSelectedNodes()[this.state.gridApi.getSelectedNodes().length-1]['rowIndex'];\r\n\t\t\tthis.props.onDeleteRow({\r\n\t\t\t\t\tid : this.props.id\r\n\t\t\t\t,\tdata : rtnVal.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove)\r\n\t\t\t\t,\tcallback : () => {\r\n\t\t\t\t\t\tthis.moveRow(index, true)\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tonInsertRow = (e) => {\r\n\t\tconsole.log('onInsertRow');\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\r\n\t\tlet rowData = this.props.data;\r\n\t\tlet index = rowData.addRow();\r\n\t\tthis.props.onInsertRow({ \r\n\t\t\t\tid : this.props.id\r\n\t\t\t,\tdata : JSON.parse(JSON.stringify(rowData.getRecords()))\r\n\t\t\t,\tindex : index\r\n\t\t\t,\tcallback : () => {\r\n\t\t\t\t\tthis.moveRow(index, true)\r\n\t\t\t\t}\r\n\t\t});\r\n\t}\r\n\tonExcelDown = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tconsole.log('onExcelDown');\r\n\t\tExcelLib.ExportToExcel(this.props.header, this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy), true);\r\n\t}\r\n\tonScrollEnd = (e) => {\r\n\t\tconsole.log('onScrollEnd');\r\n\t\tthis.props.onScrollEnd(e);\r\n\t}\r\n\r\n\tmoveRow = (index, selected) => {\r\n\t\tconsole.log('moveRow');\r\n\r\n\t\tlet data, rtnNode;\r\n\t\tthis.state.gridApi.forEachNode((node, idx) => {if (idx === index) data = node;});\r\n\t\t\r\n\t\tif (this.props.infinite) {\r\n\t\t\tthis.state.gridApi.setInfiniteRowCount(index+1, false);\r\n\t\t\tthis.state.gridApi.ensureIndexVisible(index, 'top');\r\n\t\t} else {\r\n\t\t\tif (data === undefined) {\r\n\t\t\t\tif (selected) {\r\n\t\t\t\t\tthis.state.gridApi.forEachNode((node, idx) => {\r\n\t\t\t\t\t\tif (idx === (this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy).length-1)) rtnNode = node;\r\n\t\t\t\t\t});\r\n\t\t\t\t\trtnNode.setSelected(true);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state.gridApi.ensureIndexVisible(rtnNode['rowIndex'], 'top');\r\n\t\t\t} else {\r\n\t\t\t\tif (!this.props.infinite) {\r\n\t\t\t\t\tif (selected) data.setSelected(true);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state.gridApi.ensureIndexVisible(index, 'top');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/* Method Zone */\r\n\tdoFilter = (value) => {\r\n\t\tthis.state.gridApi.setQuickFilter(value);\r\n\t};\r\n\tgetSelectedRowIndex = () => {\r\n\t\tif (this.state.gridApi.getSelectedNodes().length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn Number(this.state.gridApi.getSelectedNodes()[0].id);\r\n\t};\r\n\tgetSelectedRows = () => {\r\n\t\tif (this.state.gridApi.getSelectedRows().length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn this.state.gridApi.getSelectedRows();\r\n\t};\r\n\tgetDeSelectedRows = () => {\r\n\t\tlet deSelectRows = [];\r\n\t\tthis.state.gridApi.forEachNode((node, index) => {  \r\n\t\t\tif (!node.isSelected()) deSelectRows.push(node.data);\r\n\t\t});\r\n\t\treturn deSelectRows;\r\n\t};\r\n\teditStart = (row, col) => {\r\n\t\tthis.state.gridApi.setFocusedCell(row, col);\r\n\t\tthis.state.gridApi.startEditingCell({ rowIndex : row, colKey : col});\r\n\t};\r\n\tautoSizeFit = () => {\r\n\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t};\r\n\tgetDatasource = (data) => {\r\n\t\tconsole.log('getDatasource');\r\n\t\t\r\n\t\tfunction MyDatasource(rowCount) {\r\n\t\t\tthis.rowCount = rowCount;\r\n\t\t}\r\n\t\tMyDatasource.prototype.getRows = function (params) {\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\tvar rowsThisPage = data.slice(params.startRow, params.endRow);\r\n\t\t\t\tvar lastRow = -1;\r\n\t\t\t\tif (data.length <= params.endRow) {\r\n\t\t\t\t\tlastRow = data.length;\r\n\t\t\t\t}\r\n\t\t\t\tparams.successCallback(rowsThisPage, lastRow);\r\n\t\t\t}, 100);\r\n\t\t  };\r\n\t\t  return new MyDatasource(data.length);\r\n\t}\r\n\trowSpan = (params) => {\r\n\t\tconsole.log('rowSpan');\r\n\t\tconsole.log(params);\r\n\t\tconsole.log(params.data[params['column']['colId']]);\r\n\r\n\t\treturn params;\r\n\t\t//params.data[params.column]\r\n\r\n\t\t// let cnt = 0;\r\n\t\t// if (this.props.hedaer.filter(item => item['rowspan'] === true).forEach(ele => {\r\n\t\t// \tif (ele[params['column']['colId']] === params['column']['colId']) {\r\n\t\t// \t\treturn true;\r\n\t\t// \t} else {\r\n\t\t// \t\treturn false;\r\n\t\t// \t}\r\n\t\t// })) {\r\n\t\t// \treturn this.props.data.forEach((item, index) => {\r\n\t\t// \t\tif (item[params['column']['colId']] === this.props.data[index+1][params['column']['colId']]) {\r\n\t\t// \t\t\tcnt++;\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tconsole.log(cnt);\r\n\t\t// \t\t\treturn cnt;\r\n\t\t// \t\t}\r\n\t\t// \t});\r\n\t\t// } else {\r\n\t\t// \tconsole.log(cnt);on\r\n\t\t// \treturn cnt;\r\n\t\t// }\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('grid render');\r\n\t\tconsole.log(this.props.data.getRecords());\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div style={{display : 'block', width:'100%', height : '30px'}}>\r\n\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.props.noName) ?\r\n\t\t\t\t\t\t\t\tnull \r\n\t\t\t\t\t\t\t:\t<div className = \"scrm-component-panel-namearea\">\r\n\t\t\t\t\t\t\t\t\t<span> {(this.props.areaName) ? this.props.areaName : '그리드'} </span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t{(this.props.addRowBtn) ? <button onClick={this.onInsertRow}>&#43;</button> : null}\r\n\t\t\t\t\t\t{(this.props.delRowBtn) ? <button onClick={this.onDeleteRow}>&#45;</button> : null}\r\n\t\t\t\t\t\t{(this.props.dnlExcelBtn) ? <button onClick={this.onExcelDown}>Excel</button> : null}\r\n\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ag-theme-alpine\" style={ {width:'100%', height: this.props.height} }>\r\n\t\t\t\t\t<AgGridReact \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tonGridReady={this.onGridReady}\r\n\t\t\t\t\t\tsuppressAutoSize = {false}\r\n\t\t\t\t\t\talwaysShowVerticalScroll = {false}\r\n\t\t\t\t\t\tcomponents = {{\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tframeworkComponents = {{\r\n\t\t\t\t\t\t\tdate : DateComponent,\r\n\t\t\t\t\t\t\trangeDate : RangeDateComponent,\r\n\t\t\t\t\t\t\trangeTime : RangeTimeComponent,\r\n\t\t\t\t\t\t\ttime : TimeComponent,\r\n\t\t\t\t\t\t\tcheckbox: CheckboxRenderer,\r\n\t\t\t\t\t\t\tselectbox : SelectboxRenderer,\r\n\t\t\t\t\t\t\theaderCheckbox : HeaderCheckboxRender,\r\n\t\t\t\t\t\t\tdelButton : DelRowButton\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tsuppressMovableColumns = {this.props.suppressMovableColumns}\r\n\t\t\t\t\t\tcontext = {{ componentParent : this }}\r\n\t\t\t\t\t\timmutableColumns = {true}\r\n\t\t\t\t\t\tmultiSortKey = {'ctrl'}\r\n\t\t\t\t\t\theaderHeight = {25}\r\n\t\t\t\t\t\trowHeight = {42}\r\n\t\t\t\t\t\tdefaultColDef = {{ \r\n\t\t\t\t\t\t\t\tresizable: true\r\n\t\t\t\t\t\t\t,\tsortable : this.props.sort\r\n\t\t\t\t\t\t\t,\teditable : false\r\n\t\t\t\t\t\t\t,\tautoHeight : true\r\n\t\t\t\t\t\t\t,\tfilter : this.props.filter\r\n\t\t\t\t\t\t\t,\tfloatingFilter: this.props.floatingFilter\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tautoGroupColumnDef = {this.props.autoGroupColumnDef || {}}\r\n\t\t\t\t\t\trowDragManaged = {this.props.rowDragManaged}\r\n\t\t\t\t\t\tsuppressDragLeaveHidesColumns={true}\r\n\t\t\t\t\t\tsuppressRowClickSelection = {this.props.suppressRowClickSelection}\r\n\t\t\t\t\t\tstopEditingWhenGridLosesFocus = {true}\r\n\t\t\t\t\t\t// columnDefs = {this.props.header.map( item => {\r\n\t\t\t\t\t\t// \tif (item['rowspan'])  {\r\n\t\t\t\t\t\t// \t\titem['rowSpan'] = this.rowSpan\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// \treturn item;\r\n\t\t\t\t\t\t// })}\r\n\t\t\t\t\t\tcolumnDefs = {\r\n\t\t\t\t\t\t\t(this.props.rowNum) ? [{headerName: 'No.', width: 65, valueGetter: function(params) { return params.node.rowIndex + 1}}].concat(this.props.header) : this.props.header\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// rowData = { this.props.data.filter(item => item.state !== 'D') }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowData = { this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy) }\r\n\t\t\t\t\t\tdatasource = { this.getDatasource(this.props.data.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)) }\r\n\r\n\t\t\t\t\t\tlocaleText = {{noRowsToShow: '조회된 결과가 존재하지 않습니다.'}}\r\n\t\t\t\t\t\trowSelection= {this.props.rowSelection}\r\n\t\t\t\t\t\tcolResizeDefault= {'shift'}\r\n\r\n\t\t\t\t\t\t//paging option\r\n\t\t\t\t\t\t//pagination = {this.props.paging}\r\n\t\t\t\t\t\t//suppressPaginationPanel={true}\r\n\t\t\t\t\t\t//suppressScrollOnNewData={true}\r\n\t\t\t\t\t\t// infiniteInitialRowCount = {30}\r\n\t\t\t\t\t\t// paginationPageSize = {20}\r\n\t\t\t\t\t\trowBuffer = {0}\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowModelType = {(this.props.infinite) ? 'infinite' : 'clientSide'}\r\n\t\t\t\t\t\tmaxBlocksInCache = {2}\r\n\t\t\t\t\t\tmaxConcurrentDatasourceRequests ={2}\r\n\r\n\t\t\t\t\t\t// event\r\n\t\t\t\t\t\tonRowClicked = {this.onRowClicked}\r\n\t\t\t\t\t\tonCellClicked = {this.onCellClicked}\r\n\t\t\t\t\t\tonCellDoubleClicked = {this.onCellDoubleClicked}\r\n\t\t\t\t\t\tonCellValueChanged = {this.onCellValueChanged}\r\n\t\t\t\t\t\tonCellEditingStopped  = {this.onCellEditingStopped}\r\n\t\t\t\t\t\tonRowDataChanged = {this.onRowDataChanged}\r\n\t\t\t\t\t\tonSelectionChanged = {this.onSelectionChanged}\r\n\t\t\t\t\t\tonRowSelected = {this.onRowSelected}\r\n\t\t\t\t\t\tonBodyScroll = {this.onBodyScroll}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nclass SelectboxRenderer extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<select onChange = {(e) => console.log(1)}>\r\n\t\t\t\t<option value='Y'>사용</option>\r\n\t\t\t\t<option value='N'>사용안함</option>\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n}\r\nclass HeaderCheckboxRender extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.checkedHandler = this.checkedHandler.bind(this);\r\n\t}\r\n\tcheckedHandler(event) {\r\n\t\tlet value = 'N'\r\n\t\tif (event.target.checked) {\r\n\t\t\tvalue = 'Y'\r\n\t\t}\r\n\t\tthis.props.api.forEachNode((node, index) => { node.setDataValue(this.props.column.colId, value); });\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input type=\"checkbox\"  onClick={this.checkedHandler}></input>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Grid;","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'; \r\n\r\nclass HtmlEditor extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n        this.onChange  = this.onChange.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        toolbarHidden : false,\r\n        readOnly : false,\r\n        onChange : () => {return;}\r\n    }\r\n    modules = {\r\n        toolbar : (!this.props.toolbarHidden) ? [\r\n            [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n            [{ size: [\"small\", false, \"large\", \"huge\"] }, { font: [] }, { color: [] }, { background: [] }],\r\n            [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n            [\"clean\"]\r\n        ] : false,\r\n        clipboard: { matchVisual: false }\r\n    };\r\n    formats = [ \"header\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"size\", \"color\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\", \"align\", \"background\", \"code\"];\r\n\r\n    onChange = (e) => { this.props.onChange({ id: this.props.id, value : e}); }\r\n    render (){\r\n        return (\r\n            <React.Fragment>\r\n                <Style>\r\n                    {`\r\n                        .scrm-editor-contnents {\r\n                            width: 100%;\r\n                            box-sizing: border-box;\r\n                        }\r\n                        .scrm-editor-contnents .ql-editor{\r\n                            width:  100%;\r\n                            height: ${this.props.height}px;\r\n                            overflow-y: auto;\r\n                            overflow-x: auto;\r\n                        }\r\n                    `}\r\n                </Style>\r\n                <ReactQuill theme = 'snow'\r\n                            id = {this.props.id}\r\n                            value = {this.props.value}\r\n                            onChange = {this.onChange}\r\n                            modules={this.modules}\r\n                            formats={this.formats}\r\n                            placeholder={'내용을 입력하세요.'}\r\n                            readOnly={this.props.readOnly}\r\n                            className = 'scrm-editor-contnents'\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default HtmlEditor;","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport { DateLib, StrLib } from 'common';\r\n\r\n\r\nclass Checkbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tindex : 0,\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-checkbox-div'>\r\n\t\t\t\t<input  type = \"checkbox\"\r\n\t\t\t\t\t\tid = {'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.keyProp}\r\n\t\t\t\t\t\tname = {this.props.id}\r\n\t\t\t\t\t\tchecked = { this.props.checked === 'Y'}\r\n\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor={'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}> {this.props.value} </label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass MultiCheckBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tthis.props.dataset.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tkey = {'checkbox_' + i}\r\n\t\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\t\tindex = {i}\r\n\t\t\t\t\t\t\tvalue = {item[this.props.value]}\r\n\t\t\t\t\t\t\tkeyProp =  {item[this.props.keyProp]}\r\n\t\t\t\t\t\t\tchecked = {item['value']}\r\n\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nclass Radio extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state  = {\r\n\t\t\tselectedOption : this.props.selected || this.props.dataset[this.props.defaultSelected][this.props.keyProp]\r\n\t\t}\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonChange : () => { return; }\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id: this.props.id, value : e.target.value});\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\tsetRadio = (props) => {\r\n\t\treturn (\r\n\t\t\tprops.dataset.map((item, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={'radio_div_' + i} className ='scrm-input-radio-div'>\r\n\t\t\t\t\t\t<input  key={'radio_'+ i} \r\n\t\t\t\t\t\t\t\tid = {'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tname={props.id}\r\n\t\t\t\t\t\t\t\tvalue={item[props.keyProp]}\r\n\t\t\t\t\t\t\t\tchecked = { \r\n\t\t\t\t\t\t\t\t\t(props.selected === null)\r\n\t\t\t\t\t\t\t\t\t? props.defaultSelected === i\r\n\t\t\t\t\t\t\t\t\t: props.selected === item[props.keyProp]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label  key={'radio_label_' + i}\r\n\t\t\t\t\t\t\t\thtmlFor={'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item[props.value]}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('checkbox child');\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t{ this.setRadio(this.props) }\r\n\t\t\t </div>\r\n\t\t);\r\n\t}\r\n}\r\nclass Textfield extends React.Component {\r\n\trtnVal = (value) => {\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase 'onlyNum' : return value.replace(/[^0-9]/g,\"\");\r\n\t\t\tcase 'onlyKor' : return value.replace(/[a-z0-9]|[ \\]{}()<>?|`~!@#$%^&*-_+=,.;:'\\\\]/g,\"\");\r\n\t\t\tcase 'onlyEng' : return value.replace(/[^a-zA-Z]/g,\"\");\r\n\t\t\tdefault :\r\n\t\t\t\tif (StrLib.isNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t<input  type=\"text\" \r\n\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\t\tvalue = {this.rtnVal(this.props.value)}\r\n\t\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\t\tminLength =  {this.props.minLength}\r\n\t\t\t\t\t\tmaxLength = {this.props.maxLength}\r\n\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}\r\n\t\t\t\t\t\t//onClick = {(e) => this.props.onClick(e)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass TextPasswdfield extends React.Component {\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div'>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\tmaxlength = {this.props.maxlength}\r\n\t\t\t\t\tminlength =  {this.props.minlength}\r\n\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}></input> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass InputCalendar extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n\t\tthis.onCalendarClose = this.onCalendarClose.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcloseCalendar : true,\r\n\t\tdisabled : false,\r\n\t\tdisableCalendar : false,\r\n\t\tformat : 'y-MM-dd',\r\n\t\tisOpen : false,\r\n\t\trequired : false,\r\n\t\treturnValue : 'start'\r\n\t}\r\n\tonChange = (date) =>  {\r\n\t\tthis.props.onChange({target :{ id: this.props.id, value: DateLib.getStringDate(date) }});\r\n\t}\r\n\tonCalendarOpen = () => {\r\n\t\tthis.props.onCalendarOpen({target : {id : this.props.id, value : this.props.value}});\r\n\t}\r\n\tonCalendarClose = () => {\r\n\t\tthis.props.onCalendarOpen({target : {id : this.props.id, value : this.props.value}});\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tclassName=\"scrm-datepicker\"\r\n\t\t\t\t\tvalue={DateLib.getDateYymmdd(this.props.value)}\r\n\t\t\t\t\tcloseCalendar = {this.props.closeCalendar}\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tdisableCalendar = {this.props.disableCalendar}\r\n\t\t\t\t\tformat = {this.props.format}\r\n\t\t\t\t\tisOpen = {this.props.isOpen}\r\n\t\t\t\t\tmaxDate = {this.props.maxDate}\r\n\t\t\t\t\tminDate = {this.props.minDate}\r\n\t\t\t\t\trequired = {this.props.required}\r\n\t\t\t\t\treturnValue = {this.props.returnValue}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tonCalendarOpen = {this.onCalendarOpen}\r\n\t\t\t\t\tonCalendarClose = {this.onCalendarClose}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass RangeInputCalendar extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<DatePicker id={this.props.stId} className=\"scrm-datepicker\"\r\n\t\t\t\t\t\t\tonChange = {  date => this.props.onChange({target :{ id: this.props.stId, value: DateLib.getStringDate(date)}}) }\r\n\t\t\t\t\t\t\tvalue= {DateLib.getDateYymmdd(this.props.startDate)} />\r\n\t\t\t\t<DatePicker id={this.props.endId} className=\"scrm-datepicker\"\r\n\t\t\t\t\t\t\tonChange = {  date => this.props.onChange({target :{ id: this.props.endId, value: DateLib.getStringDate(date)}}) }\r\n\t\t\t\t\t\t\tvalue={DateLib.getDateYymmdd(this.props.endDate)} />\r\n\t\t\t</React.Fragment>\r\n\t\t);  \r\n\t}\r\n}\r\nexport { MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, TextPasswdfield, RangeInputCalendar}","import React from 'react';\r\n\r\nclass Label extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-label-div\">\r\n\t\t\t\t<span>{this.props.value}</span>\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.props.req)\r\n\t\t\t\t\t? <span style={{color : 'red'}}>{'*'}</span>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'assets/styles/component.css';\r\n\r\nclass AppPanel extends React.Component {\r\n\tstatic defaultProps = { width: '100%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-app-panel\"> {this.props.children} </div>); }\r\n}\r\nclass HeadPanel extends React.Component {\r\n\tstatic defaultProps = { width: '100%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-head-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MiddlePanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-middle-panel\"> {this.props.children} </div>); }\r\n}\r\nclass SidePanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-side-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MainPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-main-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass ComponentPanel extends React.Component {\r\n\tstatic defaultProps = { width: '97%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { \r\n\t\treturn (\r\n\t\t\t<div className = \"scrm-component-panel\" style={{width: this.props.width, height: this.props.height}}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t); \r\n\t}\r\n}\r\nclass FooterPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-footer-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FlexPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-flex-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FullPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-full-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass SubFullPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-subfull-panel\" style={{width: this.props.width, height: this.props.height}}> {this.props.children} </div>); }\r\n}\r\nclass LFloatArea extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-lfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RFloatArea extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-rfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RelativeGroup extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-relative-div\" style={{width : this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass TrayPanel extends React.Component {\r\n\tstatic defaultProps = { width: '97%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { \r\n\t\treturn (<div className=\"scrm-tray-panel\"> {this.props.children} </div>); }\r\n}\r\nexport { AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, TrayPanel} ;","import React from 'react';\r\nimport {StrLib} from 'common';\r\nimport { Link } from 'react-router-dom';\r\nclass HeaderMenu extends React.Component {\r\n\tconstructor(props)  {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false\r\n\t\t}\r\n\t}\r\n\tsetMenuDivOpen = () => {\r\n\t\tthis.setState({...this.state, open : !this.state.open});\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"scrm-header-menu-container\">\r\n\t\t\t\t\t<ul className=\"scrm-header-menu-ul\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.menu.filter(item => StrLib.isNull(item.PARE_MNU_ID) ).map((item, key) => {\r\n\t\t\t\t\t\t\t\treturn <li className=\"scrm-header-menu-li\" key={'menu_' + key} onClick={this.setMenuDivOpen}>{item.MNU_NM}</li>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className= {(this.state.open) ? \"scrm-header-menu-active\" : \"scrm-header-menu-nested\"}>\r\n\t\t\t\t\t\t<ul className=\"scrm-header-menu-ul\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.menu.filter(item => StrLib.isNull(item.PARE_MNU_ID)).map((item, key) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"scrm-header-menu-li\" key={'div_menu_' + key} onClick={this.setMenuDivOpen}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"scrm-header-submenu-ul\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.menu.filter(menu => menu.PARE_MNU_ID === item.MNU_ID).map((subMenu, subKey) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <li  className=\"scrm-header-submenu-li\" key={'submenu_' + subKey} id={'subMenu_' + subMenu.MNU_ID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.openMenu(subMenu);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({...this.state, open : false});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t> {subMenu.MNU_NM} </li>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nclass Menu extends React.Component {\r\n\tonClick = () => {\r\n\r\n\t}\r\n\tsetMenuOpen = (e) => {\r\n\t\tif (e.target.nextSibling.style.display === 'none' || e.target.nextSibling.style.display.length === 0) {\r\n\t\t\te.target.nextSibling.style.display = 'block';\r\n\t\t} else {\r\n\t\t\te.target.nextSibling.style.display = 'none';\r\n\t\t};\r\n\t}\r\n\tsetMenuConfig = (data) => {\r\n\t\tlet rtnUpMenu = [];\r\n\t\tdata.map((item) => {\r\n\t\t\tif (item.PARE_MNU_ID === null || item.PARE_MNU_ID === '') {\r\n\t\t\t\titem = {...item, subMenuYn: 'N'};\r\n\t\t\t\trtnUpMenu.push(item);\r\n\t\t\t} else {\r\n\t\t\t\trtnUpMenu.map((arrJson) => {\r\n\t\t\t\t\tif (arrJson.MNU_ID === item.PARE_MNU_ID) {\r\n\t\t\t\t\t\tarrJson.subMenuYn = 'Y';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn arrJson;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn (\r\n\t\t\trtnUpMenu.map((json, i) => {\r\n\t\t\t\tif (json.subMenuYn === 'N') {\r\n\t\t\t\t\tif (json.MNU_ID === 'BASE') {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={'up_menu_li_' + i}>\r\n\t\t\t\t\t\t\t\t <Link style={{ textDecoration: 'none', color: '#000000'}} to= {'/' + json.MNU_ID }>\r\n\t\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div'>{json.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={'up_menu_li_' + i}>\r\n\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div' onClick={this.setMenuOpen}> {json.MNU_NM} </div>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<li key={'up_menu_li_' + i}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div' onClick={this.setMenuOpen}>{json.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div-hide'>\r\n\t\t\t\t\t\t\t\t\t<ul key = {'sub_menu_ul' + i} >\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tdata.map((menu, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (menu.PARE_MNU_ID === json.MNU_ID) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<li key={'sub_mnu_li' + index}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link style={{ textDecoration: 'none', color: '#000000'}} to={menu.PGM_PATH}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='scrm-menu-side-li-div' >{menu.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t);\r\n\t\t\t\t }\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<nav className='scrm-menu-side'>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{ this.setMenuConfig(this.props.data) }\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {Menu, HeaderMenu};","import React from 'react';\nimport testMp3 from  '../../assets/audio/test3.WAV';\nimport Waveform from 'waveform-react';\nimport {ComLib, TransManager, DataLib} from 'common';\nimport {Selectbox, Textfield, LFloatArea, RFloatArea, FullPanel, RelativeGroup, ComponentPanel, FlexPanel, SubFullPanel} from 'components';\nimport { Howl } from 'howler';\n\nconst mp3File = testMp3;\nclass Player extends React.Component {\n\tconstructor (props) {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\thowler : null,\n\t\t\tdsRcvCallData : [],\n\t\t\tdsRcvSttJobData : [],\n\t\t\tsrc : '',\n\t\t\tplaying : false,\n\t\t\tbuffer : null,\n\t\t\tload : false,\n\t\t\tvolume: '0.5',\n\t\t\trate : 1,\n\t\t\tseek : 0,\n\t\t\tduration : 0,\n\t\t}\n\t\tthis.onLoad = this.onLoad.bind(this);\n\t\tthis.onPlay = this.onPlay.bind(this);\n\t\tthis.onPause = this.onPause.bind(this);\n\t\tthis.onVolume = this.onVolume.bind(this);\n\t\tthis.onStop = this.onStop.bind(this);\n\t\tthis.onEnd = this.onEnd.bind(this);\n\t\tthis.setRate = this.setRate.bind(this);\n\t\tthis.onBtnPlaying = this.onBtnPlaying.bind(this);\n\t\tthis.onClickListItem = this.onClickListItem.bind(this);\n\t\tthis.renderSeekPos = this.renderSeekPos.bind(this);\n\t\tthis.onPositionChange = this.onPositionChange.bind(this);\n\t}\n\tstatic defaultProps = {\n\t\ttype : 'D'\n\t}\n\tcomponentDidMount () {\n\t\t// ComLib.openPop();\n\t\tconsole.log('audio componentDidMount');\n\t\tconsole.log(mp3File);\n\t\tconsole.log(typeof mp3File);\n\t\tthis.initialize();\n\t}\n\tcomponentWillUnmount () {\n\t\tcancelAnimationFrame(requestAnimationFrame(this.renderSeekPos));\n\t}\n\t// event zone\n\tonBtnPlaying = (e) => {\n\t\tswitch (e.target.id) {\n\t\t\tcase 'btnPrev' :\n\t\t\t\tif (this.state.playing) {\n\t\t\t\t\tif (this.state.howler.seek() < 10) {\n\t\t\t\t\t\tthis.state.howler.seek(0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.state.howler.seek(this.state.howler.seek() - 10);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'btnPlay' : this.setState({ playing : !this.state.playing }, () => (this.state.playing) ? this.state.howler.play() : this.state.howler.pause()); break;\n\t\t\tcase 'btnAfter' :\n\t\t\t\tif (this.state.playing) {\n\t\t\t\t\tif (this.state.howler.seek()+10 > this.state.duration) {\n\t\t\t\t\t\tthis.state.howler.seek(this.state.duration)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.state.howler.seek(this.state.howler.seek() + 10);\n\t\t\t\t\t}\n\t\t\t\t} \n\t\t\t\tbreak;\n\t\t\tdefault : break;\n\t\t}\n\t\t\n\t}\n\tonLoad = () => {\n\t\tconsole.log('onLoad');\n\t\t//this.setState({load: true, duration : this.state.howler.duration()}, () => {this.initialize();});\n\t\tconsole.log(this.state.howler)\n\t\tthis.setState({load: true, duration : this.state.howler.duration()});\n\t}\n\tonPlay = () => {\n\t\tconsole.log('onplay');\n\t\tthis.setState({playing : true});\n\t\tthis.renderSeekPos();\n\t}\n\tonPause = () => {\n\t\tconsole.log('onPause');\n\t\tthis.setState({playing : false});\n\t}\n\tonVolume = (e) => {\n\t\tthis.setState({ volume: parseFloat(e.target.value) }, () => this.state.howler.volume(this.state.volume));\n\t}\n\tonStop = () => {\n\t\tconsole.log('onStop');\n\t\tthis.setState({ playing : false });\n\t\t//this.renderSeekPos();\n\t}\n\tonEnd = () => {\n\t\tconsole.log('onEnd');\n\t\tthis.setState({ playing: false });\n\t}\n\tonPositionChange = (pos) => {\n\t\tconsole.log('onPositionChange');\n\t\tconsole.log(pos);\n\t\tthis.state.howler.seek(Math.round(pos * this.state.duration));\n\t\tif (!this.state.playing) {\n\t\t\tthis.setState({ playing: true });\n\t\t}\n\t}\n\tonClickListItem = (idx, pos) => {\n\n\t}\n\tonCopyAllText = () => {\n\n\t}\n\tonSaveAllText = () => {\n\n\t}\n\n\n\t// method zone\n\tinitialize = () => {\n\t\tconsole.log('audio initialize');\n\t\tthis.transaction(this.props.callId);\n\t}\n\ttransaction = (callId) => {\n\t\tlet transManager = new TransManager();\n\t\ttransManager.setTransId('PLAYER_R01');\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\n\t\ttransManager.setCallBack(this.callback);\n\t\t// 녹취데이터 가져오기\n\t\ttransManager.addConfig({\n\t\t\tdao: transManager.constants.dao.base,\n\t\t\tcrudh: transManager.constants.crudh.read,\n\t\t\tsqlmapid: (this.props.type === 'D') ? \"COM.R_getJobCallInfo\" : \"COM.R_getSelfCallInfo\",\n\t\t\tdatasetsend:\"dsSrchData\",\n\t\t\tdatasetrecv:\"dsRcvCallData\",\n\t\t});\n\t\t// CallId에 대한 STT Job Data 가져오기\n\t\ttransManager.addConfig({\n\t\t\tdao: transManager.constants.dao.base,\n\t\t\tcrudh: transManager.constants.crudh.read,\n\t\t\tsqlmapid:  \"COM.R_getSttJobData\",\n\t\t\tdatasetsend:\"dsSrchData\",\n\t\t\tdatasetrecv:\"dsRcvSttJobData\",\n\t\t});\n\t\ttransManager.addDataset('dsSrchData', [{ CALL_ID : '20200417142636_O_2227.tx' }]);\n\t\ttransManager.agent();\n\t\ttransManager = null;\n\t}\n\tcallback = (res) => {\n\t\tswitch(res.id) {\n\t\tdefault :\n\t\t\tif (res.data.dsRcvCallData.length === 0) {\n\t\t\t\tComLib.openDialog('A', '콜데이터 없음');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (res.data.dsRcvSttJobData.length === 0) {\n\t\t\t\tComLib.openDialog('A', 'sttData 없음');\n\t\t\t\treturn false;\n\t\n\t\t\t}\n\t\t\tconst sound = new Howl({\n\t\t\t\tsrc : mp3File, // 후에 버퍼 데이터로 교체 \n\t\t\t\tonplay : this.onPlay,\n\t\t\t\tonload : this.onLoad,\n\t\t\t\tonpause: this.onPause,\n\t\t\t\tonend: this.onEnd\n\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\t\thowler : sound\n\t\t\t\t,\tdsRcvCallData : res.data.dsRcvCallData\n\t\t\t\t,\tdsRcvSttJobData : res.data.dsRcvSttJobData\n\t\t\t});\n\t\t\tthis.setWaveForm(mp3File);\n\t\t\tbreak;\n\t\t}\n\t}\n\tgetTest = async() => {\n\t\tconst res = await fetch(mp3File);\n\t\tlet file = res.arrayBuffer();\n\t\tconsole.log(file);\n\t}\n\tsetRate = (e) => {\n\t\tthis.setState({rate : e.target.value}, () => this.state.howler.rate(this.state.rate));\n\t}\n\tgetContext = () => {\n\t\tconsole.log('audio getContext');\n\t\twindow.AudioContext = window.AudioContext || window.webkitAudioContext || window.mozAudioContext || window.oAudioContext;\n\t\tconst context = new AudioContext();\n\t\tconsole.log(context);\n  \t\treturn context;\n\t}\n\tgetAudioBuffer = async(audio, context) => {\n\t\t// fetch api는 사라질 예정\n\t\t// const audioBuffer = audio.arrayBuffer(); or const audioBuffer = audio;\n\t\tconsole.log('getAudioBuffer');\n\t\tconst res = await fetch(audio);\n\t\tconsole.log(typeof res);\n\t\tconsole.log(res);\n\t\tconst audioBuffer = await res.arrayBuffer();\n\t\tconsole.log(typeof audioBuffer);\n\t\tconsole.log(audioBuffer);\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tcontext.decodeAudioData(audioBuffer, buffer => {\n\t\t\t\treturn resolve(buffer);\n\t\t\t});\n\t\t});\n\t}\n\tsetWaveForm = async(audio) => {\n\t\tconsole.log(audio);\n\t\tconst buffer = await this.getAudioBuffer(audio, this.getContext());\n\t\tconsole.log('setWaveForm');\n\t\tconsole.log(buffer)\n\t\t//return buffer;\n\t\tthis.setState({buffer : buffer});\n\t\t// this.setState({buffer : buffer, src: mp3File});\n\t\t// this.state.howler.howler.src = mp3File;\n\t}\n\trenderSeekPos = () => {\n\t\tconsole.log('renderSeekPos');\n\t\tthis.setState({ seek: this.state.howler.seek() });\n\t\tif (this.state.howler.seek() === this.state.duration || !this.state.playing) {\n\t\t\tcancelAnimationFrame(requestAnimationFrame(this.renderSeekPos));\n\t\t} else {\n\t\t\trequestAnimationFrame(this.renderSeekPos);\n\t\t}\n\t}\n\tformat = (seconds) => {\n\t\tconst date = new Date(seconds * 1000)\n\t\tconst hh = date.getUTCHours();\n\t\tconst mm = date.getUTCMinutes();\n\t\tconst ss = this.pad(date.getUTCSeconds());\n\t\tif (hh) {\n\t\t  return `${hh}:${this.pad(mm)}:${ss}`;\n\t\t}\n\t\treturn `${mm}:${ss}`;\n\t}\n\tpad = (string) => {\n\t\treturn ('0' + string).slice(-2);\n\t}\n\tgetContents = (data) => {\n\t\tconsole.log('getContents');\n\t\tconsole.log(data);\n\t\tconsole.log(data.length);\n\t\tif (data.length === 0) return null;\n\n\t\treturn this.getListItem(data[0].TEXT);\n\t}\n\tgetListItem = (item) => {\n\t\tconsole.log('getListItem');\n\t\tconsole.log(item);\n\t\treturn JSON.parse(item).map((ele, index) => {\n\t\t\treturn (\n\t\t\t\t<div className=\"scrm-player-list-item-container\" onClick={this.onClickListItem(ele.IDX, ele.POS_START)}>\n\t\t\t\t\t<div key={index} className={(ele['SPK'] === 'N') ? 'scrm-player-list-item-caller' : 'scrm-player-list-item-client'}>\n\t\t\t\t\t\t<span>{'이미지'}</span>\n\t\t\t\t\t\t<span className='scrm-player-list-item-time'>{ele.POS_START}</span>\n\t\t\t\t\t\t<span className='scrm-player-list-item-content'>{ele.VALUE}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}) ;\n\t}\n\t\n\trender () {\n\t\treturn (\n\t\t\t<FullPanel>\n\t\t\t\t<ComponentPanel>\n\t\t\t\t\t<RelativeGroup>\n\t\t\t\t\t\t<Waveform\n\t\t\t\t\t\t\tbuffer={this.state.buffer}\n\t\t\t\t\t\t\theight = {50}\n\t\t\t\t\t\t\tmarkerStyle={{\n\t\t\t\t\t\t\t\tcolor: 'red',\n\t\t\t\t\t\t\t\twidth: 4\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonPositionChange={this.onPositionChange}\n\t\t\t\t\t\t\t// position = {this.state.seek / this.state.duration * 100}\n\t\t\t\t\t\t\t// position = {(this.state.seek / this.state.duration)}\n\t\t\t\t\t\t\tresponsive={true}\n\t\t\t\t\t\t\t// showPosition={true}\n\t\t\t\t\t\t\twaveStyle={{\n\t\t\t\t\t\t\t\tanimate: true,\n\t\t\t\t\t\t\t\tcolor: '#000',\n\t\t\t\t\t\t\t\tpointWidth: 1\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\twidth = {900}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<input style={{width: '100%', padding: '5px 0px 5px 0px'}} type='range' min={0} max={100} step='any' value = {(this.state.seek / this.state.duration * 100)}/>\n\t\t\t\t\t</RelativeGroup>\n\t\t\t\t\t<SubFullPanel>\n\t\t\t\t\t\t<RelativeGroup>\n\t\t\t\t\t\t\t<LFloatArea>\n\t\t\t\t\t\t\t\t<FlexPanel>\n\t\t\t\t\t\t\t\t\t<button id={'btnPlay'} onClick={this.onBtnPlaying}>{(!this.state.playing) ? '재생' : '정지'}</button>\n\t\t\t\t\t\t\t\t\t<button id={'btnPrev'} onClick={this.onBtnPlaying}>10초이전</button>\n\t\t\t\t\t\t\t\t\t<button id={'btnAfter'} onClick={this.onBtnPlaying}>10초이후</button>\n\t\t\t\t\t\t\t\t\t<input type='range' min='0' max='1' step='.05' value={this.state.volume} onChange={this.onVolume} style={{ verticalAlign: 'bottom' }}/>\n\t\t\t\t\t\t\t\t\t<Selectbox\n\t\t\t\t\t\t\t\t\t\tid = {'sel'}\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.rate}\n\t\t\t\t\t\t\t\t\t\tdataset = {[\n\t\t\t\t\t\t\t\t\t\t\t{value : 0.5, name : 'x0.5'},\n\t\t\t\t\t\t\t\t\t\t\t{value : 1.0, name : 'x1'},\n\t\t\t\t\t\t\t\t\t\t\t{value : 1.5, name : 'x1.5'},\n\t\t\t\t\t\t\t\t\t\t\t{value : 2.0, name : 'x2.0'},\n\t\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t\t\twidth = {100}\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\n\t\t\t\t\t\t\t\t\t\tselected = {1}\n\t\t\t\t\t\t\t\t\t\tonChange= {this.setRate}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</FlexPanel>\n\t\t\t\t\t\t\t</LFloatArea>\n\t\t\t\t\t\t\t<RFloatArea>\n\t\t\t\t\t\t\t\t<time dateTime={`P${Math.round(this.state.seek)}S`}>\n\t\t\t\t\t\t\t\t\t{this.format(this.state.seek)}\n\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t\t{' / '}\n\t\t\t\t\t\t\t\t<time dateTime={`P${Math.round(this.state.duration)}S`}>\n\t\t\t\t\t\t\t\t\t{this.format(Math.round(this.state.duration))}\n\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t</RFloatArea>\n\t\t\t\t\t\t</RelativeGroup>\n\t\t\t\t\t</SubFullPanel>\n\t\t\t\t\t<SubFullPanel>\n\t\t\t\t\t\t{'상담원 금칙어'}\n\t\t\t\t\t</SubFullPanel>\n\t\t\t\t\t<SubFullPanel>\n\t\t\t\t\t\t<RelativeGroup>\n\t\t\t\t\t\t\t<LFloatArea>\n\t\t\t\t\t\t\t\t<FlexPanel>\n\t\t\t\t\t\t\t\t\t<Textfield width={200}></Textfield>\n\t\t\t\t\t\t\t\t\t<button>위</button>\n\t\t\t\t\t\t\t\t\t<button>아래</button>\n\t\t\t\t\t\t\t\t</FlexPanel>\n\t\t\t\t\t\t\t</LFloatArea>\n\t\t\t\t\t\t\t<RFloatArea>\n\t\t\t\t\t\t\t\t<button>텍스트복사</button>\n\t\t\t\t\t\t\t\t<button>텍스트저장</button>\n\t\t\t\t\t\t\t\t<button>정답지작성</button>\n\t\t\t\t\t\t\t</RFloatArea>\n\t\t\t\t\t\t</RelativeGroup>\n\t\t\t\t\t</SubFullPanel>\n\t\t\t\t\n\t\t\t\t\t\t{/* <ReactHowler \n\t\t\t\t\t\t\t// src={process.env.API_URL + '/player/' + this.props.callId}\n\t\t\t\t\t\t\t// src={mp3File}\n\t\t\t\t\t\t\t//src={this.state.src}\n\t\t\t\t\t\t\tref={(ref) => (this.player = ref)}\n\t\t\t\t\t\t\t// preload = {false}\n\t\t\t\t\t\t\t// playing = {this.state.playing}\n\t\t\t\t\t\t\t// volume = {this.state.volume}\n\t\t\t\t\t\t\t// onLoad = {this.onLoad}\n\t\t\t\t\t\t\t// onLoadError = {(e) => {alert('onLoadError')}}\n\t\t\t\t\t\t\t// onPlay = {this.onPlay}\n\t\t\t\t\t\t\t// //onPause = {this.onPause}\n\t\t\t\t\t\t\t// //onVolume = {this.onVolume}\n\t\t\t\t\t\t\t// onStop = {this.onStop}\n\t\t\t\t\t\t\t// onEnd = {this.onEnd}\n\t\t\t\t\t\t/>  */}\n\t\t\t\n\t\t\t\t</ComponentPanel>\n\t\t\t\t<ComponentPanel>\n\t\t\t\t\t<FullPanel height={'50%'}>\n\t\t\t\t\t\t{this.getContents(this.state.dsRcvSttJobData)}\n\t\t\t\t\t</FullPanel>\n\t\t\t\t</ComponentPanel>\n\t\t\t</FullPanel>\n\t\t)\n\t}\n}\nexport default Player;","import React from 'react';\r\nimport { Progress } from \"react-sweet-progress\";\r\n\r\nclass ProgressBar extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-progress-div\">\r\n\t\t\t\t<Progress\ttype={this.props.options.type} percent={this.props.data} status={this.props.options.status}\r\n\t\t\t\t\t\t\ttheme={\r\n\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\tdefault : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'blue'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\terror : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'red'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tsuccess : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'green'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ProgressBar","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {TransManager, ComLib, StrLib} from 'common';\r\nimport {Checkbox, MultiCheckBox} from 'components';\r\n\r\nclass Selectbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tselected : 0,\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target : e.target, id : this.props.id});\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('select child render');\r\n\t\treturn (\r\n\t\t\t<div className='scrm-select-div' style={{width : this.props.width}}>\r\n\t\t\t\t<select\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t// value = {(this.props.dataset.length <= this.props.selected)  ? '' :  this.props.dataset[this.props.selected]['value']} \r\n\t\t\t\t\tvalue = {this.props.value} \r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t> \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.dataset.filter(item=> item.value !== null && item.value !== undefined).map((prop, key) => {\r\n\t\t\t\t\t\t\treturn (<option value={prop.value} key={prop.value + '_' + key} >{prop.name}</option>);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass CentListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = { type : 'A' }\r\n\tcomponentDidMount () {\r\n\t\tthis.getCentList();\r\n\t}\r\n\tgetCentList = async() => {\r\n\t\t// let item = [{value : '', name : (this.props.type === 'C') ? '선택' : '전체'}];\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('CENTLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getCentComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsCentComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\tconst res = await transManager.agent();\r\n\r\n\t\t\tif ( res.data.dsCentComboInfo.length === 0 ) {\r\n\t\t\t\t//this.setState({ ...this.state, comboItem : item});\r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({...this.state, comboItem : item.concat(res.data.dsCentComboInfo.map((item) => {\r\n\t\t\t\t//     return { value : item.CENT_CD , name : item.CENT_NM };\r\n\t\t\t\t// }))});\r\n\t\t\t\tthis.setState({...this.state, comboItem : res.data.dsCentComboInfo.map((item) => {\r\n\t\t\t\t\treturn { value : item.CENT_CD , name : item.CENT_NM };\r\n\t\t\t\t})});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/>);\r\n\t}\r\n}\r\nclass TeamListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getTeamList(this.props.centCd);\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd) {\r\n\t\t\tthis.getTeamList(this.props.centCd);\r\n\t\t}\r\n\t}\r\n\tgetTeamList = async() => {\r\n\t\t// let item = [{value : '', name : (this.props.type === 'C') ? '선택' : '전체'}];\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('TEAMLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getTeamComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsTeamComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\r\n\t\t\tif (res.data.dsTeamComboInfo.length === 0) {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item});\r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item.concat(res.data.dsTeamComboInfo.map((item) => {\r\n\t\t\t\t//    return { value : item.TEAM_CD , name : item.TEAM_NM };\r\n\t\t\t\t// }))});\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsTeamComboInfo.map((item) => {\r\n\t\t\t\t   return { value : item.TEAM_CD , name : item.TEAM_NM };\r\n\t\t\t\t})});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// this.setState({ ...this.state, comboItem : item});\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange={this.props.onChange}/> );\r\n\t}\r\n}\r\nclass UsrListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomboItem : []\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getUserList();\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd || prevProps.teamCd !== this.props.teamCd) {\r\n\t\t\tthis.getTeamList();\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\tteamCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tgetUserList = async() => {\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('USERLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getUsrComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsUsrComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd, TEAM_CD : this.props.teamCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\t\t\tif (res.data.dsUsrComboInfo.length === 0) {\r\n\t\t\t\t// return item; \r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item.concat(res.data.dsUsrComboInfo.map((item) => {\r\n\t\t\t\t//     return { value : item.USR_CD , name : item.USR_NM };\r\n\t\t\t\t//  }))});\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsUsrComboInfo.map((item) => {\r\n\t\t\t\t\treturn { value : item.USR_CD , name : item.USR_NM };\r\n\t\t\t\t })});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t//return item; \r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/> );\r\n\t}\r\n}\r\nclass MulitSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tlet text = '...';\r\n\t\tif (this.props.dataset.length !== 0) {\r\n\t\t\tif (this.props.dataset.filter(item => item['value'] === 'Y').length === this.props.dataset.length) {\r\n\t\t\t\ttext = '전체선택';\r\n\t\t\t} else {\r\n\t\t\t\ttext = this.props.dataset.filter(item => item['value'] === 'Y').map(element => { return element[this.props.value]}).toString();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\texpended : false,\r\n\t\t\ttext : text,\r\n\t\t\tbaseOption : {\r\n\t\t\t\tkeyProp : 'all_check',\r\n\t\t\t\tvalue : '전체선택',\r\n\t\t\t\tchecked : 'N'\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.onCheckAll = this.onCheckAll.bind(this);\r\n\t\tthis.onCheckboxClick = this.onCheckboxClick.bind(this);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\thandleClickOutside = (e) => {\r\n\t\tconst domNode = ReactDOM.findDOMNode(this);\r\n\t\tif ( !domNode || !domNode.contains(e.target) ) {\r\n\t\t\tdocument.getElementById(this.props.id).style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended : false});\r\n\t\t}\r\n\t}\r\n\topenCheckbox = () => {\r\n\t\tlet checkboxes = document.getElementById(this.props.id);\r\n\t\tif (!this.state.expended) {\r\n\t\t\tcheckboxes.style.display = \"block\";\r\n\t\t\tthis.setState({...this.state, expended: true});\r\n\t\t} else {\r\n\t\t\tcheckboxes.style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended: false});\r\n\t\t}\r\n\t}\r\n\tonCheckAll = (e) => {\r\n\t\tthis.setState({...this.state\r\n\t\t\t, text: (e.checked) ? '전체선택' : '...'\r\n\t\t\t, baseOption : {...this.state.baseOption, checked : (e.checked) ? 'Y' : 'N'}\r\n\t\t}, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\tdataset : this.props.dataset.map((item) =>{ item['value'] = (e.checked) ? 'Y' : 'N'; return item;})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase  \"multiselect_\" + this.props.id + '_head' :\r\n\t\t\t\tconsole.log('all check box');\r\n\t\t\t\tbreak;\r\n\t\t\tcase  \"multiselect_\" + this.props.id :\r\n\t\t\t\tconsole.log('single check box');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\tonCheckboxClick = (e) => {\r\n\t\tlet rtnText = null;\r\n\t\tlet checkedList = null;\r\n\t\tif (e.target.checked) {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' || item === this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t} else {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' && item !== this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t}\r\n\t\tif (checkedList.length === this.props.dataset.length) {\r\n\t\t\trtnText  = '전체선택';\r\n\t\t} else {\r\n\t\t\tif (checkedList.length === 0) {\r\n\t\t\t\trtnText  = '...';\r\n\t\t\t} else {\r\n\t\t\t\trtnText = checkedList.toString();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ ...this.state,  text :  rtnText,  baseOption : {...this.state.baseOption, checked : (checkedList.length === this.props.dataset.length) ? 'Y' : 'N'}}\r\n\t\t, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tdataset : this.props.dataset.map((item, index) => {\r\n\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\titem['value'] = (e.checked) ? 'Y' : 'N';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-mulitlselect\">\r\n\t\t\t\t<div className= { (this.props.disabled) ? \"scrm-react-mulitlselect-selectbox-disabled\" : \"scrm-react-mulitlselect-selectbox\"}\r\n\t\t\t\t\t onClick={(this.props.disabled) ? (e) => { return null; } : this.openCheckbox} style={{width: this.props.width, display: 'flex'}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"scrm-react-mulitlselect-selectbox-label\" style={{width: this.props.width}}>\r\n\t\t\t\t\t\t<span>{this.state.text}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width:'10px', float: 'right', marginRight: '5px', verticalAlign: \"middle\"}}>\r\n\t\t\t\t\t\t<i className={(this.state.expended) ? \"arrow up\" : \"arrow down\"}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"scrm-react-mulitselect-checkbox\" id= {this.props.id} style={{width: this.props.width, height: this.props.displayCount * 20 + 'px'}}>\r\n\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\tid = {\"multiselect_\" + this.props.id + '_head'}\r\n\t\t\t\t\t\tkeyProp = {\"multiselect_baseOpt_\" + this.props.id}\r\n\t\t\t\t\t\tvalue = {this.state.baseOption.value}\r\n\t\t\t\t\t\tchecked = {this.state.baseOption.checked}\r\n\t\t\t\t\t\tonClick = {this.onCheckAll}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\tid= {\"multiselect_\" + this.props.id}\r\n\t\t\t\t\t\tdataset = {this.props.dataset}\r\n\t\t\t\t\t\tkeyProp = {this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\tonClick = {this.onCheckboxClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {Selectbox, MulitSelectBox, CentListSelectBox, TeamListSelectBox, UsrListSelectBox};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Slider from \"react-slick\";\r\nimport axios from 'axios';\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport {newScrmObj, ComLib} from 'common';\r\n\r\nclass SlidePreview extends React.Component {\r\n    static defaultProps = {\r\n        open: false,\r\n        filepath : '',\r\n        onClose : () => {return false;}\r\n    };\r\n    static propTypes = {\r\n        open : PropTypes.bool.isRequired,\r\n        onClose: PropTypes.func.isRequired\r\n    };\r\n    onClick = () => { this.props.onClose();};\r\n    render () {\r\n        return (\r\n           <div className='scrm-slide-preview modal' style={{display: (this.props.open) ? 'block' : 'none'}}>\r\n                <span className=\"scrm-slide-preview close\" onClick ={this.onClick}>&times;</span>\r\n                <img className=\"scrm-slide-preview img\" src={process.env.API_URL + '/img/' + this.props.name} alt=''/>\r\n                <div id=\"scrm-slide-preview caption\">{}</div>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nclass SlideContainer extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            ext : {\r\n                doc : ['doc', 'docx', 'hwp', 'txt'],\r\n                xls : ['xls', 'xlsx'],\r\n                ppt : ['ppt', 'pptx'],\r\n                pdf : ['pdf'],\r\n                img : ['gif', 'bmp', 'png', 'jpg', 'jpeg', 'jp2', 'j2c', 'jpx', 'jpf', 'jpc', 'j2k', 'tif']\r\n            }\r\n        }\r\n        this.onDownload = this.onDownload.bind(this);\r\n        this.onPreview = this.onPreview.bind(this);\r\n    }\r\n    onDownload = async() => {\r\n        console.log('download');\r\n        const reqOptions = {\r\n            method: 'get',\r\n            url: process.env.API_URL + '/scrm/mfu/files/' + this.props.name,\r\n            headers: { \r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: 'blob'\r\n        };\r\n        try {\r\n            const resData = await axios(reqOptions);\r\n            const url = window.URL.createObjectURL(new Blob([resData.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', this.props.name); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        } catch (err) {\r\n            ComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n            return false;\r\n        }\r\n    }\r\n    onPreview = () => {\r\n        console.log('onPreview');\r\n        if ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n            let dialog = document.createElement('div');\r\n            dialog.id = newScrmObj.constants.mdi.DIALOG;\r\n            document.body.appendChild(dialog);\r\n        }\r\n        ReactDOM.render(\r\n            <SlidePreview   open={true} url={this.props.url} name={this.props.name} onClose={ () => { ReactDOM.unmountComponentAtNode(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n                        ,   document.getElementById(newScrmObj.constants.mdi.DIALOG) \r\n        );\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div className ='scrm-slide-container' style={{padding: '1px', width: (this.props.height * 0.9)+ 'px', height: (this.props.height * 0.9)+ 'px'}}>\r\n                    <div className ='scrm-slide-main'  onClick = {this.onPreview} style={{height: ((this.props.height * 0.9) - 20)+ 'px'}}>\r\n                        <span>{this.props.name}</span>\r\n                    </div>\r\n                    <div className=\"scrm-slider-download\" onClick = {this.onDownload} style={{height: '20px'}}>\r\n                        <img id='imgDownload' src={'/images/download.png'} alt='' width=\"20px\"/>\r\n                        <span>DOWNLOAD</span>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass CustomSlide extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.onSelectPrev = this.onSelectPrev.bind(this);\r\n        this.onSelectNext = this.onSelectNext.bind(this);\r\n    }\r\n    static defaultProps = { height: 200 }\r\n    setSlideInfo = (props) => {\r\n        let info = [];\r\n        return info;\r\n    }\r\n    setSlideContent = (item) => {\r\n        return (\r\n            item.map((data, idx) => {\r\n                return <SlideContainer key={'_slidsContainer_' + idx} name={data.FILE_NM} url={ process.env.API_URL + 'img/' + data.FILE_NM } height={this.props.height}/>\r\n            })\r\n        );\r\n    }\r\n    onDownloadAll = () => {\r\n        console.log('download all');\r\n    }\r\n    onSelectPrev = () => { this.slider.slickPrev(); }\r\n    onSelectNext = () => { this.slider.slickNext(); }\r\n    render() {\r\n        const settings = {\r\n                dots: true\r\n            ,   slidesToShow: Number(this.props.data.length) <= 5 ? this.props.data.length : 5\r\n            ,   slidesToScroll: 1\r\n            ,   initialSlide: 0\r\n            ,   speed: 500 \r\n            ,   responsive: [\r\n                    { breakpoint: 1024, settings: { slidesToShow: 3, slidesToScroll: 1, infinite: true, dots: true}}\r\n                ,   { breakpoint: 600, settings: { slidesToShow: 2, slidesToScroll: 1 }}\r\n                ,   { breakpoint: 480, settings: { slidesToShow: 1, slidesToScroll: 1 }}\r\n              ]\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{display : 'flex', width: '100%', height: this.props.height + 'px'}}>\r\n                    <div className='scrm-slide-prev' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectPrev}>\r\n                        <h1>&#10094;</h1>\r\n                    </div>\r\n                    <div style={{width : \"80%\"}}>\r\n                        <Slider ref={c => (this.slider = c)} {...settings}>\r\n                            {this.setSlideContent(this.props.data)}\r\n                        </Slider>\r\n                    </div>\r\n                    <div className='scrm-slide-next' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectNext}>\r\n                        <h1>&#10095;</h1>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default CustomSlide;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Tabs extends React.Component {\r\n    static propTypes = {\r\n        // children: PropTypes.instanceOf(Array).isRequired,\r\n        onClick : PropTypes.func.isRequired,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            active: (React.Children.toArray(this.props.children).length === 0) \r\n                    ? 0 \r\n                    : React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none')[0].props.index };\r\n    }\r\n    static defaultProps = {\r\n        onClick : (e) => {return false;}\r\n    }\r\n    onClickTab = (index) => {\r\n        this.setState({ active: index });\r\n        this.props.onClick(index);\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{marginBottom: '50px'}}>\r\n                    <ul className ='scrm-tabs-ul'>\r\n                        {\r\n                            React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((tab) => {\r\n                                    return (\r\n                                        <Tab id={this.props.id} tabWidth= {this.props.tabWidth} active ={this.state.active} key ={tab.props.index} index= {tab.props.index} label = {tab.props.label} onClick = {this.onClickTab}/>\r\n                                    )\r\n                            })\r\n\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className='scrm-tab-container' style={{height: this.props.height}}>\r\n                    {   \r\n                        React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((child) => {\r\n                            if (child.props.index !== this.state.active) return undefined;\r\n                            return child.props.children;\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n} \r\nclass Tab extends React.Component {\r\n    static propTypes = {\r\n        active: PropTypes.number.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n        tabWidth: PropTypes.string.isRequired\r\n    };\r\n    onClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    }\r\n    render () {\r\n        let className = 'scrm-tabs-ul-li';\r\n        if (this.props.active === this.props.index) {\r\n            className += ' scrm-tabs-ul-li-active'\r\n        }\r\n        return (\r\n            <li className ={className} style={{width: this.props.tabWidth}} onClick ={this.onClick}> {this.props.label} </li>\r\n        );\r\n    }\r\n}\r\nclass TabPanel extends React.Component {\r\n    static defaultProps = {\r\n        index : 0,\r\n        label : 'TAB'\r\n    }; \r\n    render () {\r\n        return ( <div id={this.props.id} className='scrm-tab-panel'> {this.props.children} </div> )\r\n    }\r\n}\r\nexport { Tabs, Tab, TabPanel };","// 평가표관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {TransManager, DateLib, StrLib, ComLib, DataLib, newScrmObj} from 'common';\r\n\r\n// rowspan 예시로 미완성 코드이지만 미리 커밋함\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\r\n\t\t\tcomponents: { showCellRenderer: createShowCellRenderer() },\r\n\t\t\tbuttonSaveProps : {\r\n\t\t\t\tid : 'qam02BtnSave',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tbuttonModifyProps : {\r\n\t\t\t\tid : 'qam02BtnModify',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tleftHeader : \r\n\t\t\t[\r\n\t\t\t\t{headerName: '',\t\t\t    field: '',\t\t\t\t\tcolId: '',\t \r\n\t\t\t\t  req: true, headerCheckboxSelection: true,\tcheckboxSelection: true, width : 40 },\r\n\t\t\t\t{headerName: '항목',\t\t\tfield: 'VLA_ITM_NM',\t\tcolId: 'VLA_ITM_NM',\tresizable: true  , width : 60  \t\t\t\r\n\r\n\t\t\t} ,\r\n\t\t\t\t{headerName: '평가내용',\t \t field: 'VLA_CONT_NM',\t\tcolId: 'VLA_CONT_NM',   resizable: true  , width : 100  \r\n\t\t\t\t,rowSpan : rowSpanFnc\r\n\t\t\t\t,cellRenderer: 'showCellRenderer'\r\n\t\t\t},\r\n\t\t\t\t{headerName: '평가기준',\t\t field: 'VLA_STND_NM',\t\tcolId: 'VLA_STND_NM',  resizable: true \t},\r\n\t\t\t\t{headerName: 'CNT',\t\t\t\tfield: 'CNT',\t\tcolId: 'CNT',\t\r\n\t\t\t\thide: true,\r\n\t\t\t\tsuppressToolPanel: true },\r\n\t\t\t\t{headerName: 'VLA_ITM_CD',\t\tfield: 'VLA_ITM_CD',\t\tcolId: 'VLA_ITM_CD',\t\r\n\t\t\t\thide: true,\r\n\t\t\t\tsuppressToolPanel: true },\r\n\t\t\t\t{headerName: 'VLA_STND_CD',\t\tfield: 'VLA_STND_CD',\t\tcolId: 'VLA_STND_CD',\t\r\n\t\t\t\thide: true,\r\n\t\t\t\tsuppressToolPanel: true },\r\n\t\t\t],\r\n\t\t\tleftColumnApi : {\r\n\r\n\t\t\t},\t\t\t\r\n\t\t\trightHeader  : \r\n\t\t\t[\r\n\t\t\t\t{headerName: '항목',\t\t\tfield: 'VLA_ITM_NM',\t\tcolId: 'VLA_ITM_NM',\t req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t{headerName: '평가내용',\t\tfield: 'VLA_CONT_NM',\t\tcolId: 'VLA_CONT_NM',   },\r\n\t\t\t\t{headerName: '평가기준',\t\tfield: 'VLA_STND_NM',\t\tcolId: 'VLA_STND_NM',\t},\r\n\t\t\t\t{headerName: 'CNT',\t\t\t\tfield: 'CNT',\t\tcolId: 'CNT',\t\r\n\t\t\t\thide: true,\r\n\t\t\t\tsuppressToolPanel: true },\r\n\t\t\t\t{headerName: 'VLA_ITM_CD',\t\tfield: 'VLA_ITM_CD',\t\tcolId: 'VLA_ITM_CD',\t\r\n\t\t\t\thide: true,\r\n\t\t\t\tsuppressToolPanel: true },\r\n\t\t\t\t{headerName: 'VLA_STND_CD',\t\tfield: 'VLA_STND_CD',\t\tcolId: 'VLA_STND_CD',\t\r\n\t\t\t\thide: true,\r\n\t\t\t\tsuppressToolPanel: true },\t\t\t\t\r\n\t\t\t],\r\n\t\t\trightColumnApi : {\r\n\r\n\t\t\t},\t\t\t\t\t\t\r\n\r\n\r\n\t\t\tdsAllValStndList : DataLib.datalist.getInstance(),\t\t\t\r\n\t\t\tdsSelValStndList : DataLib.datalist.getInstance(),\r\n\t\t\tdsRst: DataLib.datalist.getInstance(),\t\t\t\r\n\r\n\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\t\t\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidMount () {\r\n\t\tthis.transaction(\"QAM020000_R01\");\r\n\t\tthis.transaction(\"QAM020000_R02\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'QAM020000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'QAM020000_R01':\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"QAM.R_Qam02Search1\",\r\n\t\t\t\t\tdatasetsend:\"\",\r\n\t\t\t\t\tdatasetrecv:\"dsAllValStndList\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 'QAM020000_R02':\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"QAM.R_Qam02Search2\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSearchParam\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsSelValStndList\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSearchParam', [{STD_VLA : 'V20200924001'}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.group('callBack');\r\n\t\tswitch (res.id) {\r\n\t\tcase 'QAM020000_R01':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsAllValStndList\", res.data.dsAllValStndList);\r\n\t\t\tbreak;\r\n\t\tcase 'QAM020000_R02':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSelValStndList\", res.data.dsSelValStndList);\t\t\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"stt01BtnSearch\" :\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.validation(\"STT010000_R01\")) this.transaction(\"STT010000_R01\");\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptStringTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, string : {...this.state.textFieldProps.string, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tradio : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'rdoTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : e.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'singleChkTest' :\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'stt01RangeCalStrt':\r\n\t\t\t\t\t\tthis.setState({...this.state, stt01RangeCalendarProps : {...this.state.stt01RangeCalendarProps, startDate : e.target.value}});\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'stt01RangeCalEnd':\r\n\t\t\t\t\t\tthis.setState({...this.state, stt01RangeCalendarProps : {...this.state.stt01RangeCalendarProps, endDate : e.target.value}});\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'cmbUser':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsGrp);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tareaName = {'전체평가기준'}\r\n\t\t\t\t\t\t\t\theight= \"600px\"\t\t\t\t\r\n\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdnlExcelBtn = {false}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsAllValStndList}\r\n\t\t\t\t\t\t\t\theader = {this.state.leftHeader}\r\n\t\t\t\t\t\t\t\tcolumnApi = {this.state.leftColumnApi}\r\n\t\t\t\t\t\t\t\tcomponents = {this.state.components}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"삭제\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\tkeyProp = {'QAM020000_chkUseYn'}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {'신규평가표 생성'}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange = {(e) => {return null;}}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tareaName = {' '}\r\n\t\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {false}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsSelValStndList}\r\n\t\t\t\t\t\t\t\t\theader = { this.state.rightHeader}\r\n\t\t\t\t\t\t\t\t\tcolumnApi = {this.state.rightColumnApi}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\r\n\t\r\n\t\r\n}\r\n\r\n\r\nvar compare1;\r\nvar compare2;\r\n\r\n\r\nfunction rowSpanFnc(params){\r\n\r\n\t//인덱스로 사용해야\r\n\tconsole.log(params.data.recid + \"  :   \"  + params.data.CNT);\r\n\r\n\tif(params.data.recid === 1) {\r\n\t\tcompare1 = params.data.VLA_ITM_CD;\r\n\t\treturn params.data.CNT\r\n\t} else {\r\n\t\tcompare2 = params.data.VLA_ITM_CD;\r\n\t\tif(compare1 === compare2) {\r\n\t\t\treturn 0\r\n\t\t} else {\r\n\t\t\tcompare1 = compare2;\r\n\t\t\treturn params.data.CNT\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\nvar value1;\r\nvar value2;\r\n\r\nfunction createShowCellRenderer() {\r\n\tfunction ShowCellRenderer() {}\r\n\tShowCellRenderer.prototype.init = function (params) {\r\n\r\n\t\tvalue2 = params.data.VLA_ITM_CD;\r\n\r\n\t  if (params.data.recid === 1) {\r\n\t\tvalue1 = params.data.VLA_ITM_CD;\r\n\t\tthis.ui = document.createElement('div');\r\n\t\tthis.ui.innerHTML =\r\n\t\t'<div class=\"show-name\">' +\r\n\t\tparams.data.VLA_ITM_NM  +\r\n\t\t'</div>' ;\r\n\t\t} else {\r\n\t\t\tif(value1 === value2) {\r\n\t\t\t\treturn null\r\n\t\t\t} else {\r\n\t\t\t\tthis.ui = document.createElement('div');\r\n\t\t\t\tthis.ui.innerHTML =\r\n\t\t\t\t'<div class=\"show-name\">' +\r\n\t\t\t\tparams.data.VLA_ITM_NM  +\r\n\t\t\t\t'</div>' ;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tShowCellRenderer.prototype.getGui = function () {\r\n\t  return this.ui;\r\n\t};\r\n\treturn ShowCellRenderer;\r\n  }\r\n\r\n\r\nexport default View;\r\n\r\n","import React from 'react';\r\nimport 'assets/styles/component.css';\r\n\r\nclass Table extends React.Component {\r\n    setColGroup = (colGrp) => {\r\n        if (colGrp === undefined) {\r\n            return null;\r\n        } else {\r\n            if (colGrp.length === 0) {\r\n                return null;\r\n            }  else {\r\n                return colGrp.map((colGrp, index) => {\r\n                    return (<col key={'col_' + index} style={{width: colGrp.width}}></col>)\r\n                });\r\n            }\r\n        }\r\n    }\r\n    setBody = (body) => {\r\n        if (body === undefined)  {\r\n            return null;\r\n        } else {\r\n            return this.setRow(body);\r\n        }\r\n    }\r\n    setRow = (rowArray) => {\r\n        return rowArray.map((colArray, index) => {\r\n            return (<tr key={'tr_' + index}>{this.setColumn(colArray)}</tr>)\r\n        });\r\n        \r\n    }\r\n    setColumn = (colArray) => {\r\n        return colArray.map((colJson, index) => {\r\n            return (\r\n              (colJson.type === 'T') ?  <th className='scrm-table-th' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</th>\r\n                                     :  <td className='scrm-table-td' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</td>\r\n            )\r\n        });\r\n    }\r\n    render () {\r\n        return (\r\n            <table className = 'scrm-table' id = {this.props.id} style={{width: this.props.width}}>\r\n                <colgroup>\r\n                    { this.setColGroup(this.props.colGrp) }\r\n                </colgroup>\r\n                { (this.props.head === null || this.props.head === undefined) ? <thead>{this.props.head}</thead> : <thead/> }\r\n                <tbody>\r\n                    { this.setBody(this.props.tbData) }\r\n                </tbody>\r\n                { (this.props.footer === null || this.props.footer === undefined) ? <tfoot>{this.props.footer}</tfoot> : <tfoot></tfoot> }\r\n            </table>\r\n        );\r\n    }\r\n}\r\nexport default Table;","import React from 'react';\r\nimport {IconButton, LFloatArea} from 'components';\r\n\r\nclass Tray extends React.Component {\r\n    isContain = () => {\r\n\t\t  console.log(' ===== Tray isContain ===== ');\r\n    }\r\n    select = () => {\r\n          console.log(' ===== Tray select ===== ');\r\n    }\r\n    remove = () => {\r\n\t\t  console.log(' ===== Tray remove ===== ');\r\n    }\r\n    removeAll = () => {\r\n\t\t  console.log(' ===== Tray removeAll ===== ');\r\n    }\r\n    initialize = () => {\r\n\t\t  console.log(' ===== Tray initialize ===== ');\r\n    }\r\n}\r\n\r\nclass TrayDiv extends React.Component {\r\n  constructor(props)  {\r\n      super(props);\r\n      this.state = {\r\n\r\n      }\r\n  }\r\n\r\n    selectMenu = (props) => {\r\n        console.log(props);\r\n\r\n        this.props.data.forEach((key, i) => {\r\n            if(props.MNU_ID === key.MNU_ID) {\r\n\r\n                if(document.getElementById(props.MNU_ID) !== null) {\r\n                    document.getElementById(props.MNU_ID).style.display = 'block';\r\n\r\n                    // tray selected 변경 처리\r\n                    this.props.onSelect(props);\r\n                }\r\n\r\n            } else {\r\n                if(document.getElementById(key.MNU_ID) !== null && document.getElementById(key.MNU_ID) !== undefined) {\r\n                    document.getElementById(key.MNU_ID).style.display = 'none';\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    removeMenu = (menu) => {\r\n        console.log(menu);\r\n\r\n        this.props.onClose(menu);\r\n    }\r\n    render () {\r\n        //debugger;\r\n        return (\r\n            <React.Fragment>\r\n                <LFloatArea>\r\n                <div className='scrm-tray-div'>\r\n                    <ul>\r\n                        {\r\n                            this.props.data.map((item, key) => {\r\n                                return (\r\n                                <li key={'scrm-tray-div' + key} id={'tray_li_' + item.MNU_ID} onClick={(e) => { this.selectMenu(item)}}>\r\n                                    <div className='scrm-tray-div-li-div'>{item.MNU_NM}</div>\r\n                                    <IconButton classes='scrm-tray-div-btn-close' id='btnClose' onClick={(e) => {e.stopPropagation(); this.removeMenu(item)}}/>\r\n                                </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                </LFloatArea>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport {Tray, TrayDiv};","import React from 'react';\r\n\r\nclass Textarea extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='scrm-textarea-div'>\r\n                <textarea id={this.props.id} value={this.props.value} rows=\"10\" onChange={(e) => this.props.onChange(e)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Textarea;","import React from 'react';\r\n\r\nclass Tree extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\te.target.parentElement.querySelector('.scrm-react-tree-ul-nested').classList.toggle('scrm-react-tree-ul-active');\r\n\t\te.target.classList.toggle('scrm-react-tree-check-box');\r\n\t}\r\n\tsetComboItem = () => {\r\n\t\tconsole.log('setComboItem');\r\n\t\tthis.props.dataset.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tkey : item.id,\r\n\t\t\t\tparn_key : item.parn_id,\r\n\t\t\t\tlabel : item.value,\r\n\t\t\t\tnode : this.props.dataset.filter(node => node.parn_id === item.id)\r\n\t\t\t}\r\n\t\t}).forEach((item) => {\r\n\t\t\tlet html = null;\r\n\t\t\tlet span = document.createElement('span');\r\n\t\t\tlet ul = document.createElement('ul');\r\n\t\t\tlet li = document.createElement('li');\r\n\t\t\tif (item.node.length > 0) {\r\n\t\t\t\tspan.innerText = item.label;\r\n\t\t\t\tspan.className = 'scrm-react-tree-box';\r\n\t\t\t\tspan.onclick = this.onClick;\r\n\r\n\t\t\t\tul.id = item.key;\r\n\t\t\t\tul.className = 'scrm-react-tree-ul-nested'\r\n\r\n\t\t\t\thtml = li\r\n\t\t\t\thtml.appendChild(span);\r\n\t\t\t\thtml.appendChild(ul);\r\n\t\t\t\tif (item.parn_key === 'none') {\r\n\t\t\t\t\tdocument.getElementById(this.props.id).appendChild(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(item.parn_key).appendChild(html);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thtml = li;\r\n\t\t\t\thtml.innerText = item.label;\r\n\t\t\t\tif (item.parn_key === 'none') {\r\n\t\t\t\t\tdocument.getElementById(this.props.id).appendChild(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(item.parn_key).appendChild(html);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.setComboItem();\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-tree\">\r\n\t\t\t\t<ul className=\"scrm-react-tree-ul\" id={this.props.id}>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Tree;","import { combineReducers } from 'redux';\r\nimport appModule from './appModule';\r\n\r\nexport default combineReducers ({ appModule });\r\n","import configure from './configure';\r\nexport default configure();","import { createStore } from 'redux';\r\nimport modules from './modules';\r\n\r\nconst configure = () => {\r\n\t// const store = createStore(modules);\r\n\tconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\tconst store = createStore(modules, devTools);\r\n\r\n\treturn store;\r\n}\r\n\r\nexport default configure;","import axios from 'axios';\r\nimport { loadProgressBar } from 'x-axios-progress-bar';\r\nimport 'x-axios-progress-bar/dist/nprogress.css';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Dialog, Player} from 'components';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\n\r\nconst newScrmObj = {\r\n\tconstants: {\r\n\t\tcrud: {\r\n\t\t\tread: 'r',\r\n\t\t\tcreate: 'c',\r\n\t\t\tupdate: 'u',\r\n\t\t\tdestroy: 'd',\r\n\t\t\tremove: 'e'\r\n\t\t},\r\n\t\tdatetime: {\r\n\t\t\tformat: 'YYYYMMDDHH24MISS'\r\n\t\t},\r\n\t\tmdi: {\r\n\t\t\tDIALOG : 'dialog',\r\n\t\t\tPOP_UP : 'popup',\r\n\t\t\tPLAYER : 'player',\r\n\t\t\tLOADING : '_loadDiv'\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\targument: {\r\n\t\t\t\tall: 'a',\r\n\t\t\t\tselect: 's',\r\n\t\t\t\tnone: 'n',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nconst ComLib = {\r\n\tisNull: (obj) => {\r\n\t\tif (typeof obj === undefined || obj === null) return true;\r\n\t},\r\n\tisJson: (data) => {\r\n\t\ttry {\r\n\t\t\tlet json = JSON.parse(data);\r\n\t\t\treturn (typeof json === 'object');\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tsetSession: (id, obj) => {\r\n\t\tif (typeof obj === 'object') {\r\n\t\t\tsessionStorage.setItem(id, JSON.stringify(obj));\r\n\t\t} else {\r\n\t\t\tsessionStorage.setItem(id, obj);\r\n\t\t}\r\n\t},\r\n\tgetSession: (id) => {\r\n\t\tif (ComLib.isJson(sessionStorage.getItem(id))) {\r\n\t\t\treturn JSON.parse(sessionStorage.getItem(id));\r\n\t\t} else {\r\n\t\t\treturn sessionStorage.getItem(id);\r\n\t\t}\r\n\t},\r\n\topenDialog : (type, msg, callback) => {\r\n\t\tif ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n\t\t\tlet dialog = document.createElement('div');\r\n\t\t\tdialog.id = newScrmObj.constants.mdi.DIALOG;\r\n\t\t\tdocument.body.appendChild(dialog);\r\n\t\t}\r\n\t\tif (type === 'C') {\r\n\t\t\tif (typeof callback === undefined || typeof callback !== 'function') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tReactDOM.render( <Dialog.ConfirmDialog open={true} message={msg}  onReturnVal = {callback}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t} else {\r\n\t\t\tReactDOM.render( <Dialog.AlertDialog   open={true} message={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t}\r\n\t},\r\n\topenPop : (url, name, options, callbackFunc) => {\r\n\t\tlet arrPopTag = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.POP_UP.length) === newScrmObj.constants.mdi.POP_UP\r\n\t\t);\r\n\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\t\tif (arrPopTag.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPopTag.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPopTag[arrPopTag.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPopTag.length * 10,  y: arrPopTag.length * 10 }\r\n\t\t}\r\n\t\tdocument.body.appendChild(popDiv);\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Dialog.PopupDialog\r\n\t\t\t\t\tpopupdivid = {popDiv.id}\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\turl={url}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmodaless={options.modaless}\r\n\t\t\t\t\tposition = {position}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonCallbackFunc={callbackFunc}\r\n\t\t\t\t\tonClose={\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\toptions.callback();\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</Provider>\r\n\t\t, popDiv);\r\n\t},\r\n\topenPlayer : (callId) => {\r\n\t\tlet arrPlayerPop = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.POP_UP.length) === newScrmObj.constants.mdi.POP_UP\r\n\t\t);\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\t\tif (arrPlayerPop.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPlayerPop.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPlayerPop[arrPlayerPop.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPlayerPop.length * 10,  y: arrPlayerPop.length * 10 }\r\n\t\t}\r\n\t\tdocument.body.appendChild(popDiv);\r\n\t\tReactDOM.render(\r\n\t\t\t<Player\r\n\t\t\t\topen={true}\r\n\t\t\t\tonClose={\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t// if (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t// \ttry {\r\n\t\t\t\t\t\t\t\t// \t\toptions.callback();\r\n\t\t\t\t\t\t\t\t// \t} catch (err) {\r\n\t\t\t\t\t\t\t\t// \t\treject(err);\r\n\t\t\t\t\t\t\t\t// \t }\r\n\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t, popDiv);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [대분류 코드에 해당하는 소분류 공통코드를 갖고온다]\r\n\t* @param\t:\tstring sBigCtgCd\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. sBigCtgCd : 공통코드 대분류 코드\r\n\t\t\t\t\t2. 성공 => 대분류 코드에 해당하는 소분류 코드를 array로 return\r\n\t\t\t\t\t   실패 => empty array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCommCodeList: (sBigCtgCd) => {\r\n\t\tlet commCodeList = [];\r\n\t\tif (StrLib.isNull(sessionStorage.getItem('gdsCommCode')))  return commCodeList;\r\n\t\tcommCodeList = JSON.parse(sessionStorage.getItem('gdsCommCode'));\r\n\t\treturn commCodeList.filter(item => item.BIG_CD === sBigCtgCd);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [기준 코드에 해당하는 사용자 센터의 기준값을 갖고 온다]\r\n\t* @param\t:\tstring strStndCd, string strTargetCol\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. strStndCd : 기준코드\r\n\t\t\t\t\t2. strTargetCol : 대상 컬럼 ID ( 예 : 'ETC1_CONT' )\r\n\t\t\t\t\t3. 성공 => 사용자 센터에 등록된 기준값 정보에서 해당 기준 코드\r\n\t\t\t\t\t\t-> 대상 컬럼의 Value를 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCentStndVl: (strStndCd, strTargetCol) => {\r\n\t\tvar strRtn = \"\";\r\n\t\tvar arrStndVl = ComLib.getSession(\"gdsCentStndVl\");\r\n\r\n\t\tif (typeof arrStndVl === \"object\") {\r\n\t\t\tfor (var idx = 0; idx < arrStndVl.length; idx++) {\r\n\t\t\t\tif (arrStndVl[idx].STND_CD === strStndCd) {\r\n\t\t\t\t\tif (arrStndVl[idx].APY_YN === \"Y\") {\r\n\t\t\t\t\t\tstrRtn = arrStndVl[idx][strTargetCol];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (strTargetCol === 'APY_YN') strRtn = \"N\";\r\n\t\t\t\t\t\telse strRtn = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn strRtn;\r\n\t},\r\n\r\n\tgetInitScreen: () => {\r\n\t\tvar rtn = {};\r\n\t\tvar iScrnId = ComLib.getCentStndVl('00000', 'STND_VL');\r\n\t\tif (!StrLib.isNull(iScrnId))\r\n\t\t\trtn = (ComLib.getSession(\"gdsMenu\").filter(item => item.MNU_ID === iScrnId))[0];\r\n\t\treturn rtn;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [이미 변경된 Dataset을 react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateDs: (obj, strDatasetId, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, state[strDatasetId].records); }, () => {\r\n\t\t\tif (typeof callback === 'function') callback();\r\n\t\t});\r\n\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Value를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, integer nRowIndex, string strColumnId, string strValue\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. nRowIndex : 변경 대상 Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 대상 Column ID\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateValue: (obj, strDatasetId, nRowIndex, strColumnId, strValue, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setValueToDs(state, strDatasetId, nRowIndex, strColumnId, strValue); }, () => {\r\n\t\t\tif (typeof callback === 'function') callback();\r\n\t\t});\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Records를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateRecords: (obj, strDatasetId, arrRecords, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, arrRecords); }, () => {\r\n\t\t\tif(typeof callback === 'function') callback();\r\n\t\t});\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Dataset Records를 Initialize]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateInitRecords: (obj, strDatasetId, arrRecords) => {\r\n\t\tobj.setState((state) => { return DataLib.initRecordsToDs(state, strDatasetId, arrRecords); });\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [SelectBox List로 변환]\r\n\t* @param\t:\tarray arrRecords, string args\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. arrRecords : select inner list data\r\n\t\t\t\t\t2. args : list add flag (all : 전체 / select : 선택 / none)\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tconvComboList: (arrRecords, args) => {\r\n\t\tvar arr = [];\r\n\t\tif (arrRecords.length > 1) {\r\n\t\t\tif (args === newScrmObj.constants.select.argument.all) {\r\n\t\t\t\tarr.push({value: \"\", name: \"전체\"});\r\n\t\t\t} else if (args === newScrmObj.constants.select.argument.select) {\r\n\t\t\t\tarr.push({value: \"\", name: \"선택\"});\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (var index = 0; index < arrRecords.length; index++) {\r\n\t\t\tarr.push({value: arrRecords[index][\"CODE\"], name: arrRecords[index][\"CODE_NM\"]});\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [메시지 코드에 해당하는 메시지 내용을 갖고 온다]\r\n\t* @param\t:\tstring msgcd, array args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. msgcd : 메시지 코드\r\n\t\t\t\t\t2. args : 메시지 내용 Replace value\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetMsgCont: (msgcd, args) => {\r\n\t\tvar strMsg = \"\";\r\n\t\tvar objMsg = ComLib.getSession(\"gdsMsgList\").filter(msg => msg.MSG_CD === msgcd);\r\n\t\tif (objMsg.length == 0) strMsg = \"Message not found\";\r\n\t\telse strMsg = objMsg[0].MSG_CONT;\r\n\r\n\t\tif (args != undefined && args.hasOwnProperty('length')) {\r\n\t\t\tfor (var idx = 0; idx < args.length; idx++) {\r\n\t\t\t\tstrMsg = strMsg.replace(\"{\" + idx + \"}\", args[idx]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn strMsg;\r\n\t},\r\n\r\n\tsetServerInfos: () => {\r\n\t\tvar serverInfos = JSON.parse(localStorage.getItem(\"infos\"));\r\n\t\tif (serverInfos.prod.host == window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"P\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.prod.host + \":\" + serverInfos.prod.port);\r\n\t\t} else if (serverInfos.dev.host == window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"D\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.dev.host + \":\" + serverInfos.dev.port);\r\n\t\t\tdocument.title = \"AI-QA [dev]\";\r\n\t\t} else if (serverInfos.localbuild.host == window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"B\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.localbuild.host + \":\" + serverInfos.localbuild.port);\r\n\t\t\tdocument.title = \"AI-QA [local]\";\r\n\t\t} else {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"L\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", \"http://\" + serverInfos.local.host + \":\" + serverInfos.local.port);\r\n\t\t\tdocument.title = \"AI-QA [local]\";\r\n\t\t}\r\n\t},\r\n\r\n\tgetCentList: () => { //Type에 따라 Filtering?\r\n\t\treturn ComLib.getSession(\"gdsCentList\");\r\n\t},\r\n\tgetTeamList: (objDs) => { //Filtering 필요한 경우 추가\r\n\t\tlet arrTeamList = ComLib.getSession(\"gdsTeamList\");\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\")))\r\n\t\t\tarrTeamList = ComLib.getSession(\"gdsTeamList\").filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\treturn arrTeamList;\r\n\t},\r\n\tgetUserList: (objDs, blnActive) => { //Active Filtering\r\n\t\tif (ComLib.isNull(blnActive)) blnActive = true;\r\n\r\n\t\tlet arrUsrList = ComLib.getSession(\"gdsUserList\");\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\")))\r\n\t\t\tarrUsrList = arrUsrList.filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"TEAM_CD\")))\r\n\t\t\tarrUsrList = arrUsrList.filter(item => item.TEAM_CD === objDs.getValue(0, \"TEAM_CD\"));\r\n\t\tif (blnActive)\r\n\t\t\tarrUsrList = arrUsrList.filter(usr => usr.USE_YN === 'Y');\r\n\r\n\t\treturn arrUsrList;\r\n\t},\r\n};\r\n\r\nconst StrLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력값이 null에 해당하는 경우 모두를 한번에 체크한다]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t:\t1. sValue : 체크할 문자열 ( 예 : null 또는 undefined 또는 \"\" 또는 \"abc\" )\r\n\t\t\t\t\t2. sValue가 undefined, null, NaN, \"\", Array.length = 0인 경우 = true, 이외의 경우 false를 return한다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNull: (sValue) => {\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\t\tif (String(sValue).valueOf() === \"undefined\") return true;\r\n\t\tif (String(sValue).valueOf() === \"null\") return true;\r\n\t\tif (String(sValue).valueOf() === \"\") return true;\r\n\t\tif (sValue === null) return true;\r\n\t\tif (sValue === '') return true;\r\n\t\tif ((sValue === \"\") && (String(sValue.length).valueOf() === \"undefined\")) return true;\r\n\t\tif (sValue.length === 0) return true;\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4 )\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\t getPos: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.indexOf(sFind, nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.toLowerCase().indexOf(sFind.toLowerCase(), nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverse: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr(pos, sFind.length) === sFind) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverseCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr( pos, sFind.length ).toLowerCase() === sFind.toLowerCase()) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별하여 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxbbccxx\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplace: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return \"\";\r\n\t\tif (StrLib.isNull(sRepTo)) return \"\";\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPos(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별없이 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxxxccxx\" ) return\r\n\t\t\t\t\t   실패 => sOrg return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplaceCase: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return \"\";\r\n\t\tif (StrLib.isNull(sRepTo)) return \"\";\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPosCase(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [주민번호(7자리 이상)에서 성별 구분]\r\n\t* @param\t:\tstring sRrNo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sRrNo : 생년월일성별 또는 주민번호\r\n\t\t\t\t\t2. 성공 => 7번째 자리 번호 기준 남자 : 'M' / 여자 : 'F' return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetSexCd: (sRrNo) => {\r\n\t\tlet strRno = StrLib.getNumStr(sRrNo);\r\n\t\tif (strRno.length < 7) return '';\r\n\r\n\t\tlet strSexCd = \"\";\r\n\t\tif ((parseInt(strRno.substr(6, 1), 10)%2) === 0) strSexCd = \"F\";\r\n\t\telse strSexCd = \"M\";\r\n\r\n\t\treturn strSexCd;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [왼쪽에 문자열 추가]\r\n\t* @param\t:\tstring sOrg, integer nTotLen, string sPad\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열 ( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. nCnt : Pad할 총 길이 ( 예 : 7)\r\n\t\t\t\t\t3. sPad : Pad할 문자열 (옵션 : Default=\" \") ( 예 : \"aa\" )\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"abbccCC\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLPad: (sOrg, nTotLen, sPad) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(nTotLen)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\r\n\t\tlet sRet = \"\";\r\n\t\tlet nPadLen = nTotLen - sOrg.length;\r\n\t\tif (nPadLen <= 0) {\r\n\t\t\treturn sOrg;\r\n\t\t} else {\r\n\t\t\twhile (1) {\r\n\t\t\t\tif (nPadLen >= sPad.length) {\r\n\t\t\t\t\tsRet += sPad;\r\n\t\t\t\t\tnPadLen -= sPad.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (nPadLen > 0) sRet += sPad.substr(0, nPadLen);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sRet + sOrg;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [오른쪽에 문자열 추가]\r\n\t* @param\t:\tString sOrg, integer nTotLen, String sPad\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열 ( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. nTotLen : Pad할 총 길이 ( 예 : 7 )\r\n\t\t\t\t\t3. sPad : Pad할 문자열 (옵션 : Default=\" \")( 예 : \"aa\" )\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"bbccCCaa\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRPad:(sOrg, nTotLen, sPad) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(nTotLen)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\r\n\t\tlet sRet = \"\";\r\n\t\tlet nPadLen = nTotLen - sOrg.length;\r\n\t\tif (nPadLen <= 0) {\r\n\t\t\treturn sOrg;\r\n\t\t} else {\r\n\t\t\twhile (1) {\r\n\t\t\t\tif (nPadLen >= sPad.length) {\r\n\t\t\t\t\tsRet += sPad;\r\n\t\t\t\t\tnPadLen -= sPad.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (nPadLen > 0) sRet += sPad.substr(0, nPadLen);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sOrg + sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 오른쪽에서 nSize만큼의 문자열을 가져온다]\r\n\t* @param\t:\tstring sOrg, integer nSize\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. nSize : 가져올문자열 길이 ( 예 : 2 )\r\n\t\t\t\t\t3. 성공 => 오른쪽에서 nSize만큼의 문자열 ( 예 : \"cc\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note\t\t:\tsOrg의 길이가 nSize보다 작은경우는 sOrg가 Return된다.\r\n\t\t\t\t\t( 예 : sOrg=\"a\", nSize=2 ===> return = \"a\" )\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRight: (sOrg, nSize) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(nSize)) return \"\";\r\n\t\tif (sOrg.length < nSize) return sOrg;\r\n\t\telse return sOrg.substr(sOrg.length - nSize, nSize);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 2Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 7 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLenB: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 2;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 3Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 9 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLen3B: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 3;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [전각문자를 반각문자로]\r\n\t* @reference:\t전각문자는 \"정사각형\" 안에 들어가는 문자이고, 반각은 그 정사각형의 반쪽에 들어가는 문자이다.\r\n\t\t\t\t\t전각문자의 폭은, 반각문자의 2배입니다.\r\n\t\t\t\t\t예를 들어 숫자 \"3\" 은, 한글 \"가\"의 절반의 폭만을 가지고 있습니다.\r\n\t\t\t\t\t그래서 영문과 숫자 등은 반각이고, 한글이나 한자들은 전각문자입니다.\r\n\t\t\t\t\t다만, 영문과 숫자를 전각으로 표현할 수도 있습니다.\r\n\t\t\t\t\t(예 : 전각문자 ===> ※★０＋\r\n\t\t\t\t\t\t반각문자 ===> 1a )\r\n\t* @param\t:\tstring sFull\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sFull : 전각문자( 예 : \"０＋\" )\r\n\t\t\t\t\t2. 성공 => 반각문자 ( 예 : \"0+\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetFull2Half: (sFull) => {\r\n\t\tif (StrLib.isNull(sFull)) return \"\";\r\n\r\n\t\tlet sHalf = \"\";\r\n\t\tfor (var i = 0; i < sFull.length; i++) {\r\n\t\t\tlet c = sFull.charCodeAt(i);\r\n\t\t\tif (c === 12288) sHalf += unescape(\"%20\");\r\n\t\t\telse if ((c >= 65281) && (c <= 65374)) sHalf += unescape(\"%\"+(c-65248).toString(16));\r\n\t\t\telse sHalf += sFull.charAt(i);\r\n\t\t}\r\n\t\treturn  sHalf;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [반각문자를 전각문자로]\r\n\t* @param\t:\tstring sHalf\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sHalf : 반각문자( 예 : \"0+\" )\r\n\t\t\t\t\t2. 성공 => 전각문자 ( 예 : \"０＋\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetHalf2Full: (sHalf) => {\r\n\t\tif (StrLib.isNull(sHalf)) return \"\";\r\n\r\n\t\tlet rTmp = \"\";\r\n\t\tlet iTmp = \"\";\r\n\t\tfor (var i = 0; i < sHalf.length; i++ ) {\r\n\t\t\t//기본 아스키 코드 값을 벗어난 경우(한글)는 전자로 변환할 필요 없음.\r\n\t\t\tif ((sHalf.charCodeAt(i) >= 32) && (sHalf.charCodeAt(i) <= 126)) {\r\n\t\t\t\tif (sHalf.charCodeAt(i) === 32) iTmp = unescape(\"%u\"+(12288).toString(16));\r\n\t\t\t\telse iTmp = sHalf.charCodeAt(i) + 65248;\r\n\t\t\t} else {\r\n\t\t\t\tiTmp = sHalf.charCodeAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (sHalf.charCodeAt(i) === 32) rTmp = rTmp + (iTmp);\r\n\t\t\telse rTmp += String.fromCharCode(iTmp);\r\n\t\t}\r\n\r\n\t\treturn rTmp;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 숫자형식에 맞는지 여부 체크]\r\n\t* @param\t:\tString sNum\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sNum : 체크할 문자열숫자 ( 예 : \"-1234.56\" ) (단, \",\"가 들어있으면 안 됨)\r\n\t\t\t\t\t2. 숫자형식에 맞는경우 => true return\r\n\t\t\t\t\t   숫자형식에 맞지않는 경우 => false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNum: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return false;\r\n\r\n\t\tlet point_cnt = 0;\r\n\t\tlet ret = true;\r\n\t\tfor (var i = 0; i < sNum.length; i++) {\r\n\t\t\tvar c = sNum.charAt(i);\r\n\t\t\tif (i === 0 && (c === \"+\" || c === \"-\"));\r\n\t\t\telse if (c >= \"0\" && c <= \"9\");\r\n\t\t\telse if (c === \".\") {\r\n\t\t\t\tpoint_cnt++;\r\n\t\t\t\tif (point_cnt > 1) {\r\n\t\t\t\t\tret = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tret = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z)만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ\" )\r\n\t\t\t\t\t2. 알파벳만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlpha: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z), 숫자만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ09\" )\r\n\t\t\t\t\t2. 알파벳, 숫자만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳, 숫자가 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlNum: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z0-9]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 한글로만 구성되어 있는지 체크]\r\n\t* @param\t: String sVal\r\n\t* @return\t: boolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"가나다\" )\r\n\t\t\t\t\t2. 한글만 있는경우 = true return,\r\n\t\t\t\t\t한글이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisKor: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tfor (var i = 0; i < sVal.length; i++ ) {\r\n\t\t\tif (!((sVal.charCodeAt(i) > 0x3130 && sVal.charCodeAt(i) < 0x318F) || (sVal.charCodeAt(i) >= 0xAC00 && sVal.charCodeAt(i) <= 0xD7A3))) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열 Trim 함수]\r\n\t* @param\t:\tstring args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. args : trim 할 값\r\n\t\t\t\t\t2. 성공 => trim String return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTrim: (arg) => {\r\n\t\tvar str = new String(arg);\r\n\t\tif (str === null || str === \"null\") return \"\";\r\n\t\tif (new String(str).valueOf() === \"undefined\") return \"\";\r\n\t\tif (new String(str) == null) return \"\";\r\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열에서 숫자만 추출한다.]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. sValue : 추출대상 ( 예 : '2020-09-02' )\r\n\t\t\t\t\t2. 성공 => '20200902' return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetNumStr: (sValue) => {\r\n\t\tif (StrLib.getTrim(sValue) === \"\") return \"\";\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\r\n\t\tvar sResult = \"\";\r\n\t\tvar sNum = \"0123456789\";\r\n\t\tfor (var i = 0; i<sValue.length; i++) {\r\n\t\t\tif (sNum.indexOf(sValue.charAt(i)) > -1) sResult += sValue.charAt(i);\r\n\t\t}\r\n\t\treturn sResult;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [숫자에 \",\"를 집어넣기]\r\n\t* @param\t:\tstring sNum\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sNum : 숫자 형식의 문자열 ( 예 : '-1234567.89' )\r\n\t\t\t\t\t2. 성공 => \",\"가 들어간 문자열 ( 예 : -1,234,567.89 ) return,\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetComma: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return \"\";\r\n\t\tif (!StrLib.isNum(sNum)) return \"\";\r\n\r\n\t\tvar nEnd, nStart = 0, sRet = \"\";\r\n\t\tsNum = StrLib.getTrim(sNum);\r\n\r\n\t\tif (sNum.charAt(0) === \"+\" || sNum.charAt(0) === \"-\") {\r\n\t\t\tsRet += sNum.charAt(0);\r\n\t\t\tnStart = 1;\r\n\t\t}\r\n\r\n\t\tvar ppos = StrLib.getPos(sNum, \".\", nStart);\r\n\t\tif (ppos < 0) nEnd = sNum.length;\r\n\t\telse nEnd = ppos;\r\n\r\n\t\tvar sDigit = sNum.substr(nStart, nEnd-nStart);\r\n\t\tfor (var pos = 0; pos < sDigit.length; pos ++ ) {\r\n\t\t\tif ( pos !== 0 && (sDigit.length-pos)%3 === 0) sRet += \",\";\r\n\t\t\tsRet += sDigit.charAt(pos);\r\n\t\t}\r\n\r\n\t\tsRet += sNum.substr(nEnd);\r\n\t\treturn sRet;\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Array에 있는 값들을 Distinct(중복제거)한다]\r\n\t* @param\t:\tarray aOrg\r\n\t* @return\t:\tarray\r\n\t* @see\t\t: \t1. aOrg : 중복을 제거할 원래 Array ( 예 : (1,1,2,2,3,4,5) )\r\n\t\t\t\t\t2. 성공 => 중복이 제거된 Array ( 예 : (1,2,3,4,5) ) return,\r\n\t\t\t\t\t   실패 => 빈 Array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDistinct: (aOrg) => {\r\n\t\tvar aDist = new Array();\r\n\t\tif (StrLib.isNull(aOrg)) return aDist;\r\n\r\n\t\tfor (var i = 0; i < aOrg.length; i++) {\r\n\t\t\tvar vDist = aOrg[i];\r\n\t\t\tvar flag = false;\r\n\t\t\tfor (var j = 0; j < aDist.length; j++) {\r\n\t\t\t\tif (\"x\" + aDist[j] === \"x\" + vDist) {\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag === false) aDist[aDist.length] = vDist;\r\n\t\t}\r\n\t\treturn aDist;\r\n\t}\r\n};\r\n\r\nconst FileLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [File Path 문자열(예 : C:\\a\\b\\filename.ext)에서 File명(예 : filename)을 추출]\r\n\t* @param\t: string sPath, boolean bExt\r\n\t* @return\t: string\r\n\t* @see\t\t: \t1. sPath   - File Path 문자열 (예 : \"C:\\a\\b\\filename.ext\")\r\n\t\t\t\t\t2. bExt    - extend를 return되는 File명에 포함시킬지 여부 ( 옵션 : Default=false )\r\n\t\t\t\t\t\t\t\t- true \t: extend를 File명에 포함시킴\r\n\t\t\t\t\t\t\t\t- false : extend를 File명에 포함시키지 않음\r\n\t\t\t\t\t2. 성공 =\r\n\t\t\t\t\t\t\t- bExt = true인 경우 ===> sPath에서 File명(예 : \"filename.ext\") return\r\n\t\t\t\t\t\t\t- bExt = false인 경우 ===> sPath에서 File명(예 : \"filename\") return\r\n\t\t\t\t\t실패 = \"\" return\r\n\r\n\tgetFileName : ( sPath, bExt ) => {\r\n\t\tlet start_pos, end_pos, tmp_pos, filename;\r\n\r\n\t\tif( StrLib.isNull(sPath) )\t\treturn \"\";\r\n\t\tif( StrLib.isNull(bExt) )\r\n\t\t\tbExt = false;\r\n\r\n\t\tstart_pos = Math.max(StrLib.getPosReverse( sPath, \"\\\\\" ), StrLib.getPosReverse( sPath, \"/\" ));\r\n\t\ttmp_pos = StrLib.getPosReverse( sPath, \"::\");\r\n\t\tif( tmp_pos > 0 ) tmp_pos++;\r\n\t\tstart_pos = Math.max( start_pos, tmp_pos );\r\n\t\tif( bExt === false ) {\r\n\t\t\tend_pos = StrLib.getPosReverse( sPath, \".\" );\r\n\t\t\tif( end_pos < 0 )\r\n\t\t\t\tend_pos = sPath.length;\r\n\t\t\tfilename = sPath.substr( start_pos+1, end_pos-start_pos-1 );\r\n\t\t} else {\r\n\t\t\tfilename = sPath.substr( start_pos+1 );\r\n\t\t}\r\n\r\n\t\treturn filename;\r\n\t}\r\n\t*--------------------------------------------------------------------------------------*/\r\n};\r\nconst ExcelLib = {\r\n\tExportToExcel : (header, data, rtn) => {\r\n\t\tif (rtn) {\r\n\t\t\tlet fileName = 'excel.xls';\r\n\t\t\tlet excelComponent = document.createElement('a');\r\n\t\t\texcelComponent.setAttribute('id', '_aExcelExport');\r\n\t\t\texcelComponent.setAttribute('download', fileName);\r\n\t\t\texcelComponent.setAttribute('style', \"display:none\");\r\n\t\t\texcelComponent.setAttribute('href', \"data:application/vnd.ms-excel;base64,\" + ExcelLib.base64(ExcelLib.Export(ExcelLib.ConvertDataStructureToTable(header, data))));\r\n\t\t\tdocument.getElementById('root').appendChild(excelComponent);\r\n\r\n\t\t\tdocument.getElementById('_aExcelExport').click();\r\n\t\t\tdocument.getElementById('root').removeChild(document.getElementById('_aExcelExport'));\r\n\t\t}\r\n\t},\r\n\tConvertDataStructureToTable : (header, data) => {\r\n\t\tlet result;\r\n\t\ttry {\r\n\t\t\tresult = \"<table>\";\r\n\t\t\tresult += \"<thead><tr>\";\r\n\t\t\theader.forEach(item => {\r\n\t\t\t\tresult += \"<th style='text-align: center;'>\";\r\n\t\t\t\tresult += item.headerName;\r\n\t\t\t\tresult += \"</th>\";\r\n\t\t\t});\r\n\t\t\tresult += \"</tr></thead>\";\r\n\t\t\tresult += \"<tbody>\";\r\n\t\t\tdata.forEach(item => {\r\n\t\t\t\tresult += \"<tr>\";\r\n\t\t\t\theader.forEach(head => {\r\n\t\t\t\t\tif (item.hasOwnProperty(head['field'])) {\r\n\t\t\t\t\t\t// 데이터 미 존재시 null로 찍히는걸 방지\r\n\t\t\t\t\t\tif (item[head['field']] == null ) { item[head['field']] = ''; }\r\n\t\t\t\t\t\t// Gird에 날짜 형식이 지정되어 있을때 format형식을 변경\r\n\t\t\t\t\t\t// if (settings.columns[k].format != null) {\r\n\t\t\t\t\t\t// \tif (settings.columns[k].format == 'yyyymmddhhmiss') {\r\n\t\t\t\t\t\t// \t\tvalue[this.field] = value[this.field].replace(/-|:| /gi, '');\r\n\t\t\t\t\t\t// \t\tvalue[this.field] = Date.fromString(value[this.field], settings.columns[k].format).asString('yyyy-mm-dd hh:mi:ss');\r\n\t\t\t\t\t\t// \t} else if (settings.columns[k].format == 'yyyymmdd') {\r\n\t\t\t\t\t\t// \t\tvalue[this.field] = value[this.field].replace(/-|:| /gi, '');\r\n\t\t\t\t\t\t// \t\tvalue[this.field] = Date.fromString(value[this.field], settings.columns[k].format).asString('yyyy-mm-dd');\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\tif (head['width'] !== undefined && head['width'] !== null && head['width'] !== '') {\r\n\t\t\t\t\t\t\tresult += \"<td style='width: \" + head['width'] + \"px;'>\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tresult += \"<td>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresult += item[head['field']];\r\n\t\t\t\t\t\tresult += \"</td>\";\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tresult += \"</tr>\";\r\n\t\t\t});\r\n\t\t\tresult += \"</tbody>\";\r\n\t\t\tresult += \"</table>\";\r\n\t\t\treturn result;\r\n\t\t} finally {\r\n\t\t\tresult = null;\r\n\t\t}\r\n\t},\r\n\tExport : (htmltable) => {\r\n\t\ttry {\r\n\t\t\tvar excelFile = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>\";\r\n\t\t\texcelFile += \"<head>\";\r\n\t\t\texcelFile += '<meta http-equiv=\"Content-type\" content=\"text/html;charset=utf-8\" />';\r\n\t\t\texcelFile += \"<!--[if gte mso 9]>\";\r\n\t\t\texcelFile += \"<xml>\";\r\n\t\t\texcelFile += \"<x:ExcelWorkbook>\";\r\n\t\t\texcelFile += \"<x:ExcelWorksheets>\";\r\n\t\t\texcelFile += \"<x:ExcelWorksheet>\";\r\n\t\t\texcelFile += \"<x:Name>\";\r\n\t\t\texcelFile += \"{worksheet}\";\r\n\t\t\texcelFile += \"</x:Name>\";\r\n\t\t\texcelFile += \"<x:WorksheetOptions>\";\r\n\t\t\texcelFile += \"<x:DisplayGridlines/>\";\r\n\t\t\texcelFile += \"</x:WorksheetOptions>\";\r\n\t\t\texcelFile += \"</x:ExcelWorksheet>\";\r\n\t\t\texcelFile += \"</x:ExcelWorksheets>\";\r\n\t\t\texcelFile += \"</x:ExcelWorkbook>\";\r\n\t\t\texcelFile += \"</xml>\";\r\n\t\t\texcelFile += \"<![endif]-->\";\r\n\t\t\texcelFile += \"</head>\";\r\n\t\t\texcelFile += \"<body>\";\r\n\t\t\texcelFile += htmltable.replace(/\"/g, '\\'');\r\n\t\t\texcelFile += \"</body>\";\r\n\t\t\texcelFile += \"</html>\";\r\n\r\n\t\t\tvar ctx = { worksheet: 'My Worksheet', table: htmltable };\r\n\t\t\tvar rtn = (ExcelLib.format(excelFile, ctx));\r\n\t\t\treturn  rtn;\r\n\t\t} finally {\r\n\t\t\trtn = null;\r\n\t\t}\r\n\t},\r\n\tformat : (s, c) => {\r\n\t\treturn s.replace(/{(\\w+)}/g, function (m, p) { return c[p]; });\r\n\t},\r\n\tbase64 : (s) => {\r\n\t\treturn window.btoa(unescape(encodeURIComponent(s)));\r\n\t}\r\n};\r\nconst DateLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 숫자로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => 마지막 날짜 숫자값 ( 예 : 30 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDateNum: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tlet nMonth, nLastDate;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return -1;\r\n\r\n\t\tnMonth = parseInt(sDate.substr(4,2), 10);\r\n\t\tif (nMonth === 1 || nMonth === 3 || nMonth === 5 || nMonth === 7  || nMonth === 8 || nMonth === 10 || nMonth === 12 ) {\r\n\t\t\tnLastDate = 31;\r\n\t\t} else if (nMonth === 2) {\r\n\t\t\tif ( DateLib.isLeapYear(sDate) === true ) nLastDate = 29;\r\n\t\t\telse nLastDate = 28;\r\n\t\t} else {\r\n\t\t\tnLastDate = 30;\r\n\t\t}\r\n\t\treturn nLastDate;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [윤년여부 확인]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sDate가 윤년인 경우\t\t\t=> true return\r\n\t\t\t\t\t   sDate가 윤년이 아닌 경우\t\t=> false return\r\n\t\t\t\t\t   sDate가 입력되지 않은 경우\t=> false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisLeapYear: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tlet ret, nY;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return false;\r\n\r\n\t\tnY = parseInt(sDate.substring(0,4), 10);\r\n\t\tif ((nY % 4) === 0) {\r\n\t\t\tif ((nY % 100) !== 0 || (nY % 400) === 0) ret = true;\r\n\t\t\telse ret = false;\r\n\t\t} else {\r\n\t\t\tret = false;\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 yyyyMMdd형태로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => yyyyMMdd형태의 마지막 날짜 ( 예 : \"20121130\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDate: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tif (StrLib.isNull(sDate)) return \"\";\r\n\t\tlet nLastDate = DateLib.getLastDateNum(sDate);\r\n\t\treturn sDate.substr(0,6) + nLastDate.toString();\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 일을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 일 증감값 ( 예 : 10 또는 -10 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121112\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddDate: (sDate, nOffset) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\r\n\t\tlet nYear\t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth\t= parseInt(sDate.substr(4, 2));\r\n\t\tlet nDate\t= parseInt(sDate.substr(6, 2)) + nOffset;\r\n\r\n\t\tlet objDate = new Date(nYear, nMonth - 1, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tlet sDay\t= StrLib.getRight(\"0\", objDate.getDate(), 2);\r\n\r\n\t\treturn sYear + sMonth + sDay;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 월을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 월 증감값 ( 예 : 1 또는 -1 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121022\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note  \t:\t단, 증감된 날짜가 그달의 마지막 날짜 월보다 큰 경우 그달의 마지막 날짜를 return한다.\r\n\t\t\t\t\t예를 들어, sDate=\"20120531\", nOffset=-1일 경우 return=\"20120430\" 이 된다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddMonth: (sDate, nOffset) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\t\tsDate = StrLib.getTrim(sDate);\r\n\r\n\t\tlet nYear \t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth \t= parseInt(sDate.substr(4, 2)) + nOffset;\r\n\t\tlet nDate \t= parseInt(sDate.substr(6, 2));\r\n\r\n\t\tlet nLastDate, sRet;\r\n\t\tlet objDate = new Date(nYear, nMonth, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getLPad(objDate.getMonth().toString(), 2, '0');\r\n\t\tlet sDay\t= StrLib.getLPad(objDate.getDate().toString(), 2, '0');\r\n\t\tif (sMonth === '00') {\r\n\t\t\tsYear = (parseInt(sYear) - 1).toString();\r\n\t\t\tsMonth = '12';\r\n\t\t}\r\n\t\tsRet = sYear + sMonth + sDay;\r\n\r\n\t\tlet nsDate \t= parseInt(sRet.substr(6, 2));\r\n\t\tnLastDate = DateLib.getLastDateNum(sRet);\r\n\t\tsRet = sRet.substr(0,6);\r\n\r\n\t\tif (nsDate > nLastDate) sRet += nLastDate.toString();\r\n\t\telse sRet += (StrLib.getRight(\"0\" + nsDate, 2)).toString();\r\n\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜를 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMdd형태의 오늘 날짜 ( 예 : \"20121122\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetToday: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜 + 시간을 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMddhhmiss형태의 오늘 날짜 ( 예 : \"20121122223010\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTodayTime: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getHours(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getMinutes(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getSeconds(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 일자간의 차이 일수 계산]\r\n\t* @param\t: \ttring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20121202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이일수  ( 예 : 10 )  return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다\r\n\t\t\t\t\t   실패 => return NaN\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffDate: (sStartDate, sEndDate) => {\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return NaN;\r\n\r\n\t\tlet vFromDate = new Date(parseInt(sEndDate.substring(0,4),  10), parseInt(sEndDate.substring(4,6)-1,  10), parseInt(sEndDate.substring(6,8), 10));\r\n\t\tlet vToDate = new Date(parseInt(sStartDate.substring(0,4),  10), parseInt(sStartDate.substring(4,6)-1,  10), parseInt(sStartDate.substring(6,8), 10));\r\n\r\n\t\treturn parseInt((vFromDate - vToDate) / (1000 * 60 * 60 * 24));\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 월간의 차이 월수 계산]\r\n\t* @param\t:\tstring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20131202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이월수  ( 예 : 10 ) return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다.\r\n\t\t\t\t\t   실패 => NaN return\r\n\t* @note\t\t:\t단, sStartDate, sEndDate의 일은 포함하지 않고 계산된다\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffMonth: (sStartDate, sEndDate) => {\r\n\t\tlet nStartMon, nEndMon;\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return NaN;\r\n\r\n\t\tnStartMon = parseInt(sStartDate.substr(0, 4), 10) * 12 + parseInt(sStartDate.substr(4, 2), 10);\r\n\t\tnEndMon = parseInt(sEndDate.substr(0, 4), 10) * 12 + parseInt(sEndDate.substr(4, 2), 10);\r\n\r\n\t\treturn (nEndMon - nStartMon);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [date => string]\r\n\t* @param\t:\tdate objDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. objDate : Date Object\r\n\t\t\t\t\t2. 성공 => yyyyMMdd 형태의 날짜 문자열 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetStringDate: (objDate) => {\r\n\t\tif (StrLib.isNull(objDate)) return '';\r\n\r\n\t\tlet year = objDate.getFullYear();\r\n\t\tlet month = StrLib.getLPad((1 + objDate.getMonth()).toString(), 2, '0');\r\n\t\tlet day = StrLib.getLPad((objDate.getDate()).toString(), 2, '0');\r\n\r\n\t\treturn year + month + day;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [string => date]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tdate\r\n\t* @see\t\t:\t1. sDate : yyyyMMdd 형태의 날짜 문자열\r\n\t\t\t\t\t2. 성공 => Date Object 형태로 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDateYymmdd: (sDate) => {\r\n\t\tif (StrLib.isNull(sDate)) return '';\r\n\t\tif (sDate.length === 8) return new Date(parseInt(sDate.substring(0, 4)), parseInt(sDate.substring(4, 6)) - 1, parseInt(sDate.substring(6, 8)));\r\n\t\telse return '';\r\n\t},\r\n};\r\n\r\nconst DataLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Value를 Dataset Objec 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, integer nRowIndex, string, strColumnId, string strValue\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin')\r\n\t\t\t\t\t3. nRowIndex : 변경 Value의 Target Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 Value의 Target Column ID ( 예 : 'USR_CD')\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetValueToDs: (prevState, strDatasetId, nRowIndex, strColumnId, strValue) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setValue(nRowIndex, strColumnId, strValue);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Record를 Dataset Object 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Dataset Record를 Initialize]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tinitRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.initRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\tdatalist: {\r\n\t\trecords: [],\r\n\t\torgrecords: [],\r\n\t\theader: {},\r\n\t\tsize: function() {return this.records.length;},\r\n\t\tgetRecords: function() {\r\n\t\t\treturn JSON.parse(JSON.stringify(this.records));\r\n\t\t},\r\n\t\tgetTransRecords: function() {\r\n\t\t\tvar arrRecords = JSON.parse(JSON.stringify(this.records));\r\n\t\t\tvar arrOrgRecs = this.orgrecords;\r\n\r\n\t\t\tfor (var idxA = 0; idxA < arrRecords.length; idxA++) {\r\n\t\t\t\tfor (var idxB = 0; idxB < arrOrgRecs.length; idxB++) {\r\n\t\t\t\t\tif (arrRecords[idxA].recid === arrOrgRecs[idxB].recid) arrRecords[idxA].orgdata = arrOrgRecs[idxB];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arrRecords;\r\n\t\t},\r\n\t\tsetRecords: function(records) {\r\n\t\t\tthis.records = records;\r\n\t\t},\r\n\t\tappendRecords: function(records) {\r\n\t\t\tthis.records = this.records.concat(records);\r\n\t\t\tthis.orgrecords = this.orgrecords.concat(JSON.parse(JSON.stringify(records)));\r\n\t\t},\r\n\t\tinitRecords: function(records) {\r\n\t\t\trecords = records || {};\r\n\t\t\tif (records.length != undefined) {\r\n\t\t\t\tthis.initialize(records);\r\n\t\t\t\tthis.records = records;\r\n\t\t\t\tthis.orgrecords = JSON.parse(JSON.stringify(records));\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValue: function(index, column) {return this.records[index][column];},\r\n\t\tsetValue: function(index, column, value) {\r\n\t\t\tthis.records[index][column] = value;\r\n\t\t\tvar recid = this.records[index].recid;\r\n\t\t\tif (this.records[index].rowtype != 'c' && this.records[index].rowtype != 'd') {\r\n\t\t\t\tfor (var idx = 0; idx < this.orgrecords.length; idx++) {\r\n\t\t\t\t\tif (this.orgrecords[idx].recid === recid) {\r\n\t\t\t\t\t\tif (this.orgrecords[idx][column] === value) this.records[index].rowtype = \"r\";\r\n\t\t\t\t\t\telse if (this.orgrecords[idx][column] !== value) this.records[index].rowtype = \"u\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueByRecId: function(recid, column) {return this.records[this.indexOf(\"recid\", recid)][column];},\r\n\t\tsetValueByRecId: function(recid, column, value) {\r\n\t\t\tvar index = this.indexOf(\"recid\", recid);\r\n\t\t\tthis.records[index][column] = value;\r\n\t\t\tif (this.records[index].rowtype != 'c' && this.records[index].rowtype != 'd') {\r\n\t\t\t\tfor (var idx = 0; idx < this.orgrecords.length; idx++) {\r\n\t\t\t\t\tif (this.orgrecords[idx].recid === recid) {\r\n\t\t\t\t\t\tif (this.orgrecords[idx][column] === value) this.records[index].rowtype = \"r\";\r\n\t\t\t\t\t\telse if (this.orgrecords[idx][column] !== value) this.records[index].rowtype = \"u\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\taddRow: function() {\r\n\t\t\tthis.records.push(this.header);\r\n\t\t\t//this.records[this.size()-1]['recid'] = this.size();\r\n\t\t\tthis.records[this.size()-1]['rowtype'] = 'c';\r\n\t\t\treturn this.size() - 1;\r\n\t\t},\r\n\t\tgetRow: function(index) {\r\n\t\t\tif (this.records.length > 0) return JSON.parse(JSON.stringify([this.records[index]]));\r\n\t\t\telse return [];\r\n\t\t},\r\n\t\tindexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = 0; i < this.records.length; i++) {\r\n\t\t\t\tif (this.records[i][column] == value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tlastIndexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = this.records.length; i >=0; i--) {\r\n\t\t\t\tif (this.records[i][column] == value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tfind: function(column, value) {\r\n\t\t\treturn this.records.filter((new Function(`return obj => obj.${column}=='${value}'`))());\r\n\t\t},\r\n\t\tfindFirst: function(column, value) {\r\n\t\t\treturn this.getRow(this.indexOf(column, value));\r\n\t\t},\r\n\t\tfindLast: function(column, value) {\r\n\t\t\treturn this.getRow(this.lastIndexOf(column, value));\r\n\t\t},\r\n\t\tfilter: function(filterexpr) {\r\n\t\t\treturn this.records.filter((new Function(`return ds => ${filterexpr}`))());\r\n\t\t},\r\n\t\tlookup: function(column, value, target) {\r\n\t\t\tvar record = this.findFirst(column, value);\r\n\t\t\treturn record == undefined ? undefined : record[target];\r\n\t\t},\r\n\t\tisUpdated: function() {\r\n\t\t\tif (this.records.filter(obj => obj.rowtype != 'r').length > 0) return true;\r\n\t\t\telse return false;\r\n\t\t},\r\n\t\tinitialize: function(records) {\r\n\t\t\tfor (var idx = 0; idx < records.length; idx++) {\r\n\t\t\t\tif (!records[idx].hasOwnProperty(\"recid\")) records[idx].recid = idx + 1;\r\n\t\t\t\tif (!records[idx].hasOwnProperty(\"rowtype\")) records[idx].rowtype = 'r';\r\n\t\t\t}\r\n\r\n\t\t\tvar arrCol = Object.keys(records[0]);\r\n\t\t\tfor (var idx = 0; idx < arrCol.length; idx++) {\r\n\t\t\t\tthis.header[arrCol[idx]] = \"\";\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetInstance: function(props) {\r\n\t\t\tprops = props || {};\r\n\t\t\tif (props.length != undefined) {\r\n\t\t\t\tthis.initialize(props);\r\n\t\t\t\tprops = {records: props, orgrecords: JSON.parse(JSON.stringify(props))};\r\n\t\t\t}\r\n\t\t\treturn _.assign({}, DataLib.datalist, props);\r\n\t\t},\r\n\t}\r\n};\r\n\r\nclass TransManager {\r\n\tconstructor() {\r\n\t\tthis.id = '';\r\n\t\tthis.url = '';\r\n\t\tthis.callback = null;\r\n\t\tthis.beforeSend = null;\r\n\t\tthis.erorr = null;\r\n\t\tthis.timeout = (1000 * 30);\r\n\t\tthis.async = true;\r\n\t\tthis.asyncdata = null;\r\n\t\tthis.dataType = 'json';\r\n\t\tthis.contentType = 'application/json';\r\n\t\tthis.progress = true;\r\n\t\tthis.constants = {\r\n\t\t\turl: {\r\n\t\t\t\tcommon: '/json.service.do',\r\n\t\t\t\tupload: '/upload.service.do',\r\n\t\t\t},\r\n\t\t\terrorcode: {\r\n\t\t\t\tSUCCESS: '0',\r\n\t\t\t\tERROR: '-2',\r\n\t\t\t\tUPLOADFAIL: '-3'\r\n\t\t\t},\r\n\t\t\tsystemid: {\r\n\t\t\t},\r\n\t\t\tcrudh: {\r\n\t\t\t\tcreate: '0',\r\n\t\t\t\tread: '1',\r\n\t\t\t\tupdate: '2',\r\n\t\t\t\tdestroy: '3',\r\n\t\t\t\tprocedure: '4',\r\n\t\t\t\thandle: '5',\r\n\t\t\t\tsequence: '6',\r\n\t\t\t\titerator: '7',\r\n\t\t\t\tbatch: '8',\r\n\t\t\t\tdir: '9',\r\n\t\t\t\tpasswd: '10',\r\n\r\n\t\t\t\tdataset: 'ds_config'\r\n\t\t\t},\r\n\t\t\tdao: {\r\n\t\t\t\tbase: '0'\r\n\t\t\t},\r\n\t\t\tconfig: {\r\n\t\t\t\tdao: '',\r\n\t\t\t\tcrudh: '',\r\n\t\t\t\tsqlmapid: '',\r\n\t\t\t\tdatasetmap: '',\r\n\t\t\t\tdatasetsend: '',\r\n\t\t\t\tdatasetrecv: '',\r\n\t\t\t\tcolumnid: '',\r\n\t\t\t\tsystemid: '',\r\n\t\t\t\tretry: 0\r\n\t\t\t},\r\n\t\t\taccessToken: '',\r\n\t\t\tcontentType: {\r\n\t\t\t\tupload: 'multipart/form-data',\r\n\t\t\t\tjson: 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.transdata = {\r\n\t\t\tepytwor: newScrmObj.constants.crud,\r\n\t\t\tgifnoc: [],\r\n\t\t\tdatasets: {},\r\n\t\t\treyolpme: { \"CENT_CD\": \"\", \"TEAM_CD\": \"\", \"USR_CD\" : \"\", \"AUTH_LV\": \"\", \"CONN_IP\": \"\" },\r\n\t\t\tnoisivid: ComLib.getSession(\"SYSTEM_DV\"),\r\n\t\t};\r\n\t\tthis.datatype = {\r\n\t\t\thtml: 'html',\r\n\t\t\tjson: 'json',\r\n\t\t\tscript: 'script',\r\n\t\t\txml: 'xml'\r\n\t\t};\r\n\t};\r\n\tinitialize = () => {\r\n\t\tthis.transdata.epytwor = newScrmObj.constants.crud;\r\n\t\tthis.transdata.gifnoc = [];\r\n\t\tthis.transdata.reyolpme = { \"CENT_CD\": \"\", \"TEAM_CD\": \"\", \"USR_CD\" : \"\", \"AUTH_LV\": \"\", \"CONN_IP\": \"\" };\r\n\t\tthis.transdata.datasets = {};\r\n\t\tthis.setAccessToken(ComLib.getSession('accessToken'));\r\n\t};\r\n\tsetReyolpme = () => {\r\n\t\tvar reyolpme = this.transdata.reyolpme;\r\n\t\tif (sessionStorage.getItem(\"gdsUserInfo\") != null) {\r\n\t\t\tvar arrUser = ComLib.getSession(\"gdsUserInfo\");\r\n\t\t\treyolpme = {\r\n\t\t\t\t\"CENT_CD\": arrUser[0][\"CENT_CD\"],\r\n\t\t\t\t\"TEAM_CD\": arrUser[0][\"TEAM_CD\"],\r\n\t\t\t\t\"USR_CD\" : arrUser[0][\"USR_CD\"],\r\n\t\t\t\t\"AUTH_LV\": arrUser[0][\"AUTH_LV\"],\r\n\t\t\t\t\"CONN_IP\": arrUser[0][\"CONN_IP\"],\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn reyolpme;\r\n\t};\r\n\tsetTransUrl = (url) => {\r\n\t\tthis.url = url;\r\n\t\tif (this.constants.url.common === url) this.contentType = this.constants.contentType.json;\r\n\t\telse if (this.constants.url.upload === url) this.contentType = this.constants.contentType.upload;\r\n\t};\r\n\tsetBeforeSend = (beforeSend) => {\r\n\t\tthis.beforeSend = beforeSend;\r\n\t};\r\n\tsetTransId = (transId) => {\r\n\t\tthis.initialize();\r\n\t\tthis.id\t= transId;\r\n\t\tthis.transdata.reyolpme = this.setReyolpme();\r\n\t};\r\n\tsetCallBack = (callback) => {\r\n\t\tthis.callback\t= callback;\r\n\t};\r\n\tsetError = (error) => {\r\n\t\tthis.error = error;\r\n\t};\r\n\tsetTimeout = (timeout) => {\r\n\t\tthis.timeout = timeout;\r\n\t};\r\n\tsetAsync = (async) => {\r\n\t\tthis.async = async;\r\n\t};\r\n\tsetProgress = (progress) => {\r\n\t\tthis.progress = progress;\r\n\t};\r\n\tmakeTransData = () => {\r\n\t\treturn { transdata: JSON.stringify(this.transdata) };\r\n\t};\r\n\taddConfig = (props) => {\r\n\t\tthis.transdata.gifnoc.push(_.assign({}, this.constants.config, props));\r\n\t};\r\n\taddDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddSequence = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.sequence }));\r\n\t};\r\n\taddIterator = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.iterator }));\r\n\t};\r\n\taddSendDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddRecvDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\tsetAccessToken = (token) => {\r\n\t\tthis.constants.accessToken = token;\r\n\t};\r\n\treplcaceSpChar = (data) => {\r\n\t\treturn data.replace(/%/g, '％').replace(/=/g, '＝').replace(/&amp;/g, '＆').replace(/&/g, '＆');\r\n\t};\r\n\tdoLoading = (bVisible) => {\r\n\t\tlet objLoadDiv = document.getElementById(newScrmObj.constants.mdi.LOADING);\r\n\t\tif (ComLib.isNull(objLoadDiv)) {\r\n\t\t\tobjLoadDiv = document.createElement(\"div\");\r\n\t\t\tobjLoadDiv.id = newScrmObj.constants.mdi.LOADING;\r\n\t\t}\r\n\t\tdocument.body.appendChild(objLoadDiv);\r\n\t\tReactDOM.render(<Dialog.ModalLoading isOpen = {bVisible}/>, objLoadDiv);\r\n\t};\r\n\tagent = () => {\r\n\t\tconsole.log('request => ');\r\n\t\tconsole.log(this.transdata);\r\n\r\n\t\tloadProgressBar();\r\n\t\tif (this.progress) this.doLoading(this.progress);\r\n\t\tif (!this.async) this.agentSync();\r\n\t\telse this.agentAsync();\r\n\t};\r\n\tagentSync = () => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\t//url: process.env.API_URL + this.url,\r\n\t\t\turl: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\tdata: this.contentType === this.constants.contentType.json ? this.replcaceSpChar(JSON.stringify({\"transdata\": this.transdata})) : this.transdata.datasets.fileupload,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.contentType,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true,\r\n\t\t\tretry: 0,\r\n\t\t\tprogress: this.progress,\r\n\t\t\ttimeout: this.timeout,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = axios(reqOptions);\r\n\t\t\tconsole.log('response => ');\r\n\t\t\tconsole.log(resData);\r\n\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.SUCCESS });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t} else if (resData.data.data.gifnoc.ERR_CODE === this.constants.errorcode.UPLOADFAIL) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.UPLOADFAIL });\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', resData.data.gifnoc.ERR_MESSAGE);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('catch => ');\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t};\r\n\tagentAsync = async() => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\t//url: process.env.API_URL + this.url,\r\n\t\t\turl: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\tdata: this.contentType === this.constants.contentType.json ? this.replcaceSpChar(JSON.stringify({\"transdata\": this.transdata})) : this.transdata.datasets.fileupload,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.contentType,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true,\r\n\t\t\tretry: 0,\r\n\t\t\tprogress: this.progress,\r\n\t\t\ttimeout: this.timeout,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = await axios(reqOptions);\r\n\t\t\tconsole.log('response => ');\r\n\t\t\tconsole.log(resData);\r\n\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.SUCCESS });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t} else if (resData.data.data.gifnoc.ERR_CODE === this.constants.errorcode.UPLOADFAIL) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.UPLOADFAIL });\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', resData.data.gifnoc.ERR_MESSAGE);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('catch => ');\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t};\r\n};\r\nexport {newScrmObj, ComLib, StrLib, FileLib, ExcelLib, DateLib, TransManager, DataLib };","import React from 'react';\r\nimport { ComLib, TransManager, StrLib, DataLib } from 'common';\r\nimport { Link } from 'react-router-dom';\r\nimport 'assets/styles/login.css';\r\n\r\nclass Login extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tComLib.setServerInfos();\r\n\r\n\t\t// state 초기화\r\n\t\tthis.state = {\r\n\t\t\tdsLogin: DataLib.datalist.getInstance(),\r\n\t\t\tdsRst: DataLib.datalist.getInstance(),\r\n\t\t\tdsLoginInfo: DataLib.datalist.getInstance([{USR_CD: \"\", PWD: \"\", CENT_CD: \"\", CONN_IP: \"\"}]),\r\n\t\t};\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.input.onKeyDown = this.event.input.onKeyDown.bind(this);\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogin':\r\n\t\t\t\t\t if (this.validation('LOGIN_R01')) { this.transaction('LOGIN_R01'); }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnChgPasswd':\r\n\t\t\t\t\tif (document.getElementById('popup_div_0') != undefined) {\r\n\t\t\t\t\t\tdocument.getElementById('popup_div_0').hidden = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet option = { width: '300px', height: '450px', modaless: false }\r\n\t\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', option);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrCd':\r\n\t\t\t\t\t//this.setState({...this.state, dsLoginInfo: {...this.state.dsLoginInfo, record: {...this.state.dsLoginInfo.record, USR_CD: e.target.value}}});\r\n\t\t\t\t\tthis.state.dsLoginInfo.setValue(0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tComLib.setStateDs(this, \"dsLoginInfo\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\t//this.setState({...this.state, dsLoginInfo: {...this.state.dsLoginInfo, record: {...this.state.dsLoginInfo.record, PWD: e.target.value}}});\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsLoginInfo\", 0, \"PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyDown: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\tdocument.getElementById('btnLogin').click();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"USR_CD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'ID를 입력해주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '비밀번호를 입력해주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tthis.state.dsRst.setValue(0, \"CONN_IP\", this.state.dsLoginInfo.getValue(0, \"CONN_IP\"));\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t * LOGIN_R01 : 로그인 체크\r\n\t * LOGIN_R02 : 사용자 정보 조회\r\n\t * LOGIN_U01 : 비멀번호 오류 카운트 업데이트\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'LOGIN_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsLogin\",\r\n\t\t\t\t\tcolumnid: \"PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_doLogin\",\r\n\t\t\t\t\tdatasetsend:\"dsLogin\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsLogin', this.state.dsLoginInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'LOGIN_R02':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t// 비밀번호 오류 카운트 초기화\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_initPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 로그인 정보 Merge\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_doLoginAfter\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 사용자 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 공통코드 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCommCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCommCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 메뉴 정보 조회 -> TO-DO : Main Frame으로 이동 ?\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMenuList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMenuInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 센터 기준값 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentStndList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentStvlInfo\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getTeamList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsTeamList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMsgList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMsgList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSendData', this.state.dsRst.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t// 비밀번호 에러 카운트 업데이트\r\n\t\t\tcase 'LOGIN_U01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_addPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsUpdatePwd\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUpdatePwd', this.state.dsLoginInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\t//this.setState({...this.state, dsRst: {...this.state.dsRst, records: res.data.dsRst}});\r\n\t\t\tComLib.setStateInitRecords(this, \"dsRst\", res.data.dsRst);\r\n\r\n\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'Y') {\r\n\t\t\t\t//console.log('accessToken : ' +  res.data.dsLogin.accessToken);\r\n\t\t\t\t//ComLib.setSession('accessToken', res.data.dsLogin.type + ' ' + res.data.dsLogin.accessToken);\r\n\t\t\t\tif (this.validation('LOGIN_R02')) this.transaction('LOGIN_R02');\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'USR_CD') {\r\n\t\t\t\t\tComLib.openDialog('A', '사용자가 존재하지 않습니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'LOGIN') {\r\n\t\t\t\t\tComLib.openDialog('A', '이미 로그인 된 사용자 입니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'MAX_ERR') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 입력 오류가 5회 초과하였습니다. 비밀번호를 초기화 해주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'INIT') {\r\n\t\t\t\t\tComLib.openDialog('C', '비밀번호 변경 대상자 입니다.\\n 비밀번호 변경 화면으로 이동합니다.', foo => { if (foo === true) document.getElementById('btnChgPasswd').click();});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'PWD_ERR') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 오류입니다.');\r\n\t\t\t\t\tif (this.validation('LOGIN_U01')) this.transaction('LOGIN_U01');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tconst access_token = true;\r\n\t\t\tComLib.setSession('token', access_token);\r\n\r\n\t\t\tComLib.setSession('gdsUserInfo',\tres.data.dsUserInfo);\r\n\t\t\tComLib.setSession('gdsCommCode',\tres.data.dsCommCodeInfo);\r\n\t\t\tComLib.setSession('gdsMenu', \t\tres.data.dsMenuInfo);\r\n\t\t\tComLib.setSession('gdsCentStndVl',\tres.data.dsCentStvlInfo);\r\n\t\t\tComLib.setSession('gdsCentList',\tres.data.dsCentList);\r\n\t\t\tComLib.setSession('gdsTeamList',\tres.data.dsTeamList);\r\n\t\t\tComLib.setSession('gdsUserList',\tres.data.dsUserList);\r\n\t\t\tComLib.setSession('gdsMsgList',\t\tres.data.dsMsgList);\r\n\r\n\t\t\t// 메인 화면으로 이동\r\n\t\t\t//window.location = '/base';\r\n\t\t\tdocument.getElementById('linkBase').click();\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className = 'scrm-login'>\r\n\t\t\t\t\t<div className = 'scrm-login-div'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-main'>\r\n\t\t\t\t\t\t\tAI-QA\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'txtUsrCd' value = {this.state.dsLoginInfo.records[0][\"USR_CD\"]} placeholder = {' 아이디'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'txtUsrPasswd' value = {this.state.dsLoginInfo.records[0][\"PWD\"]} placeholder = {' 비밀번호'} onChange = {this.event.input.onChange} onKeyDown = {this.event.input.onKeyDown}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t<button id = 'btnLogin' onClick = {this.event.button.onClick}>{'로그인'}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t<button id = 'btnChgPasswd' onClick = {this.event.button.onClick}>{'비밀번호 변경'}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{display: 'none'}}>\r\n\t\t\t\t\t{/*<Link id = 'linkPwdChg'\tto = {{pathname: '/pwdChg',\tstate: {param: this.state.dsLoginInfo.getRecords()}}}/>*/}\r\n\t\t\t\t\t<Link id = 'linkBase'\tto = {{pathname: '/base',\tstate: {}}}/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, CentListSelectBox} from 'components';\r\nimport {Grid, ScrmLineBarChart, ProgressBar, Selectbox} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n//\tNo. COM010000\r\n//\tName : 대쉬보드 화면\r\n//\tWritten By : HW.LEE\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone] \r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\t\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\t\t\t\r\n\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tid : 'selTest',\r\n\t\t\t\tdataset : [{}],\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tselected : 1,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},      \r\n\t\t\toptions : {\r\n\t\t\t\tXAsisKey : 'REG_TIME',\r\n\t\t\t\tdataKey : [{key : 'TOTAL_CNT', stroke: '#8884d8'}]\r\n\t\t\t},\r\n\t\t\tdsResStatstic : {\r\n\t\t\t\tAVG_CPU : '',\r\n\t\t\t\tAVG_IO : '',\r\n\t\t\t\tAVG_MEM : '',\r\n\t\t\t\tAVG_SWAP : '',\r\n\t\t\t\tDISK : '',\r\n\t\t\t\tMAX_CPU : '',\r\n\t\t\t\tMAX_IO : '',\r\n\t\t\t\tMAX_MEM : '',\r\n\t\t\t\tMAX_SWAP : '',\r\n\t\t\t\tREG_DT : '',\r\n\t\t\t\tSV_NM : ''\t\t\t\r\n\t\t\t},\t\t\r\n\t\t\tdsJobStatstic : {\r\n\t\t\t\tREG_TIME : '',\r\n\t\t\t\tTOTAL_CNT : '',\r\n\t\t\t\tSUCC_CNT : '',\r\n\t\t\t\tFAIL_CNT : '',\r\n\t\t\t\tFILE_SIZE : '',\r\n\t\t\t\tFILE_LENGTH : ''\t\t\t\t\t\t\r\n\t\t\t},\r\n\t\t\tdsJobStatsticDaily : {\t\t\r\n\t\t\t\tREG_TIME : '',\r\n\t\t\t\tTOTAL_CNT : '',\r\n\t\t\t\tSUCC_CNT : '',\r\n\t\t\t\tFAIL_CNT : '',\r\n\t\t\t\tFILE_SIZE : '',\r\n\t\t\t\tFILE_LENGTH : ''\t\t\t\t\t\t\r\n\t\t\t},\r\n\t\t\tdsSrvDailyInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsSrvDailyInfoTest : DataLib.datalist.getInstance([{USR_CD: \"\", PWD: \"\", CENT_CD: \"\", CONN_IP: \"127.0.0.1\"}]),\t\t\t\r\n\t\t}\r\n\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\r\n\tcomponentWillMount  (){\t\t\r\n\t\tthis.validation(\"componentWillMount\");\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction('COM010000_R01');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tswitch (id) {\t\t\t\r\n\t\t\tcase 'componentWillMount' :\t\t\t\r\n\t\t\t\tfor(let intA =0; intA < Object.keys(this.state.dsJobStatstic).length; intA ++){\r\n\t\t\t\t\tlet targetObj = Object.keys(this.state.dsJobStatstic)[intA];\t\t\t\r\n\t\t\t\t\tif(StrLib.isNull(this.state.dsJobStatstic[targetObj]) === false){\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.state.dsJobStatstic[targetObj] = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tcase 'COM010000_R01' :\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010000_R02' :\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\t\t\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'COM010000_R01' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getSrvList\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchSvrInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsSvrInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(this.state.selectboxProps);\r\n\t\t\t\t\ttransManager.addDataset('dsSrchSvrInfo', [{}]);\t\t\t\t\t\r\n\t\t\t\t\ttransManager.agent();\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'COM010000_R02' :\t\t\r\n\t\t\t\t\ttransManager.setTransId(transId);\t\t\t\t\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getSrvResourceStatistic\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSvrResourceStaticInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsSvrResourceInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getSrvJobStatistic\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSvrJobStaticInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsSvrJobInfo\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getSrvJobStatisticDaily\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSvrJobStaticInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsSvrJobDailyInfo\"\r\n\t\t\t\t\t});\t\t\r\n\t\t\t\r\n\r\n\t\t\t\t\tif(StrLib.isNull(this.state.selectboxProps.value)){\r\n\t\t\t\t\t\tthis.state.selectboxProps.value = params[1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSvrJobStaticInfo', [{}]);\t\r\n\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSvrResourceStaticInfo', [{ \"SV_NM\" : this.state.selectboxProps.value }]);\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t// transManager.addDataset('dsSvrInfo', [{\"SV_NM\" : \"STT-DEMO\"}]);\t\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\t\r\n\t\t// console.log(res.data.dsSvrInfo);\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'COM010000_R01' : \r\n\t\t\t\tvar i;\r\n\t\t\t\tfor(i = 0; i < res.data.dsSvrInfo.length; i++){\r\n\t\t\t\t\tres.data.dsSvrInfo[i].name = res.data.dsSvrInfo[i]['NAME'];\r\n\t\t\t\t\tres.data.dsSvrInfo[i].value = res.data.dsSvrInfo[i]['VALUE'];\r\n\t\t\t\t\tdelete res.data.dsSvrInfo[i].NAME;\r\n\t\t\t\t\tdelete res.data.dsSvrInfo[i].VALUE;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, dataset : res.data.dsSvrInfo}});\t\t\t\t\t\t\t\r\n\t\t\t\tlet defaultSelBox = this.state.selectboxProps.dataset[0][\"value\"];\r\n\r\n\t\t\t\t// if (this.validation(\"SYS010000_R01\"))\r\n\t\t\t\t\tthis.transaction(\"COM010000_R02\", defaultSelBox);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010000_R02' : \t\t\t\t\r\n\t\t\t\tconsole.log(res.data.dsSvrResourceInfo[0]);\r\n\t\t\t\tconsole.log(res.data.dsSvrJobInfo[0]);\t\t\t\t\t\t\t\t\r\n\t\t\t\tconsole.log(res.data.dsSvrJobDailyInfo);\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({...this.state, dsJobStatstic : res.data.dsSvrJobInfo[0]});\r\n\t\t\t\tthis.setState({...this.state, dsResStatstic : res.data.dsSvrResourceInfo[0]});\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t\tfor(let intA=0; intA<24; intA++){\r\n\t\t\t\t\tif(StrLib.isNull(res.data.dsSvrJobDailyInfo[intA])){\t\t\t\r\n\t\t\t\t\t\tres.data.dsSvrJobDailyInfo[intA] = {REG_TIME : intA , TOTAL_CNT: '0'};\t\t\t\t\t\t\r\n\t\t\t\t\t}else{\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.data.dsSvrJobDailyInfo[intA].REG_TIME = res.data.dsSvrJobDailyInfo[intA].REG_TIME.substr(11,3);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar newArray = res.data.dsSvrJobDailyInfo.sort(function(first, second) {\r\n\t\t\t\t\tvar a = first.REG_TIME;\r\n\t\t\t\t\tvar b = second.REG_TIME;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(a > b) {\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t} else if(a < b) {\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSrvDailyInfo\", res.data.dsSvrJobDailyInfo);\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault :  break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tgrid : {\r\n\t\t\tonRowClicked  : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'grdNoteInfo' :\r\n\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n\t\t\t\t\t\t\t,   srchFileParam : e.data.BORD_MNG_NO\r\n\t\t\t\t\t\t}, () => this.transaction('COM010000_R02'));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => \r\n\t\t\t{\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSrvDailyInfo\", [\r\n\t\t\t\t\t{job: 'test', hour : '00', data : 1},\r\n\t\t\t\t\t{job: 'test', hour : '01', data : 2},\r\n\t\t\t\t\t{job: 'test', hour : '02', data : 3},\r\n\t\t\t\t\t{job: 'test', hour : '03', data : 4},\r\n\t\t\t\t\t{job: 'test', hour : '04', data : 5},\r\n\t\t\t\t\t{job: 'test', hour : '05', data : 2},\r\n\t\t\t\t\t{job: 'test', hour : '06', data : 3},\r\n\t\t\t\t\t{job: 'test', hour : '07', data : 1},\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selTest' :\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log('selTest onChange');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, selected : e.target.selectedIndex, value : e.target.value}}, () => this.transaction('COM010000_R01') );\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mulSelTest' :\r\n\t\t\t\t\t\tconsole.log('mulSelTest');\r\n\t\t\t\t\t\tconsole.log(e);\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({...this.state, multiSelectboxProps : {...this.state.multiSelectboxProps, dataset : e.dataset}});\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<span>완료건수</span>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span>{this.state.dsJobStatstic.TOTAL_CNT}건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<span>실시간 : 0</span>\r\n\t\t\t\t\t\t\t<span>수동처리 : 2</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>파일길이 {this.state.dsJobStatstic.FILE_LENGTH}분</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<span>파일크기 {this.state.dsJobStatstic.FILE_SIZE}MB</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ProgressBar data={97}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>성공건수 {this.state.dsJobStatstic.SUCC_CNT}건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<ProgressBar data={23.1}\toptions={{type: 'circle', status: 'error'}}/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>실패건수 {this.state.dsJobStatstic.FAIL_CNT}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<span>서버별 금일 작업내역</span>\r\n\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\twidth = {1000}\r\n\t\t\t\t\t\theight = {300}\r\n\t\t\t\t\t\tdata = {this.state.dsSrvDailyInfo.getRecords()}\r\n\t\t\t\t\t\toptions = {this.state.options}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>서버 상황</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>서버 선택</span>\r\n\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.id}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.value}\r\n\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.dataset}\r\n\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.width}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.disabled}\r\n\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selected}\r\n\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>DISK 사용률</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ProgressBar data={this.state.dsResStatstic.DISK}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>CPU 사용률</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ProgressBar data={this.state.dsResStatstic.AVG_CPU}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>Memory 사용률</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<ProgressBar data={this.state.dsResStatstic.AVG_MEM}\t\toptions={{type: 'circle', status: 'active'}}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","// 평가항목관리\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox} from 'components';\r\nimport {Grid, Table} from 'components';\r\n\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , TransManager            } from 'common';\r\nimport { cmp } from 'semver';\r\nimport { StrLib } from '../../../common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsVlaItemList : DataLib.datalist.getInstance(),\r\n\t\t\tdsVlaContList : DataLib.datalist.getInstance(),\r\n\t\t\tdsVlaStndList : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnVlaSearch : {\r\n\t\t\t\t\tid       : 'btnVlaSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaItemNew : {\r\n\t\t\t\t\tid       : 'btnVlaItemNew',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '신규',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaItemSave : {\r\n\t\t\t\t\tid       : 'btnVlaItemSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaContNew : {\r\n\t\t\t\t\tid       : 'btnVlaContNew',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '신규',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaContSave : {\r\n\t\t\t\t\tid       : 'btnVlaContSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaStndCopy : {\r\n\t\t\t\t\tid       : 'btnVlaStndCopy',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '복사',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaStndNew : {\r\n\t\t\t\t\tid       : 'btnVlaStndNew',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '신규',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnVlaStndSave : {\r\n\t\t\t\t\tid       : 'btnVlaStndSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdVlaItem : {\r\n\t\t\t\t\tid : 'grdVlaItem',\r\n\t\t\t\t\tareaName : '평가항목',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t{headerName: '평가항목',\tfield: 'VLA_ITM_NM',\tcolId: 'VLA_ITM_NM', editable: true},\r\n\t\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\t editable: false},\r\n\t\t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_ORD',\t\tcolId: 'SORT_ORD',\t editable: false},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\tgrdVlaCont : {\r\n\t\t\t\t\tid : 'grdVlaCont',\r\n\t\t\t\t\tareaName : '평가내용',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t{headerName: '평가내용',\tfield: 'VLA_CONT_NM',\tcolId: 'VLA_CONT_NM', editable: false},\r\n\t\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\t  editable: false},\r\n\t\t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_ORD',\t\tcolId: 'SORT_ORD',\t  editable: false},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\tgrdVlaStnd : {\r\n\t\t\t\t\tid : 'grdVlaStnd',\r\n\t\t\t\t\tareaName : '평가기준',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t{headerName: '평가기준',\tfield: 'VLA_STND_NM',\tcolId: 'VLA_STND_NM',editable: false},\r\n\t\t\t\t\t\t{headerName: '배점',\t\tfield: 'SCO',\t    \tcolId: 'SCO',\t     editable: false},\r\n\t\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\t editable: false},\r\n\t\t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_ORD',\t\tcolId: 'SORT_ORD',\t editable: false},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t},\r\n\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptVlaSearch : {\r\n\t\t\t\t\tid          : 'iptVlaSearch',\r\n\t\t\t\t\tname        : 'iptVlaSearch',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '평가항목',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\tiptVlaItem : {\r\n\t\t\t\t\tid          : 'iptVlaItem',\r\n\t\t\t\t\tname        : 'iptVlaItem',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '평가항목',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\tiptVlaItemSort : {\r\n\t\t\t\t\tid          : 'iptVlaItemSort',\r\n\t\t\t\t\tname        : 'iptVlaItemSort',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 3,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\tiptVlaCont : {\r\n\t\t\t\t\tid          : 'iptVlaCont',\r\n\t\t\t\t\tname        : 'iptVlaCont',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '평가내용',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\tiptVlaContSort : {\r\n\t\t\t\t\tid          : 'iptVlaContSort',\r\n\t\t\t\t\tname        : 'iptVlaContSort',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 3,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\t\t\r\n\t\t\t\tiptVlaStndNm : {\r\n\t\t\t\t\tid          : 'iptVlaStndNm',\r\n\t\t\t\t\tname        : 'iptVlaStndNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '평가기준',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\tiptVlaStndExpl : {\r\n\t\t\t\t\tid          : 'iptVlaStndExpl',\r\n\t\t\t\t\tname        : 'iptVlaStndExpl',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '설명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\t\r\n\t\t\t\tiptVlaStndSort : {\r\n\t\t\t\t\tid          : 'iptVlaStndSort',\r\n\t\t\t\t\tname        : 'iptVlaStndSort',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 3,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\t \r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselVlaSearch : {\r\n\t\t\t\t\tid : 'selVlaSearch',\r\n\t\t\t\t\tdataset : [\r\n\t\t\t\t\t\t{value : 'ALL', name : '전체'},\r\n\t\t\t\t\t\t{value : 'Y'  , name : 'Y'},\r\n\t\t\t\t\t\t{value : 'N'  , name : 'N'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\twidth : 50,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselVlaItemUseYn : {\r\n\t\t\t\t\tid : 'selVlaItemUseYn',\r\n\t\t\t\t\tdataset : [\r\n\t\t\t\t\t\t{value : 'Y', name : 'Y'},\r\n\t\t\t\t\t\t{value : 'N', name : 'N'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\twidth : 50,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselVlaContUseYn : {\r\n\t\t\t\t\tid : 'selVlaContUseYn',\r\n\t\t\t\t\tdataset : [\r\n\t\t\t\t\t\t{value : 'Y', name : 'Y'},\r\n\t\t\t\t\t\t{value : 'N', name : 'N'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\twidth : 50,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselVlaStndUseYn : {\r\n\t\t\t\t\tid : 'selVlaStndUseYn',\r\n\t\t\t\t\tdataset : [\r\n\t\t\t\t\t\t{value : 'Y', name : 'Y'},\r\n\t\t\t\t\t\t{value : 'N', name : 'N'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselSco : {\r\n\t\t\t\t\tid : 'selSco',\r\n\t\t\t\t\tdataset : [\r\n\t\t\t\t\t\t{value : '1', name : '1'},\r\n\t\t\t\t\t\t{value : '2', name : '2'},\r\n\t\t\t\t\t\t{value : '3', name : '3'},\r\n\t\t\t\t\t\t{value : '4', name : '4'},\r\n\t\t\t\t\t\t{value : '5', name : '5'},\r\n\t\t\t\t\t\t{value : '6', name : '6'},\r\n\t\t\t\t\t\t{value : '7', name : '7'},\r\n\t\t\t\t\t\t{value : '8', name : '8'},\r\n\t\t\t\t\t\t{value : '9', name : '9'},\r\n\t\t\t\t\t\t{value : '10', name : '10'},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"QAM010000_R01\")) this.transaction(\"QAM010000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t// console.log(\"updated!!\");\r\n\t\t// console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'QAM010000_R01' :\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'QAM010000_R02' :\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'QAM010000_R03' :\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'QAM010000_R01' :\r\n\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"QAM.R_getVlaItem\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsVlaItemRecv\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet itemNm  = this.state.textFieldProps.iptVlaSearch.value;\r\n\t\t\t\t\tlet itemUse = this.state.selectboxProps.selVlaSearch.dataset[this.state.selectboxProps.selVlaSearch.selected-1].value;\r\n\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSearchParam', [{\"ITEM_NM\": itemNm, \"ITEM_USE\": itemUse}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'QAM010000_R02' :\r\n\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"QAM.R_getVlaCont\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsVlaContRecv\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSearchParam', [{\"ITEM_CD\": params[1]}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'QAM010000_R03' :\r\n\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"QAM.R_getVlaStnd\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsVlaStndRecv\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSearchParam', [{\"CONT_CD\": params[1]}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tlet data;\r\n\t\tlet rowType;\r\n\t\tlet useIndex;\r\n\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'QAM010000_R01':\r\n\t\t\t\tif (res.data.dsVlaItemRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsVlaItemList\", res.data.dsVlaItemRecv);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (res.data.dsVlaItemRecv[0].USE_YN === \"Y\") {\r\n\t\t\t\t\t\tuseIndex = 1\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuseIndex = 2\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaItem      : {...this.state.textFieldProps.iptVlaItem, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : res.data.dsVlaItemRecv[0].VLA_ITM_NM},\r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaItemSort  : {...this.state.textFieldProps.iptVlaItemSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : res.data.dsVlaItemRecv[0].SORT_ORD }},\r\n\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\tselVlaItemUseYn : {... this.state.selectboxProps.selVlaItemUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : useIndex, value : res.data.dsVlaItemRecv[0].USE_YN}}});\r\n\r\n\t\t\t\t\tthis.refs.grdVlaItem.moveRow(0);\r\n\t\r\n\t\t\t\t\tdata = this.refs.grdVlaItem.state.gridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.setSelected(true);\r\n\r\n\t\t\t\t\tlet itemCd  = \"\";\t\t\t\t\t\r\n\t\r\n\t\t\t\t\titemCd  = this.state.dsVlaItemList.records[0].VLA_ITM_CD;\r\n\t\t\t\t\trowType = 'r';\r\n\t\r\n\t\t\t\t\tif (this.validation(\"QAM010000_R02\", itemCd, rowType)) this.transaction(\"QAM010000_R02\", itemCd);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsVlaItemList\", []);\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsVlaContList\", []);\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsVlaStndList\", []);\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'QAM010000_R02':\r\n\t\t\t\tif (res.data.dsVlaContRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsVlaContList\", res.data.dsVlaContRecv);\r\n\t\t\t\t\r\n\t\t\t\t\tif (res.data.dsVlaContRecv[0].USE_YN === \"Y\") {\r\n\t\t\t\t\t\tuseIndex = 1\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuseIndex = 2\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaCont      : {...this.state.textFieldProps.iptVlaCont, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    : res.data.dsVlaContRecv[0].VLA_CONT_NM},\r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaContSort  : {...this.state.textFieldProps.iptVlaContSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    : res.data.dsVlaContRecv[0].SORT_ORD}},\r\n\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\tselVlaContUseYn : {... this.state.selectboxProps.selVlaContUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : useIndex, value : res.data.dsVlaContRecv[0].USE_YN}}});\r\n\r\n\t\t\t\t\tthis.refs.grdVlaCont.moveRow(0);\r\n\t\r\n\t\t\t\t\tdata = this.refs.grdVlaCont.state.gridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.setSelected(true);\r\n\r\n\t\t\t\t\tlet contCd  = \"\";\r\n\t\r\n\t\t\t\t\tcontCd  = this.state.dsVlaContList.records[0].VLA_CONT_CD;\r\n\t\t\t\t\trowType = 'r';\r\n\t\r\n\t\t\t\t\tif (this.validation(\"QAM010000_R03\", contCd, rowType)) this.transaction(\"QAM010000_R03\", contCd);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsVlaContList\", []);\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsVlaStndList\", []);\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'QAM010000_R03':\r\n\t\t\t\tif (res.data.dsVlaStndRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsVlaStndList\", res.data.dsVlaStndRecv);\r\n\t\t\t\t\r\n\t\t\t\t\tif (res.data.dsVlaStndRecv[0].USE_YN === \"Y\") {\r\n\t\t\t\t\t\tuseIndex = 1\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tuseIndex = 2\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet scoIndex = res.data.dsVlaStndRecv[0].SCO;\r\n\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaStndNm    : {...this.state.textFieldProps.iptVlaStndNm, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    : res.data.dsVlaStndRecv[0].VLA_STND_NM},\r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaStndExpl  : {...this.state.textFieldProps.iptVlaStndExpl, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    : res.data.dsVlaStndRecv[0].VLA_EXPL},\r\n\t\t\t\t\t\t\t\t\t\t\tiptVlaStndSort  : {...this.state.textFieldProps.iptVlaStndSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    : res.data.dsVlaStndRecv[0].SORT_ORD}},\r\n\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\tselVlaStndUseYn : {... this.state.selectboxProps.selVlaItemUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : useIndex, value : res.data.dsVlaStndRecv[0].USE_YN},\r\n\t\t\t\t\t\t\t\t\t\t\tselSco          : {... this.state.selectboxProps.selSco,  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : scoIndex, value : res.data.dsVlaStndRecv[0].SCO}}});\r\n\r\n\t\t\t\t\tthis.refs.grdVlaStnd.moveRow(0);\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tdata = this.refs.grdVlaStnd.state.gridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.setSelected(true);\r\n\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsVlaStndList\", []);\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\r\n\t\t\t\t\tcase 'btnVlaSearch' :\r\n\t\t\t\t\t\tif (this.validation(\"QAM010000_R01\")) this.transaction(\"QAM010000_R01\");\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'btnVlaItemNew' :\r\n\t\t\t\t\t\tlet rowData = this.refs.grdVlaItem.props.data;\r\n\t\t\t\t\t\tlet index = rowData.addRow();\r\n\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\tdsVlaItemList : {...this.state.dsVlaItemList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: rowData.getRecords()},\r\n\t\t\t\t\t\t\t\t\t\tdsVlaContList : {...this.state.dsVlaContList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: []},\r\n\t\t\t\t\t\t\t\t\t\tdsVlaStndList : {...this.state.dsVlaStndList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: []}});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// this.refs.grdVlaItem.moveRow(index);\r\n\r\n\t\t\t\t\t\t// let data = this.refs.grdVlaItem.state.gridApi.rowModel.rowsToDisplay[index];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// data.setSelected(true);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'btnVlaItemSave' :\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'btnVlaContNew' :\r\n\t\t\t\t\t\tif (this.refs.grdVlaItem.getSelectedRows().length < 1) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '평가항목을 먼저 선택 하셔야 합니다.');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (this.refs.grdVlaItem.getSelectedRows()[0].rowtype !== 'r') {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '평가항목을 먼저 저장 하셔야 합니다.');\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet rowData = this.refs.grdVlaCont.props.data;\r\n\t\t\t\t\t\t\tlet index = rowData.addRow();\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\trowData.records[index].VLA_ITM_CD = this.refs.grdVlaItem.getSelectedRows()[0].VLA_ITM_CD\r\n\r\n\t\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\t\tdsVlaContList : {...this.state.dsVlaContList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: rowData.getRecords()},\r\n\t\t\t\t\t\t\t\t\t\t\tdsVlaStndList : {...this.state.dsVlaStndList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: []}});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'btnVlaContSave' :\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'btnVlaStndCopy' :\t\t\t\t\r\n\t\t\t\t\t\tif (this.refs.grdVlaCont.getSelectedRows().length < 1) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '평가내용을 먼저 선택 하셔야 합니다.');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (this.refs.grdVlaCont.getSelectedRows()[0].rowtype !== 'r') {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '평가내용을 먼저 저장 하셔야 합니다.');\r\n\r\n\t\t\t\t\t\t} else if (this.refs.grdVlaStnd.getSelectedRows().length < 1) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '복사하실 평가기준을 먼저 선택 하셔야 합니다.');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet currRowData = this.refs.grdVlaStnd.getSelectedRows()[0];\r\n\t\t\t\t\t\t\tlet rowData = this.refs.grdVlaStnd.props.data;\r\n\t\t\t\t\t\t\tlet index = rowData.addRow();\r\n\r\n\t\t\t\t\t\t\trowData.records[index].SCO         = currRowData.SCO\r\n\t\t\t\t\t\t\trowData.records[index].SORT_ORD    = currRowData.SORT_ORD\r\n\t\t\t\t\t\t\trowData.records[index].USE_YN      = currRowData.USE_YN\r\n\t\t\t\t\t\t\trowData.records[index].VLA_CONT_CD = currRowData.VLA_CONT_CD\r\n\t\t\t\t\t\t\trowData.records[index].VLA_EXPL    = currRowData.VLA_EXPL\r\n\t\t\t\t\t\t\trowData.records[index].VLA_ITM_CD  = currRowData.VLA_ITM_CD\r\n\t\t\t\t\t\t\trowData.records[index].VLA_STND_NM = currRowData.VLA_STND_NM\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\t\tdsVlaStndList : {...this.state.dsVlaStndList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: rowData.getRecords()}})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase 'btnVlaStndNew' :\r\n\t\t\t\t\t\tif (this.refs.grdVlaCont.getSelectedRows().length < 1) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '평가내용을 먼저 선택 하셔야 합니다.');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (this.refs.grdVlaCont.getSelectedRows()[0].rowtype !== 'r') {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '평가내용을 먼저 저장 하셔야 합니다.');\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet rowData = this.refs.grdVlaStnd.props.data;\r\n\t\t\t\t\t\t\tlet index = rowData.addRow();\r\n\r\n\t\t\t\t\t\t\trowData.records[index].VLA_ITM_CD  = this.refs.grdVlaCont.getSelectedRows()[0].VLA_ITM_CD\r\n\t\t\t\t\t\t\trowData.records[index].VLA_CONT_CD = this.refs.grdVlaCont.getSelectedRows()[0].VLA_CONT_CD\r\n\r\n\t\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\t\tdsVlaStndList : {...this.state.dsVlaStndList, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trecords: rowData.getRecords()}})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'btnVlaStndSave' :\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\r\n\t\t\t\t\tcase 'iptVlaSearch' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaSearch : {...this.state.textFieldProps.iptVlaSearch, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaItem' :\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet rowData  = this.state.dsVlaItemList.records;\r\n\t\t\t\t\t\tlet rowIndex = this.refs.grdVlaItem.getSelectedRowIndex(); \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trowData[rowIndex].VLA_ITM_NM = e.target.value;\r\n\t\t\t\t\t\trowData[rowIndex].rowtype = 'u';\r\n\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaItem : {...this.state.textFieldProps.iptVlaItem, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }},\r\n\t\t\t\t\t\t\t\t\t\tdsVlaItemList  : {...this.state.dsVlaItemList, records: rowData}});\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaItemSort' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaItemSort : {...this.state.textFieldProps.iptVlaItemSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaCont' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaCont : {...this.state.textFieldProps.iptVlaCont, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaContSort' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaContSort : {...this.state.textFieldProps.iptVlaContSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaStndNm' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaStndNm : {...this.state.textFieldProps.iptVlaStndNm, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaStndExpl' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaStndExpl : {...this.state.textFieldProps.iptVlaStndExpl, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'iptVlaStndSort' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tiptVlaStndSort : {...this.state.textFieldProps.iptVlaStndSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selVlaSearch' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselVlaSearch : {... this.state.selectboxProps.selVlaSearch, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tcase 'selVlaItemUseYn' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselVlaItemUseYn : {... this.state.selectboxProps.selVlaItemUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'selVlaContUseYn' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselVlaContUseYn : {... this.state.selectboxProps.selVlaContUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'selVlaStndUseYn' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselVlaStndUseYn : {... this.state.selectboxProps.selVlaStndUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'selSco' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselSco : {... this.state.selectboxProps.selSco, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tlet itemCd  = \"\";\r\n\t\t\t\tlet contCd  = \"\";\r\n\t\t\t\tlet rowType = \"\";\r\n\r\n\t\t\t\tlet useIndex;\r\n\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'grdVlaItem' :\r\n\t\t\t\t\t\titemCd  = e.data.VLA_ITM_CD\r\n\t\t\t\t\t\trowType = e.data.rowtype;\r\n\r\n\t\t\t\t\t\tif (e.data.USE_YN === \"Y\") {\r\n\t\t\t\t\t\t\tuseIndex = 1\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuseIndex = 2\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaItem      : {...this.state.textFieldProps.iptVlaItem, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.VLA_ITM_NM },\r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaItemSort  : {...this.state.textFieldProps.iptVlaItemSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.SORT_ORD }},\r\n\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\tselVlaItemUseYn : {... this.state.selectboxProps.selVlaItemUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : useIndex, value : e.data.USE_YN}}});\r\n\r\n\t\t\t\t\t\tif (this.validation(\"QAM010000_R02\", itemCd, rowType)) this.transaction(\"QAM010000_R02\", itemCd);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'grdVlaCont' :\r\n\t\t\t\t\t\tcontCd  = e.data.VLA_CONT_CD\r\n\t\t\t\t\t\trowType = e.data.rowtype;\r\n\r\n\t\t\t\t\t\tif (e.data.USE_YN === \"Y\") {\r\n\t\t\t\t\t\t\tuseIndex = 1\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuseIndex = 2\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaCont     : {...this.state.textFieldProps.iptVlaCont, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.VLA_CONT_NM },\r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaContSort  : {...this.state.textFieldProps.iptVlaContSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.SORT_ORD }},\r\n\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\tselVlaContUseYn : {... this.state.selectboxProps.selVlaContUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : useIndex, value : e.data.USE_YN}}});\r\n\r\n\t\t\t\t\t\tif (this.validation(\"QAM010000_R03\", contCd, rowType)) this.transaction(\"QAM010000_R03\", contCd);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'grdVlaStnd' :\r\n\t\t\t\t\t\tif (e.data.USE_YN === \"Y\") {\r\n\t\t\t\t\t\t\tuseIndex = 1\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tuseIndex = 2\r\n\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet scoIndex = e.data.SCO;\r\n\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaStndNm    : {...this.state.textFieldProps.iptVlaStndNm, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.VLA_STND_NM },\r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaStndExpl  : {...this.state.textFieldProps.iptVlaStndExpl, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.VLA_EXPL },\r\n\t\t\t\t\t\t\t\t\t\t\t\tiptVlaStndSort  : {...this.state.textFieldProps.iptVlaStndSort, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.data.SORT_ORD }},\r\n\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps, \r\n\t\t\t\t\t\t\t\t\t\t\t\tselVlaStndUseYn : {... this.state.selectboxProps.selVlaStndUseYn, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : useIndex, value : e.data.USE_YN},\r\n\t\t\t\t\t\t\t\t\t\t\t\tselSco          : {... this.state.selectboxProps.selSco,  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected : scoIndex, value : e.data.SCO}}});\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellFocused: () => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\tconsole.log('onCellClicked');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: () => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: () => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: () => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: () => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: () => {\r\n\t\t\t\t// console.log('onRowSelected');\r\n\t\t\t\t// console.log(e);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tconsole.log(\"2\")\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tif (this.refs.bigCdGrid.getSelectedRows() === 0) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\r\n\t\t\t\t\t\t} else if (this.refs.bigCdGrid.getSelectedRows()[0].rowtype === \"c\") {\r\n\t\t\t\t\t\t\tconsole.log(\"삭제\")\r\n\t\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '신규로 추가된 행만 삭제 가능합니다.');\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tif (this.refs.smlCdGrid.getSelectedRows() === 0) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\r\n\t\t\t\t\t\t} else if (this.refs.smlCdGrid.getSelectedRows()[0].rowtype === \"c\") {\r\n\t\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '신규로 추가된 행만 삭제 가능합니다.');\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가항목\"/>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {400}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaSearch.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaSearch.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaSearch.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaSearch.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaSearch.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selVlaSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selVlaSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selVlaSearch.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selVlaSearch.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selVlaSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selVlaSearch.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid        = {this.state.grdProps.grdVlaItem.id} \r\n\t\t\t\t\t\t\t\t\tref       = {this.state.grdProps.grdVlaItem.id} \r\n\t\t\t\t\t\t\t\t\tareaName  = {this.state.grdProps.grdVlaItem.areaName} \r\n\t\t\t\t\t\t\t\t\theader    = {this.state.grdProps.grdVlaItem.header}\r\n\t\t\t\t\t\t\t\t\tdata      = {this.state.dsVlaItemList}\r\n\t\t\t\t\t\t\t\t\theight    = \"250px\"\r\n\t\t\t\t\t\t\t\t\trowNum    = {true}\r\n\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"평가항목\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {400}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaItem.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaItem.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaItem.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaItem.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaItem.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaItem.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaItem.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaItem.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{marginTop: '5px'}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selVlaItemUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selVlaItemUseYn.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selVlaItemUseYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selVlaItemUseYn.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selVlaItemUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selVlaItemUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div style={{margin: '20px'}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"정렬순서\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {100}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaItemSort.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaItemSort.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaItemSort.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaItemSort.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaItemSort.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaItemSort.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaItemSort.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaItemSort.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaItemNew.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaItemNew.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaItemNew.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaItemNew.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaItemSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaItemSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaItemSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaItemSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid        = {this.state.grdProps.grdVlaCont.id} \r\n\t\t\t\t\t\t\t\t\tref       = {this.state.grdProps.grdVlaCont.id} \r\n\t\t\t\t\t\t\t\t\tareaName  = {this.state.grdProps.grdVlaCont.areaName} \r\n\t\t\t\t\t\t\t\t\theader    = {this.state.grdProps.grdVlaCont.header}\r\n\t\t\t\t\t\t\t\t\tdata      = {this.state.dsVlaContList}\r\n\t\t\t\t\t\t\t\t\theight    = \"250px\"\r\n\t\t\t\t\t\t\t\t\trowNum    = {true}\r\n\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"평가내용\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {400}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaCont.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaCont.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaCont.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaCont.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaCont.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaCont.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaCont.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaCont.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{marginTop: '5px'}}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selVlaContUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selVlaContUseYn.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selVlaContUseYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selVlaContUseYn.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selVlaContUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selVlaContUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"정렬순서\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {100}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaContSort.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaContSort.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaContSort.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaContSort.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaContSort.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaContSort.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaContSort.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaContSort.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaContNew.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaContNew.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaContNew.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaContNew.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaContSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaContSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaContSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaContSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid        = {this.state.grdProps.grdVlaStnd.id} \r\n\t\t\t\t\t\t\t\t\tref       = {this.state.grdProps.grdVlaStnd.id} \r\n\t\t\t\t\t\t\t\t\tareaName  = {this.state.grdProps.grdVlaStnd.areaName} \r\n\t\t\t\t\t\t\t\t\theader    = {this.state.grdProps.grdVlaStnd.header}\r\n\t\t\t\t\t\t\t\t\tdata      = {this.state.dsVlaStndList}\r\n\t\t\t\t\t\t\t\t\theight    = \"250px\"\r\n\t\t\t\t\t\t\t\t\trowNum    = {true}\r\n\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\t\t\tid=\"tblSrchUsrMenuInfo\" \r\n\t\t\t\t\t\t\t\t\tcolGrp = {[{width: '15%'}, {width: '15%'}, {width: '15%'}, {width: '20%'},{width: '15%'}, {width: '20%'} ]}\r\n\t\t\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '평가기준'},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaStndNm.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaStndNm.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaStndNm.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaStndNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaStndNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaStndNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaStndNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaStndNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>, colSpan: 5},\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '설명'},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaStndExpl.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaStndExpl.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaStndExpl.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaStndExpl.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaStndExpl.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaStndExpl.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaStndExpl.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaStndExpl.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>, colSpan: 5},\r\n\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '사용여부'},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selVlaStndUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selVlaStndUseYn.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selVlaStndUseYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selVlaStndUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selVlaStndUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '배점'},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selSco.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selSco.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selSco.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selSco.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selSco.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '정렬순서'},\r\n\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptVlaStndSort.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptVlaStndSort.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptVlaStndSort.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptVlaStndSort.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptVlaStndSort.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptVlaStndSort.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptVlaStndSort.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptVlaStndSort.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaStndCopy.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaStndCopy.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaStndCopy.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaStndCopy.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaStndNew.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaStndNew.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaStndNew.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaStndNew.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnVlaStndSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnVlaStndSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnVlaStndSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnVlaStndSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 표준스크립트관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsValScrptList : DataLib.datalist.getInstance(),\r\n\t\t\tdsScrptValTblInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가표명\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"버전\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsValScrptList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가표명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가구분',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '스크립트제목',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '스크립트내용',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '배점',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '순번',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsScrptValTblInfo}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가구분',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가내용',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '순번',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가표\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가구분\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가내용\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"스크립트제목\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"순서\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"스크립트내용(조건1)\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value=\"조건2\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value=\"조건3\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"80px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsScrptValTblInfo}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '평가항목',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '배점',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"적용일자\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"삭제\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 배정대상조회\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsDeAsgnValTgtList : DataLib.datalist.getInstance(),\r\n\t\t\tdsQaList : DataLib.datalist.getInstance(),\r\n\t\t\tdsAsgValTgtList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\" 조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"500px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsDeAsgnValTgtList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상담원ID',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '통화시작시간',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsQaList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'QA ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'QA명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsAsgValTgtList}\r\n\t\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원ID',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{headerName: '통화시작시간',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 통화이력관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {TransManager, ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\r\n\t\t\tbuttonSearchProps : {\r\n\t\t\t\tid : 'qam05BtnSearch',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tbuttonDupleCheckProps : {\r\n\t\t\t\tid : 'qam05BtnDeupleCheck',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '중복확인',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tcallHistoryList : {\t\t\t\r\n\t\t\t\tgridId : 'callHistoryList',\r\n\t\t\t\tgridLabel : '통화이력 리스트',\r\n\t\t\t\tgridHeader : \r\n\t\t\t\t\t[\t\t\t\t\r\n\t\t\t\t\t\t{headerName: '',\t\t\t field: 'CHK',\t\t\t\tcolId: 'CHK',\t\treq: true, headerCheckboxSelection: true,\tcheckboxSelection: true, width : 20 },\r\n\t\t\t\t\t\t{headerName: 'No',\t\t\t field: 'recid',\t\t\tcolId: 'recid',\t\t\t},\r\n\t\t\t\t\t\t{headerName: '센터',\t\t field: 'CENT_NM',\t\t\tcolId: 'CENT_NM',\t\t},\r\n\t\t\t\t\t\t{headerName: '팀',\t\t\t field: 'TEAM_NM',\t\t\tcolId: 'TEAM_NM',\t\t},\r\n\t\t\t\t\t\t{headerName: '상담원ID',\t field: 'USR_CD',\t\t\tcolId: 'USR_CD',\t\t},\r\n\t\t\t\t\t\t{headerName: '상담원명',\t field: 'USR_NM',\t\t\tcolId: 'USR_NM',\t\t},\r\n\t\t\t\t\t\t{headerName: '통화시작',  \t field: 'CALL_STRT_DTM',\tcolId: 'CALL_STRT_DTM',\t},\r\n\t\t\t\t\t\t{headerName: '센터CD',  \t field: 'CENT_CD',\t\t\tcolId: 'CENT_CD',\thide:true },\r\n\t\t\t\t\t\t{headerName: '팀CD',  \t\t field: 'TEAM_CD',\t\t\tcolId: 'TEAM_CD',\thide:true },\r\n\t\t\t\t\t\t{headerName: '고객관리번호',  field: 'CUS_MNGNO',\t\tcolId: 'CUS_MNGNO',\thide:true },\r\n\t\t\t\t\t\t{headerName: '통화종료일시',  field: 'TEL_CONN_DTM',\tcolId: 'TEL_CONN_DTM',\thide:true },\r\n\t\t\t\t\t\t{headerName: '녹취파일경로',  field: 'REC_FILE_PATH',\tcolId: 'REC_FILE_PATH',\thide:true },\r\n\t\t\t\t\t\t{headerName: '녹취파일명칭',  field: 'REC_FILE_NM',\t\tcolId: 'REC_FILE_NM',\thide:true },\r\n\t\t\t\t\t\t{headerName: '녹취아이디',    field: 'REC_ID',\t\t\tcolId: 'REC_ID',\thide:true },\r\n\t\t\t\t\t\t{headerName: '등록자',  \t  field: 'REG_ID',\t\t\tcolId: 'REG_ID',\thide:true },\r\n\t\t\t\t\t\t{headerName: '등록일시',  \t  field: 'REG_DTM',\t\t\tcolId: 'REG_DTM',\thide:true },\r\n\t\t\t\t\t\t{headerName: '일련번호',  \t  field: 'SEQ_NO',\t\t\tcolId: 'SEQ_NO',\thide:true },\r\n\t\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t// leftColumnApi : {\r\n\t\t\t// },\t\t\t\t\t\t\r\n\t\t\tcallEvaluateCreateCallHistoryList : {\t\t\t\r\n\t\t\t\tgridId : 'callEvaluateCreateCallHistoryList',\r\n\t\t\t\tgridLable : '평가대상번호 생성 대상 통화이력',\r\n\t\t\t\tgridHeader  : \r\n\t\t\t\t[\r\n\t\t\t\t\t{headerName: 'No',\t\t\t field: 'recid',\t\t\tcolId: 'recid',\t\treq: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t{headerName: '센터',\t\t field: 'CENT_NM',\t\t\tcolId: 'CENT_NM',\t\t},\r\n\t\t\t\t\t{headerName: '팀',\t\t\t field: 'TEAM_NM',\t\t\tcolId: 'TEAM_NM',\t\t},\r\n\t\t\t\t\t{headerName: '상담원ID',\t field: 'USR_CD',\t\t\tcolId: 'USR_CD',\t\t},\r\n\t\t\t\t\t{headerName: '상담원명',\t field: 'USR_NM',\t\t\tcolId: 'USR_NM',\t\t},\r\n\t\t\t\t\t{headerName: '통화시작',  \t field: 'CALL_STRT_DTM',\tcolId: 'CALL_STRT_DTM',\t},\r\n\t\t\t\t\t{headerName: '센터CD',  \t field: 'CENT_CD',\t\t\tcolId: 'CENT_CD',\thide:true },\r\n\t\t\t\t\t{headerName: '팀CD',  \t\t field: 'TEAM_CD',\t\t\tcolId: 'TEAM_CD',\thide:true },\r\n\t\t\t\t\t{headerName: '고객관리번호',  field: 'CUS_MNGNO',\t\tcolId: 'CUS_MNGNO',\thide:true },\r\n\t\t\t\t\t{headerName: '통화종료일시',  field: 'TEL_CONN_DTM',\tcolId: 'TEL_CONN_DTM',\thide:true },\r\n\t\t\t\t\t{headerName: '녹취파일경로',  field: 'REC_FILE_PATH',\tcolId: 'REC_FILE_PATH',\thide:true },\r\n\t\t\t\t\t{headerName: '녹취파일명칭',  field: 'REC_FILE_NM',\t\tcolId: 'REC_FILE_NM',\thide:true },\r\n\t\t\t\t\t{headerName: '녹취아이디',    field: 'REC_ID',\t\t\tcolId: 'REC_ID',\thide:true },\r\n\t\t\t\t\t{headerName: '등록자',  \t  field: 'REG_ID',\t\t\tcolId: 'REG_ID',\thide:true },\r\n\t\t\t\t\t{headerName: '등록일시',  \t  field: 'REG_DTM',\t\t\tcolId: 'REG_DTM',\thide:true },\r\n\t\t\t\t\t{headerName: '일련번호',  \t  field: 'SEQ_NO',\t\t\tcolId: 'SEQ_NO',\thide:true },\r\n\t\t\t\t\t{headerName: '평가대상번호',   field: 'VLA_TGT_NO',\t\t\tcolId: 'VLA_TGT_NO',\thide:true },\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t// rightColumnApi : {\r\n\t\t\t// },\t\t\t\t\t\t\r\n\t\t\tdsCallSpList : DataLib.datalist.getInstance(),\r\n\t\t\tdsValTgtCtrCallSp : DataLib.datalist.getInstance(),\r\n\t\t\tdsRst: DataLib.datalist.getInstance(),\t\t\t\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\t\t\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"QAM050000_R00\"); \t\t\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (transId) {\r\n\t\t\t// case 'QAM020000_R01' :\r\n\t\t\t// \tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'QAM050000_R00':\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"QAM.R_Qam05Search1\",\r\n\t\t\t\t\tdatasetsend:\"\",\r\n\t\t\t\t\tdatasetrecv:\"dsCallSpList\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t//평가번호가 매칭이 안되는 쿼리가 존재할수 있는가?\r\n\t\t\t// case 'QAM050000_R02':\r\n\t\t\t// \ttransManager.setTransId(transId);\r\n\t\t\t// \ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t// \ttransManager.setCallBack(this.callback);\r\n\t\t\t// \ttransManager.addConfig({\r\n\t\t\t// \t\tdao: transManager.constants.dao.base,\r\n\t\t\t// \t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t// \t\tsqlmapid:\"QAM.R_Qam05Search2\",\r\n\t\t\t// \t\tdatasetsend:\"\",\r\n\t\t\t// \t\tdatasetrecv:\"dsValTgtCtrCallSp\",\r\n\t\t\t// \t});\r\n\t\t\t// \ttransManager.addDataset('', []);\r\n\t\t\t// \ttransManager.agent();\r\n\t\t\t// \tbreak;\r\n\t\t\t\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.group('callBack');\r\n\t\tswitch (res.id) {\r\n\t\tcase 'QAM050000_R00':\r\n\t\t\tif(res.data.dsCallSpList.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsCallSpList\", res.data.dsCallSpList);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'QAM020000_R02':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsValTgtCtrCallSp\", res.data.dsValTgtCtrCallSp);\t\t\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\t// case \"stt01BtnSearch\" :\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// \tif (this.validation(\"STT010000_R01\")) this.transaction(\"STT010000_R01\");\r\n\r\n\t\t\t\t\t\t// break;\r\n\t\t\t\t\tcase \"tempAdd\"\t:\r\n\t\t\t\t\t\tconsole.log(this.state.dsCallSpList);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase \"tempMinus\"\t:\r\n\t\t\t\t\t\t\tconsole.log('여기');\r\n\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\r\n\t\t\t\t\tdefault : break;\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptStringTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, string : {...this.state.textFieldProps.string, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tradio : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'rdoTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : e.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'singleChkTest' :\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'stt01RangeCalStrt':\r\n\t\t\t\t\t\tthis.setState({...this.state, stt01RangeCalendarProps : {...this.state.stt01RangeCalendarProps, startDate : e.target.value}});\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'stt01RangeCalEnd':\r\n\t\t\t\t\t\tthis.setState({...this.state, stt01RangeCalendarProps : {...this.state.stt01RangeCalendarProps, endDate : e.target.value}});\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'cmbUser':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsGrp);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tconsole.log('onRowClicked');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\t\t\t\tconsole.log('onCellFocused');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\tconsole.log('onCellClicked');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\tconsole.log('onCellDoubleClicked');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tconsole.log('onCellValueChanged');\r\n\t\t\t\tconsole.log(e);\r\n\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"통화일자\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={200}/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tid = {this.state.buttonSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.buttonSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.buttonSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.buttonSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr = {10}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"500px\"\r\n\t\t\t\t\t\t\t\tid={this.state.callHistoryList.id}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.callHistoryList.gridLabel}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsCallSpList}\r\n\t\t\t\t\t\t\t\theader = {this.state.callHistoryList.gridHeader}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdnlExcelBtn = {false}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel width=\"1%\">\t\t\t\t\t\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {'tempAdd'}\r\n\t\t\t\t\t\t\tvalue = {'+'}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {'tempMinus'}\r\n\t\t\t\t\t\t\tvalue = {'-'}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={\"평가대상번호 생성규칙\"}/>\r\n\t\t\t\t\t\t\t\t\t<Radio  \r\n\t\t\t\t\t\t\t\t\t\tdataset = {[\r\n\t\t\t\t\t\t\t\t\t\t\t{ key : 'rHtml',         txt : '수동입력'},\r\n\t\t\t\t\t\t\t\t\t\t\t{ key : 'rCss',          txt : '건별자동'},\r\n\t\t\t\t\t\t\t\t\t\t\t{ key : 'rJavascript',   txt : '전건자동'}\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {'key'}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {'txt'}\r\n\t\t\t\t\t\t\t\t\t\tselected = 'rCss'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={\"평가대상번호 수동입력\"}/>\r\n\t\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.buttonDupleCheckProps.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.buttonDupleCheckProps.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.buttonDupleCheckProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.buttonDupleCheckProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {10}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<ComponentPanel width=\"94%\">\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\theight= \"250px\"\r\n\t\t\t\t\t\t\t\t\t\tid={this.state.callEvaluateCreateCallHistoryList.id}\r\n\t\t\t\t\t\t\t\t\t\tareaName = {this.state.callEvaluateCreateCallHistoryList.gridLable}\r\n\t\t\t\t\t\t\t\t\t\theader = {this.state.callEvaluateCreateCallHistoryList.gridHeader}\r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsValTgtCtrCallSp}\r\n\t\t\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\t\t\t\t\t\t\t\t\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\t\tdnlExcelBtn = {false}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nexport default View;\r\n\r\n","// 상담원현황\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table, Label} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsUsrTopLankInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsUsrAvgByTeamInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsUsrList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"상담원명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={100}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"검색기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가표명\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"버전\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"100px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsUsrTopLankInfo}\r\n\t\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '성명',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '점수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"100px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsUsrAvgByTeamInfo}\r\n\t\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '팀명',\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '점수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\theight= \"300px\"\r\n\t\t\t\t\t\t\tdata = {this.state.dsUsrList}\r\n\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '센터명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '팀명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '상담원명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '계약건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '평균건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t{headerName: '통화품질관리',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 콜 평가 현황 조회\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsValCallList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<InputCalendar width={100}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"상담원\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"평가\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsValCallList}\r\n\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '센터',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '팀',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '평가건수',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '평균평점',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '평가상태',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 수동STT요청\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsFileList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<InputFileUpload/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\tdata = {this.state.dsFileList}\r\n\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담내용',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '파일명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t{headerName: '처리자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t{headerName: '작업상태',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","//STT 결과조회\r\nimport React from 'react';\r\n\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsSttResultInfo : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Label value=\"검색기간\"/>\r\n\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsSttResultInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'Call ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '작업상태',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '요청자',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '작업일자',\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea> \r\n\t\t\t\t\t\t\t\t\t<Button value=\"재요청\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"추가\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"추가\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid, Tabs, TabPanel} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\nimport STT030010 from '../STT030010';\r\nimport STT030020 from '../STT030020';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t\tthis.event.tab.onClick\t\t= this.event.tab.onClick.bind(this);\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\tevent = {\r\n\t\ttab : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tconsole.log('onClick');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"데이터 다운로드\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"파일업로드\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"학습진행\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Tabs tabWidth='100px' onClick = {this.event.tab.onClick}>\r\n\t\t\t\t\t\t\t\t<TabPanel id = {'STT030010'} index={0} label={'복합명사'}>\r\n\t\t\t\t\t\t\t\t\t<STT030010/>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t\t<TabPanel id = {'STT030020'} index={1} label={'문자'}>\r\n\t\t\t\t\t\t\t\t\t<STT030020/>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStudyList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습일자',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '타이틀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습상태',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '적용상태',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"오인식문장관리\"/>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"학습로그\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FullPanel>\r\n\t\t\t\t</FlexPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsMisSenList : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Label value=\"검색기간\"/>\r\n\t\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t\t<InputCalendar/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"오인식문장다운로드\"/>\r\n\t\t\t\t\t\t\t\t<Button value=\"오인식단어다운로드\"/>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsMisSenList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\t\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\teditable: true, req: true, headerCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '오인식 상담 원문',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '작성문장',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '결과 문장',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습전 정확도',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '학습후 정확도',\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 키워드관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props){\r\n\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsKeywordList : DataLib.datalist.getInstance(),\r\n\t\t\tdsInputCalendar : DataLib.datalist.getInstance\t([{iptRangeCalStr: \"\", iptRangeCalEnd:\"\" }]),\r\n\t\t\t\r\n\t\t\tgridProps : {\r\n\t\t\t\tid : 'testGrid',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: 'IDX',\t\tfield: 'IDX',\t\tcolId: 'IDX', editable: true, hide: true},\r\n\t\t\t\t\t{headerName: '키워드',\t\tfield: 'KEY_WORD',\t\tcolId: 'KEY_WORD', editable: true},\r\n\t\t\t\t\t{headerName: '키워드 타입',\t\t\tfield: 'KEY_TYPE',\t\tcolId: 'KEY_TYPE', editable: true},\r\n\t\t\t\t\t{headerName: '등록 아이디',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD'},\r\n\t\t\t\t\t{headerName: '등록일자',\t\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM'},\r\n\t\t\t\t]\r\n\t\t\t},\t\r\n\t\t\tcalendarProps : {\r\n\t\t\t\tid : 'iptCalTest',\r\n\t\t\t\tvalue : '20200831',\r\n\t\t\t\tcloseCalendar : true,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdisableCalendar : false,\r\n\t\t\t\tformat : 'y-MM-dd',\r\n\t\t\t\tisOpen : false,\r\n\t\t\t\tmaxDate : null,\r\n\t\t\t\tminDate : null,\r\n\t\t\t\trequired : false,\r\n\t\t\t\treturnValue : 'start'\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tstId : 'iptRangeCalStrtTest',\r\n\t\t\t\tendId : 'iptRangeCalEndTest',\r\n\t\t\t\tstartDate : '20200801',\r\n\t\t\t\tendDate : '20200831',\r\n\t\t\t},\r\n\t}\r\n\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SAM050000_R01\"))\r\n\t\t\tthis.transaction(\"SAM050000_R01\")\t\t\t\t\r\n\t}\r\n\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SAM050000_R01':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SAM050000_H01':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SAM050000_R01':\t\t\t\t\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_getKeywordList\",\r\n\t\t\t\t\tdatasetsend:\"dsKeyword\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log('debug ccccchhh');\r\n\t\t\t\t// console.log(this.state.dsKeywordList.getRecords());\r\n\t\t\t\tconsole.log(this.state.dsInputCalendar);\r\n\t\t\t\ttransManager.addDataset('dsKeyword', this.state.dsInputCalendar.getTransRecords());\r\n\t\t\t\t\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SAM050000_H01': \t\r\n\t\t\t\t\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid:\"STT.H_handleTEST\",\r\n\t\t\t\t\tdatasetsend:\"dsKeywordList\",\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(this.state.dsKeywordList.getTransRecords());\r\n\t\t\t\ttransManager.addDataset('dsKeywordList', this.state.dsUserList.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SAM050000_R01':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsKeywordList\", res.data.dsRst);\r\n\t\t\tbreak;\r\n\t\tcase 'SAM050000_H01':\r\n\t\t\tthis.transaction(\"SAM050000_R01\");\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\t\t\r\n\t\t\tonClick: (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\r\n\t\t\t\tcase 'btnSearch':\r\n\t\t\t\t\tif (this.validation(\"SAM050000_R01\")) this.transaction(\"SAM050000_R01\");\r\n\t\t\t\t\tbreak;\t\t\t\t\r\n\t\t\t\tcase 'btnSave':\r\n\t\t\t\t\tif (this.validation(\"SAM050000_H01\")) this.transaction(\"SAM050000_H01\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\t\t\t\t\r\n\t\t\t\tComLib.setStateValue(this, \"dsKeywordList\", e.index, e.col, e.newValue);\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tComLib.setStateRecords(this, \"dsKeywordList\", e.data, e.callback);\r\n\t\r\n\t\t\t},\r\n\t\t\tonInsertRow : (e) => {\t\t\t\t\t\t\t\t\r\n\t\t\t\tconsole.log('onInsertRow');\r\n\t\t\t\tconsole.log(e);\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tthis.state.dsKeywordList.setRecords(e.data);\t\t\t\t\r\n\r\n\t\t\t\tComLib.setStateDs(this, \"dsKeywordList\", e.callback);\r\n\t\t\t},\r\n\t\t},\r\n\t\t\tinputcalendar : {\r\n\t\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : break;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : break;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tonChange : (e) => {\r\n\t\t\t\r\n\t\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\t\tcase 'iptCalTest' :\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({...this.state, calendarProps : {...this.state.calendarProps, value : e.target.value}});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'iptRangeCalStrtTest' :\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.state.dsInputCalendar.setValue(0, \"iptRangeCalStr\" , e.target.value);\r\n\t\t\t\t\t\t\t// alert(e.target.value);\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({...this.state, rangeCalndarProps : {...this.state.rangeCalendarProps, startDate : e.target.value}});\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'iptRangeCalEndTest' :\r\n\t\t\t\t\t\t\tthis.state.dsInputCalendar.setValue(0, \"iptRangeCalEnd\" , e.target.value);\r\n\t\t\t\t\t\t\t// alert(e.target.value);\r\n\t\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, endDate : e.target.value}});\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : break;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\r\n\t\t\t\t\t\t{/* <RelativeGroup> */}\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기간\"/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tstId = {this.state.rangeCalendarProps.stId}\r\n\t\t\t\t\t\t\t\t\t\tendId = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"타입\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button id = \"btnSearch\" value = {\"조회\"} onClick = {this.event.button.onClick}/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t{/* </RelativeGroup> */}\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.gridProps.id} ref={this.state.gridProps.id}\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\theader = {this.state.gridProps.header}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsKeywordList} \r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button id = \"btnSave\" value = {\"저장\"} onClick = {this.event.button.onClick}/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 코드관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield             } from 'components';\r\nimport { BasicButton as Button } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsBigCdList : DataLib.datalist.getInstance(),\r\n\t\t\tdsSmlCdList : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tbtnSearchProps : {\r\n\t\t\t\tid       : 'searchBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '조회',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\r\n\t\t\tbtnBigSaveProps : {\r\n\t\t\t\tid       : 'bigSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '저장',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\r\n\t\t\tbtnSmlSaveProps : {\r\n\t\t\t\tid       : 'smlSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '저장',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgrdBigCdProps : {\r\n\t\t\t\tid : 'bigCdGrid',\r\n\t\t\t\tareaName : '대분류 코드',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '대분류코드',\t field: 'BIG_CD',\tcolId: 'BIG_CD', \teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '대분류코드명', field: 'BIG_NM',\tcolId: 'BIG_NM',\t editable: true, req: true},\r\n\t\t\t\t\t{headerName: '사용여부',\t field: 'USE_YN',\tcolId: 'USE_YN',\t editable: true, req: true, cellRenderer:'selectbox'},\r\n\t\t\t\t\t\r\n\t\t\t\t],\r\n\t\t\t},\t\t\t\r\n\r\n\t\t\tgrdSmlCdProps : {\r\n\t\t\t\tid : 'smlCdGrid',\r\n\t\t\t\tareaName : '소분류 코드',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '소분류코드',\tfield: 'SML_CD',\tcolId: 'SML_CD',\teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '코드명',\t\tfield: 'SML_NM',\tcolId: 'SML_NM',\teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_NO',\tcolId: 'SORT_NO',\teditable: true, req: true},\r\n\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_YN',\tcolId: 'USE_YN',\teditable: true, req: true},\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptBigCdNm : {\r\n\t\t\t\t\tid          : 'iptBigCdNm',\r\n\t\t\t\t\tname        : 'iptBigCdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '대분류코드/코드명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SYS010000_R01\")) this.transaction(\"SYS010000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t// console.log(\"updated!!\");\r\n\t\t// console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet chkCnt = 0;\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SYS010000_R01' :\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS010000_R02' :\t\t\t\t\r\n\t\t\t\tlet rowType = params[2];\r\n\t\t\t\tif (rowType !== 'u' && rowType !== 'r') {\r\n\t\t\t\t\t\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", []);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS010000_H01' :\r\n\t\t\t\tfor ( let intA = 0; intA < this.state.dsBigCdList.records.length; intA ++ ) {\r\n\t\t\t\t\tif (this.state.dsBigCdList.getValue(intA, 'rowtype') !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsBigCdList.getValue(intA, 'BIG_CD'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 대분류 코드를 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsBigCdList.getValue(intA, 'BIG_NM'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 코드명을 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsBigCdList.getValue(intA, 'USE_YN'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 사용여부를 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( let intB = 0; intB < this.state.dsBigCdList.records.length; intB ++ ) {\r\n\t\t\t\t\t\tif (intA !== intB && this.state.dsBigCdList.getValue(intA, 'BIG_CD') === this.state.dsBigCdList.getValue(intB, 'BIG_CD')) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', intA + '행과 ' + intB + '행의 대분류 코드가 중복 되었습니다.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.state.dsBigCdList.records.length < 1 || chkCnt === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', '변경된 행이 없습니다..');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS010000_H02' :\r\n\t\t\t\tfor ( let intA = 0; intA < this.state.dsSmlCdList.records.length; intA ++ ) {\r\n\t\t\t\t\tif (this.state.dsSmlCdList.getValue(intA, 'rowtype') !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsSmlCdList.getValue(intA, 'SML_CD'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 소분류 코드를 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsSmlCdList.getValue(intA, 'SML_NM'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 코드명을 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsSmlCdList.getValue(intA, 'SORT_NO'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 정렬순서를 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (StrLib.isNull(this.state.dsSmlCdList.getValue(intA, 'USE_YN'))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', intA + '행의 사용여부를 입력해 주시기 바랍니다.');\r\n\t\t\t\t\t\t\r\n                        return false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor ( let intB = 0; intB < this.state.dsSmlCdList.records.length; intB ++ ) {\r\n\t\t\t\t\t\tif (intA !== intB && this.state.dsSmlCdList.getValue(intA, 'SML_CD') === this.state.dsSmlCdList.getValue(intB, 'SML_CD')) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', intA + '행과 ' + intB + '행의 소분류 코드가 중복 되었습니다.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.refs.bigCdGrid.getSelectedRows().length < 1) {\r\n\t\t\t\t\tComLib.openDialog('A', '선택된 대분류 코드가 없습니다.');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} \r\n\t\t\t\t\t\r\n\t\t\t\tif (this.state.dsSmlCdList.records.length < 1 || chkCnt === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', '변경된 행이 없습니다..');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tconsole.log(transId);\r\n\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'SYS010000_R01' :\r\n\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getBigCdList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsBigCdRecv\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsUser', [{\"BIG_CD_NM\": this.state.textFieldProps.iptBigCdNm.value}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SYS010000_R02' :\r\n\t\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\t\tsqlmapid   : \"SYS.R_getSmlCdList\",\r\n\t\t\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\t\t\tdatasetrecv: \"dsSmlCdRecv\",\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\ttransManager.addDataset('dsUser', [{\"BIG_CD\": params[1]}]);\r\n\t\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak\r\n\r\n\t\t\t\t\tcase 'SYS010000_H01' :\r\n\t\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\t\t\tsqlmapid   : \"SYS.H_handleBigCdList\",\r\n\t\t\t\t\t\t\tdatasetsend: \"dsBigCdList\",\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\ttransManager.addDataset('dsBigCdList', this.state.dsBigCdList.getTransRecords());\r\n\t\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SYS010000_H02' :\r\n\t\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\t\t\tsqlmapid   : \"SYS.H_handleSmlCdList\",\r\n\t\t\t\t\t\t\tdatasetsend: \"dsSmlCdList\",\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\ttransManager.addDataset('dsSmlCdList', this.state.dsSmlCdList.getRecords());\r\n\t\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tlet data;\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS010000_R01':\r\n\t\t\t\tif (res.data.dsBigCdRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsBigCdList\", res.data.dsBigCdRecv);\r\n\t\t\t\t\r\n\t\t\t\t\tthis.refs.bigCdGrid.moveRow(0);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata = this.refs.bigCdGrid.state.gridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.setSelected(true);\r\n\r\n\t\t\t\t\tlet bigCd   = \"\";\r\n\t\t\t\t\tlet rowType = \"\";\r\n\t\r\n\t\t\t\t\tbigCd   = this.state.dsBigCdList.records[0].BIG_CD\r\n\t\t\t\t\trowType = 'r';\r\n\t\r\n\t\t\t\t\tif (this.validation(\"SYS010000_R02\", bigCd, rowType)) this.transaction(\"SYS010000_R02\", bigCd);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", []);\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", []);\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010000_R02':\t\r\n\t\t\t\tif (res.data.dsSmlCdRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", res.data.dsSmlCdRecv);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata = this.refs.smlCdGrid.state.gridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.setSelected(true);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", []);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010000_H01' :\r\n\t\t\t\tComLib.openDialog(\"A\", \"대분류 코드가 정상적으로 저장되었습니다.\");\r\n\t\t\t\t\r\n\t\t\t\tthis.transaction(\"SYS010000_R01\");\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010000_H02' :\r\n\t\t\t\tComLib.openDialog(\"A\", \"소분류 코드가 정상적으로 저장되었습니다.\");\r\n\r\n\t\t\t\tlet bigCd   = this.refs.bigCdGrid.getSelectedRows()[0].BIG_CD;\r\n\r\n\t\t\t\tthis.transaction(\"SYS010000_R02\", bigCd);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"searchBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_R01\")) this.transaction(\"SYS010000_R01\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"bigSaveBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_H01\")) this.transaction(\"SYS010000_H01\");\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlSaveBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_H02\")) this.transaction(\"SYS010000_H02\");\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tif (e.id === \"bigCdGrid\") {\r\n\t\t\t\t\tlet bigCd   = \"\";\r\n\t\t\t\t\tlet rowType = \"\";\r\n\r\n\t\t\t\t\tbigCd = e.data.BIG_CD\r\n\t\t\t\t\trowType = e.data.rowtype;\r\n\r\n\t\t\t\t\tif (this.validation(\"SYS010000_R02\", bigCd, rowType)) this.transaction(\"SYS010000_R02\", bigCd);\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellFocused: () => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\tconsole.log('onCellClicked');\r\n\t\t\t\tconsole.log(e.data);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: () => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: () => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: () => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: () => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\t\t\t\t// console.log('onRowSelected');\r\n\t\t\t\t// console.log(e);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tconsole.log(\"2\")\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tif (this.refs.bigCdGrid.getSelectedRows() === 0) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\r\n\t\t\t\t\t\t} else if (this.refs.bigCdGrid.getSelectedRows()[0].rowtype === \"c\") {\r\n\t\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '신규로 추가된 행만 삭제 가능합니다.');\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tif (this.refs.smlCdGrid.getSelectedRows() === 0) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\r\n\t\t\t\t\t\t} else if (this.refs.smlCdGrid.getSelectedRows()[0].rowtype === \"c\") {\r\n\t\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '신규로 추가된 행만 삭제 가능합니다.');\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"bigCdGrid\" :\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsBigCdList\", e.data);\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", []);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"smlCdGrid\" :\r\n\t\t\t\t\t\tif (this.refs.bigCdGrid.getSelectedRows().length < 1) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '대분류 코드를 먼저 선택 하셔야 합니다.');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else if (this.refs.bigCdGrid.getSelectedRows()[0].rowtype !== 'r') {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '대분류 코드를 먼저 저장 하셔야 합니다.');\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\te.data[this.state.dsSmlCdList.records.length -1].BIG_CD = this.refs.bigCdGrid.getSelectedRows()[0].BIG_CD\r\n\r\n\t\t\t\t\t\t\tComLib.setStateRecords(this, \"dsSmlCdList\", e.data);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptBigCdNm' :\r\n\t\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\t\t\t\ttextFieldProps : { ...this.state.textFieldProps,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t iptBigCdNm : {...this.state.textFieldProps.iptBigCdNm, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue : e.target.value }}});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"대분류코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptBigCdNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptBigCdNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptBigCdNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptBigCdNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptBigCdNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptBigCdNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptBigCdNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptBigCdNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden   = {this.state.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdBigCdProps.id} \r\n\t\t\t\t\t\t\t\t\tref      = {this.state.grdBigCdProps.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdBigCdProps.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdBigCdProps.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsBigCdList}\r\n\t\t\t\t\t\t\t\t\theight   = \"400px\"\r\n\t\t\t\t\t\t\t\t\trowNum   = {true}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow          = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow          = {this.event.grid.onInsertRow}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnBigSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnBigSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnBigSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnBigSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdSmlCdProps.id} \r\n\t\t\t\t\t\t\t\t\tref      = {this.state.grdSmlCdProps.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdSmlCdProps.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdSmlCdProps.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsSmlCdList}\r\n\t\t\t\t\t\t\t\t\theight   = \"400px\"\r\n\t\t\t\t\t\t\t\t\trowNum   = {true}\r\n\r\n\t\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow          = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow          = {this.event.grid.onInsertRow}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnSmlSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnSmlSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSmlSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnSmlSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 사용자관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, TransManager, StrLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tlet password = '';\r\n\t\tlet clickBtnId = '';\r\n\t\tthis.state = {\r\n\t\t\tdsSrch: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", USR_CD: \"\", AUTH_LV: \"\", SRCH_DV: \"NM\", SRCH_VALUE: \"\"}]),\r\n\t\t\tdsSrchTemp: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", USR_CD: \"\"}]),\r\n\t\t\tdsUserList : DataLib.datalist.getInstance(),\r\n\t\t\tdsUserDet: DataLib.datalist.getInstance([{USR_CD: \"\", USR_NM: \"\", AUTH_LV: \"\", CENT_CD: \"\", TEAM_CD: \"\", ACT_STA_CD: \"\", USE_YN: \"\"}]),\r\n\t\t\t\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnSave : {\r\n\t\t\t\t\tid       : 'btnSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnAdd : {\r\n\t\t\t\t\tid       : 'btnAdd',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '신규',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnInitLogin : {\r\n\t\t\t\t\tid       : 'btnInitLogin',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '로그인초기화',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnInitPwd : {\r\n\t\t\t\t\tid       : 'btnInitPwd',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '비밀번호초기화',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tcmbSrchCent : {\r\n\t\t\t\t\tid : 'cmbSrchCent',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tcmbSrchTeam : {\r\n\t\t\t\t\tid : 'cmbSrchTeam',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tcmbSrchAuth : {\r\n\t\t\t\t\tid : 'cmbSrchAuth',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tcmbSrchDv : {\r\n\t\t\t\t\tid : 'cmbSrchDv',\r\n\t\t\t\t\tdataset : [\r\n\t\t\t\t\t\t{value : 'NM', name : '성명'},\r\n\t\t\t\t\t\t{value : 'ID', name : 'ID'}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t//value : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// 상세정보 영역\r\n\t\t\t\tcmbCentCd : {\r\n\t\t\t\t\tid : 'cmbCentCd',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tcmbTeamCd : {\r\n\t\t\t\t\tid : 'cmbTeamCd',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tcmbAuthCd : {\r\n\t\t\t\t\tid : 'cmbAuthCd',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\ttextSrchWord : {\r\n\t\t\t\t\tid          : 'iptSrchword',\r\n\t\t\t\t\tname        : 'iptSrchword',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '성명/ID',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\ttextUsrCd : {\r\n\t\t\t\t\tid          : 'iptUsrCd',\r\n\t\t\t\t\tname        : 'iptUsrCd',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t\ttextUsrNm : {\r\n\t\t\t\t\tid          : 'iptUsrNm',\r\n\t\t\t\t\tname        : 'iptUsrNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tsingleCheckProp : {\r\n\t\t\t\tid : 'chkUseYn',\r\n\t\t\t\tindex : 0,\r\n\t\t\t\tkeyProp : 'SYS020000_chkUseYn',\r\n\t\t\t\tvalue : '',\r\n\t\t\t\tchecked : 'N',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tradioProps : {\r\n\t\t\t\tid : 'rdoActStaCd',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'A',        txt : '활동'},\r\n\t\t\t\t\t{ key : 'I',        txt : '미활동'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tselected : 'A'\r\n\t\t\t},\r\n\t\t\tgridProps : {\r\n\t\t\t\tid : 'grdUserList',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '센터코드',\t\tfield: 'CENT_NM',\t\tcolId: 'CENT_NM'},\r\n\t\t\t\t\t{headerName: '팀코드',\t\t\tfield: 'TEAM_NM',\t\tcolId: 'TEAM_NM'},\r\n\t\t\t\t\t{headerName: '사용자ID',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD'},\r\n\t\t\t\t\t{headerName: '사용자명',\t\tfield: 'USR_NM',\t\tcolId: 'USR_NM'},\r\n\t\t\t\t\t{headerName: '권한',\t\t\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV'},\r\n\t\t\t\t\t{headerName: '등록일자',\t\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM'},\r\n\t\t\t\t],\r\n\t\t\t\tpaging : {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tsize : 40,\r\n\t\t\t\t\tpage : 1\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\t\r\n\t}\r\n\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS020000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'SYS020000_H01' :\r\n\t\t\t\t// 사용자ID, 성명, 권한, 센터, 팀, 활동여부\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDet.getValue(0, 'USR_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', '사용자ID를 입력해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDet.getValue(0, 'USR_NM'))) {\r\n\t\t\t\t\tComLib.openDialog('A', '사용자성명을 입력해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDet.getValue(0, 'AUTH_LV'))) {\r\n\t\t\t\t\tComLib.openDialog('A', '권한을 선택해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDet.getValue(0, 'CENT_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', '센터를 선택해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDet.getValue(0, 'TEAM_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', '팀을 선택해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDet.getValue(0, 'ACT_STA_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', '활동상태를 선택해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS020000_R02':\r\n\t\t\tcase 'SYS020000_D01':\r\n\t\t\t\t// 그리드 데이터 선택\r\n\t\t\t\tconsole.log(this.state.dsUserDet.records[0]);\r\n\t\t\t\tlet usrCd = this.state.dsUserDet.records[0].USR_CD;\r\n\r\n\t\t\t\tif(StrLib.isNull(usrCd)) {\r\n\t\t\t\t\tComLib.openDialog('A', '사용자를 선택해 주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\t\tcase 'SYS020000_R01' :\r\n\t\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getUserList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsUserList\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet param = {\r\n\t\t\t\t\t\t\"CENT_CD\": this.state.dsSrch.records[0][\"CENT_CD\"],//this.state.selectboxProps.cmbSrchCent.value, \r\n\t\t\t\t\t\t\"TEAM_CD\": this.state.dsSrch.records[0][\"TEAM_CD\"],//this.state.selectboxProps.cmbSrchTeam.value,\r\n\t\t\t\t\t\t\"AUTH_LV\": this.state.dsSrch.records[0][\"AUTH_LV\"],//this.state.selectboxProps.cmbSrchAuth.value, \r\n\t\t\t\t\t\t\"SRCH_DV\": this.state.dsSrch.records[0][\"SRCH_DV\"],//this.state.selectboxProps.cmbSrchDv.value,\r\n\t\t\t\t\t\t\"SRCH_VALUE\": this.state.dsSrch.records[0][\"SRCH_VALUE\"],//this.state.textFieldProps.value\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttransManager.addDataset('dsSend', [ param ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SYS020000_R02' :\r\n\t\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_PwdStndCode',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsPwdStndCd'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 비밀번호 초기 기준값 코드로 셋팅 해야함.\r\n\t\t\t\t\tthis.password = '00000';\r\n\t\t\t\t\tlet stndParam = {\r\n\t\t\t\t\t\tCENT_CD: this.state.dsUserDet.records[0][\"CENT_CD\"],\r\n\t\t\t\t\t\tSTND_CD: this.password\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', [ stndParam ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SYS020000_R03' :\r\n\t\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getUserCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsgetUserCheck'\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', this.state.dsUserDet.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SYS020000_H01' :\r\n\t\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.update,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.U_mergeUserInfo\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\t// 비밀번호 정보 추가 해야함. (기준값 테이블에서 조회한 값으로 셋팅)\r\n\t\t\t\t\tlet rowtype = this.state.dsUserDet.getRow(0)[0].rowtype;\r\n\t\t\t\t\tif(rowtype === 'c') {\r\n\t\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\t\t\tdatasetsend: 'dsSendPwd',\r\n\t\t\t\t\t\t\tcolumnid: 'INIT_PWD'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh      : transManager.constants.crudh.update,\r\n\t\t\t\t\t\t\tsqlmapid   : \"SYS.C_PwdInit\",\r\n\t\t\t\t\t\t\tdatasetsend: \"dsSendPwd\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet dsPwdData = {\r\n\t\t\t\t\t\tUSR_CD: this.state.dsUserDet.records[0][\"USR_CD\"],\r\n\t\t\t\t\t\tINIT_PWD: this.password,\r\n\t\t\t\t\t\tCHG_ID: this.state.dsUserDet.records[0][\"CHG_ID\"]\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttransManager.addDataset('dsSendPwd', [ dsPwdData ] );\r\n\t\t\t\t\ttransManager.addDataset('dsSend', this.state.dsUserDet.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SYS020000_U01' :\r\n\t\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\t\tdatasetsend: 'dsSendPwd',\r\n\t\t\t\t\t\tcolumnid: 'INIT_PWD'\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.update,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.C_PwdInit\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSendPwd\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdsPwdData = {\r\n\t\t\t\t\t\tUSR_CD: this.state.dsUserDet.records[0][\"USR_CD\"],\r\n\t\t\t\t\t\tINIT_PWD: this.password,\r\n\t\t\t\t\t\tCHG_ID: this.state.dsUserDet.records[0][\"CHG_ID\"]\r\n\t\t\t\t\t};\r\n\t\t\t\t\ttransManager.addDataset('dsSendPwd', [ dsPwdData ] );\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'SYS020000_D01' :\r\n\t\t\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh: transManager.constants.crudh.destroy,\r\n\t\t\t\t\t\t\tsqlmapid: 'SYS.D_LoginInfo',\r\n\t\t\t\t\t\t\tdatasetsend: 'dsSend'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttransManager.addDataset('dsSend', this.state.dsUserDet.getRow(0));\r\n\t\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS020000_R01':\r\n\t\t\t\tconsole.log(' R01 ');\r\n\t\t\t\tconsole.log(res.data.dsUserList);\r\n\t\t\t\t\r\n\t\t\t\tComLib.setStateRecords(this, \"dsUserList\", []);\r\n\t\t\t\tthis.setState({...this.state, dsUserDet : DataLib.datalist.getInstance([{USR_CD: \"\", USR_NM: \"\", AUTH_LV: \"\", CENT_CD: \"\", TEAM_CD: \"\", ACT_STA_CD: \"\", USE_YN: \"\"}])});\r\n\t\t\t\t\r\n\t\t\t\tif (res.data.dsUserList.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsUserList\", res.data.dsUserList);\r\n\t\t\t\t} \r\n\t\t\t\tbreak; \r\n\t\t\tcase 'SYS020000_R02':\r\n\t\t\t\tthis.password = res.data.dsPwdStndCd[0].STND_VL;\r\n\t\t\t\tlet pwdStndUseYn = res.data.dsPwdStndCd[0].APY_YN;\r\n\r\n\t\t\t\tif (this.password === null || this.password === '' || pwdStndUseYn === 'N') {\r\n\t\t\t\t\t// 해당 제휴사의 비밀번호 기준값이 존재하지 않습니다.[!@]\\n관리자에게 문의해 주십시오\r\n\t\t\t\t\tComLib.openDialog('A', '해당 센터의 비밀번호 기준값이 존재하지 않습니다. \\n관리자에게 문의해 주십시오.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 버튼 트랜젝션 컨트롤\r\n\t\t\t\tthis.btnTransactionControl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS020000_R03':\r\n\t\t\t\tif (res.data.dsgetUserCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', '이미 사용하고 있는 사용자코드입니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.transaction(\"SYS020000_H01\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS020000_H01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"저장되었습니다.\");\r\n\t\t\t\tthis.transaction(\"SYS020000_R01\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS020000_D01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"로그인초기화 되었습니다.\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tthis.clickBtnId = e.target.id;\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t// 조회\r\n\t\t\t\t\t\tthis.transaction(\"SYS020000_R01\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnAdd\" : \t// 신규\r\n\t\t\t\t\t\t//this.setState({...this.state, dsUserList : {...this.state.dsUserList, records: rowData.getRecords()}});\r\n\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : 'A'}});\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : 'Y'}});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.setStateRecords(this, \"dsUserDet\", [{\r\n\t\t\t\t\t\t\trowtype: \"c\",\r\n\t\t\t\t\t\t\tUSR_CD: \"\", \r\n\t\t\t\t\t\t\tUSR_NM: \"\", \r\n\t\t\t\t\t\t\tAUTH_LV: \"\", \r\n\t\t\t\t\t\t\tCENT_CD: \"\", \r\n\t\t\t\t\t\t\tTEAM_CD: \"\", \r\n\t\t\t\t\t\t\tACT_STA_CD: \"A\", \r\n\t\t\t\t\t\t\tUSE_YN: \"Y\", \r\n\t\t\t\t\t\t\tREG_ID: ComLib.getSession(\"gdsUserInfo\")[0].USR_CD, \r\n\t\t\t\t\t\t\tCHG_ID: ComLib.getSession(\"gdsUserInfo\")[0].USR_CD}]\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log('btnAdd');\r\n\t\t\t\t\t\tconsole.log(this.state.dsUserDet);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnSave\" : \t// 저장\r\n\t\t\t\t\t\tif (this.validation(\"SYS020000_H01\")) {\r\n\t\t\t\t\t\t\t// 기준값 조회\r\n\t\t\t\t\t\t\tthis.transaction('SYS020000_R02');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnInitLogin\" : \t// 로그인 초기화\r\n\t\t\t\t\t\tif(this.validation(\"SYS020000_D01\")) this.transaction(\"SYS020000_D01\"); \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnInitPwd\" : \t// 비밀번호 초기화\r\n\t\t\t\t\t\t// 기준값 조회\r\n\t\t\t\t\t\tif(this.validation(\"SYS020000_R02\"))this.transaction(\"SYS020000_R02\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tconsole.log('onRowClicked');\r\n\t\t\t\tconsole.log(e);\r\n\r\n\t\t\t\tComLib.setStateRecords(this, \"dsUserDet\", this.state.dsUserList.getRow(e.index));\r\n\t\t\t\t\r\n\t\t\t\t// 상세정보 라디오 셋팅\r\n\t\t\t\tif(e.data.ACT_STA_CD === 'A') {\r\n\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : 'A'}});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : 'I'}});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 상세정보 체크박스 셋팅\r\n\t\t\t\tif(e.data.USE_YN === 'Y') {\r\n\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : 'Y'}});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : 'N'}});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(e.data.CENT_CD === '' || e.data.CENT_CD === null) {\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"CENT_CD\", \"\");\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"TEAM_CD\", \"\");\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellFocused: () => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: () => {\r\n\t\t\t\t//console.log('onCellClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: () => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: () => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: () => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: () => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\t\t\t\t// console.log('onRowSelected');\r\n\t\t\t\t// console.log(e);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tconsole.log(\"2\")\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tconsole.log('onInsertRow');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tthis.state.dsUserList.setRecords(e.data);\r\n\t\t\t\t//this.state.dsUserList.setValue(e.index, \"CENT_CD\", \"0000000\");\r\n\t\t\t\t//this.state.dsUserList.setValue(e.index, \"TEAM_CD\", \"0000001\");\r\n\r\n\t\t\t\tComLib.setStateDs(this, \"dsUserList\", e.callback);\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptSrchword' :\r\n\t\t\t\t\t\t//this.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, string : {...this.state.textFieldProps.string, value : e.target.value }}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRCH_VALUE\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptUsrCd' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptUsrNm' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"USR_NM\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tradio : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'rdoActStaCd' :\r\n\t\t\t\t\t\t//alert(e.value);\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : e.value}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"ACT_STA_CD\", e.value);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconsole.log(this.state.dsUserDet);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'chkUseYn' :\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"USE_YN\", (e.checked) ? 'Y' : 'N');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t//console.log(this.state.dsUserDet);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tconsole.log(e.id);\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'cmbSrchCent' : \r\n\t\t\t\t\t\tconsole.log('cmbSrchCent onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchCent : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(e.target.value !== '') {\r\n\t\t\t\t\t\t\tlet teamCd = [];\r\n\t\t\t\t\t\t\tteamCd = DataLib.datalist.getInstance(ComLib.getTeamList(this.state.dsSrchTemp)).find('CENT_CD', e.target.value);\r\n\t\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", teamCd[0].CODE);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", \"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbSrchTeam' :\r\n\t\t\t\t\t\tconsole.log('cmbSrchTeam onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchTeam : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbSrchAuth' :\r\n\t\t\t\t\t\tconsole.log('cmbSrchAuth onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchAuth : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"AUTH_LV\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbSrchDv' :\r\n\t\t\t\t\t\tconsole.log('cmbSrchDv onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchDv : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRCH_DV\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t// 상세정보 영역\r\n\t\t\t\t\tcase 'cmbCentCd' : \r\n\t\t\t\t\t\tconsole.log('cmbCentCd onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchCent : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif(e.target.value !== '') {\r\n\t\t\t\t\t\t\tlet teamCd = [];\r\n\t\t\t\t\t\t\tteamCd = DataLib.datalist.getInstance(ComLib.getTeamList(this.state.dsSrchTemp)).find('CENT_CD', e.target.value);\r\n\t\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"TEAM_CD\", teamCd[0].CODE);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"TEAM_CD\", \"\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbTeamCd' :\r\n\t\t\t\t\t\tconsole.log('cmbTeamCd onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchTeam : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbAuthCd' :\r\n\t\t\t\t\t\tconsole.log('cmbAuthCd onChange');\r\n\t\t\t\t\t\t//this.setState({...this.state, selectboxProps : {...this.state.selectboxProps, cmbSrchAuth : {selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"AUTH_LV\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 버튼 트랜젝션 컨트롤\r\n\tbtnTransactionControl =() => {\r\n\t\tconsole.log('clickBtn :: ' + this.clickBtnId);\r\n\t\tswitch (this.clickBtnId) {\r\n\t\t\tcase 'btnSave' : // 저장\r\n\t\t\t\t// 신규이면 사용자코드 중복체크\r\n\t\t\t\tlet rowtype = this.state.dsUserDet.records[0][\"rowtype\"];\r\n\t\t\t\tif(rowtype === 'c') {\r\n\t\t\t\t\tthis.transaction(\"SYS020000_R03\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.transaction(\"SYS020000_H01\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'btnInitPwd':\t// 비밀번호 초기화\r\n\t\t\t\tthis.transaction(\"SYS020000_U01\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbSrchCent.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbSrchTeam.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getTeamList(this.state.dsSrch), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"권한\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbSrchAuth.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"AUTH_LV\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('AUTH_LV'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.cmbSrchAuth.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbSrchDv.id}\r\n\t\t\t\t\t\t\t\t\t\t//value = {this.state.selectboxProps.cmbSrchDv.value}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"SRCH_DV\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.cmbSrchDv.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.cmbSrchDv.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.textSrchWord.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.textSrchWord.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.dsSrch.records[0][\"SRCH_VALUE\"]}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.textSrchWord.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.textSrchWord.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.textSrchWord.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.textSrchWord.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.textSrchWord.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\tref={this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\theader = {this.state.gridProps.header}\r\n\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\trowNum = {true}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsUserList}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\r\n\t\t\t\t\t\t\t\tpaging = {true}\r\n\t\t\t\t\t\t\t\tinfinite = {true}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자 ID\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200} \r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.textUsrCd.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.textUsrCd.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.dsUserDet.records[0][\"USR_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.textUsrCd.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.textUsrCd.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.textUsrCd.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.textUsrCd.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.textUsrCd.disabled}\r\n\t\t\t\t\t\t\t\t\t\t//disabled = {this.state.dsUserDet.getValue(0, 'rowType') !== newScrmObj.constants.crud.read ? false : true}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200} \r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.textUsrNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.textUsrNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.dsUserDet.records[0][\"USR_NM\"]}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.textUsrNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.textUsrNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.textUsrNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.textUsrNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.textUsrNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"권한\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbAuthCd.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsUserDet.records[0][\"AUTH_LV\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('AUTH_LV'), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.cmbAuthCd.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbCentCd.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsUserDet.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.cmbTeamCd.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getTeamList(this.state.dsSrch), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsUserDet.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"활동상태\"/>\r\n\t\t\t\t\t\t\t\t\t<Radio\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.radioProps.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.radioProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {this.state.radioProps.keyProp}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.radioProps.value}\r\n\t\t\t\t\t\t\t\t\t\t//value = {this.state.dsUserDet.records[0][\"ACT_STA_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.radioProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tdefaultSelected = {1}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.radioProps.selected}\r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.radioProps.data}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.radio.onChange}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.singleCheckProp.id}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {this.state.singleCheckProp.keyProp}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.singleCheckProp.value}\r\n\t\t\t\t\t\t\t\t\t\t//value = {this.state.dsUserDet.records[0][\"USE_YN\"]}\r\n\t\t\t\t\t\t\t\t\t\tchecked = {this.state.singleCheckProp.checked}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.singleCheckProp.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnInitLogin.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnInitLogin.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnInitLogin.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnInitLogin.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnInitPwd.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnInitPwd.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnInitPwd.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnInitPwd.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnAdd.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnAdd.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnAdd.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnAdd.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 메뉴관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, StrLib} from 'common';\r\nimport { TransManager } from '../../../common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsMenuInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsSel: DataLib.datalist.getInstance([{MNU_KND: \"\", USE_YN: \"\"}]),\r\n\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptMenuId : {\r\n\t\t\t\t\tid : 'iptMenuId',\r\n\t\t\t\t\tname : 'iptMenuId',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '메뉴ID',\r\n\t\t\t\t\tminLength : 1,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tiptMenuNm : {\r\n\t\t\t\t\tid : 'iptMenuNm',\r\n\t\t\t\t\tname : 'iptMenuNm',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '메뉴명',\r\n\t\t\t\t\tminLength : 1,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbtnMenuSearchProps : {\r\n\t\t\t\tid : 'menuSearchBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tbtnBMenuSaveProps : {\r\n\t\t\t\tid : 'menuSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '저장',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tgrdMenuCdProps : {\r\n\t\t\t\tid : 'menuCdGrid',\r\n\t\t\t\theader : [\r\n\t\t\t\t\t{headerName: '메뉴ID', field: 'MNU_ID', colId: 'MNU_ID', editable: true, req: true},\r\n\t\t\t\t\t{headerName: '메뉴명', field: 'MNU_NM', colId: 'MNU_NM', editable: true, req: true},\r\n\t\t\t\t\t{headerName: '상위메뉴ID', field: 'PARE_MNU_ID', colId: 'PARE_MNU_ID', editable: true, req: false},\r\n\t\t\t\t\t{headerName: '메뉴유형', field: 'MNU_KND', colId: 'MNU_KND', editable: true, req: true},\r\n\t\t\t\t\t{headerName: '파일경로', field: 'PGM_PATH', colId: 'PGM_PATH', editable: true, req: false},\r\n\t\t\t\t\t{headerName: '메뉴순서', field: 'SORT_ORD', colId: 'SORT_ORD', editable: true, req: true},\r\n\t\t\t\t\t{headerName: '사용여부', field: 'USE_YN', colId: 'USE_YN', editable: true, req: true},\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange   = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount() {\r\n\t\tif (this.validation(\"SYS030000_R01\")) this.transaction(\"SYS030000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\t\r\n\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS030000_R01':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS030000_H01':\r\n\t\t\t\tfor(let intA = 0; intA < this.state.dsMenuInfo.records.length; intA++){\r\n\t\t\t\t\tfor (let intB = 0; intB < this.state.dsMenuInfo.records.length; intB++) {\r\n\r\n\t\t\t\t\t\tif (intA !== intB && this.state.dsMenuInfo.getValue(intA, 'MNU_ID') === this.state.dsMenuInfo.getValue(intB, 'MNU_ID')) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', (intA+1) + '행과 메뉴ID가 중복 되었습니다.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(StrLib.isNull(this.state.dsMenuInfo.getValue(intB, 'MNU_ID'))){\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '메뉴ID를 입력해주세요.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tif(StrLib.isNull(this.state.dsMenuInfo.getValue(intB, 'MNU_NM'))){\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '메뉴명을 입력해주세요.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tif(StrLib.isNull(this.state.dsMenuInfo.getValue(intB, 'MNU_KND'))){\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '화면유형을 입력해주세요.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\tif(StrLib.isNull(this.state.dsMenuInfo.getValue(intB, 'SORT_ORD'))){\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '메뉴순서를 입력해주세요.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif(this.state.dsMenuInfo.getValue(intB, 'MNU_ID').length > 11 ) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '메뉴ID가 10글자를 초과하였습니다.');\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS030000_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"SYS.R_getMenuList\",\r\n\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t\tdatasetrecv:\"dsMenuRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUser', \r\n\t\t\t\t[{\r\n\t\t\t\t\t\"MENU_ID\": this.state.textFieldProps.iptMenuId.value, \r\n\t\t\t\t\t\"MENU_NM\": this.state.textFieldProps.iptMenuNm.value, \r\n\t\t\t\t\t\"MNU_KND\": this.state.dsSel.records[0][\"MNU_KND\"],\r\n\t\t\t\t\t\"USE_YN\": this.state.dsSel.records[0][\"USE_YN\"]\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\t//console.log(\"test1: \" + this.state.textFieldProps.iptMenuId.value);\r\n\t\t\t\t//console.log(\"test2: \" + this.state.textFieldProps.iptMenuNm.value);\r\n\t\t\t\t//console.log(\"test3: \" + this.state.dsSel.records[0][\"MNU_KND\"]);\r\n\t\t\t\t//console.log(\"test4: \" + this.state.dsSel.records[0][\"USE_YN\"]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS030000_H01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid:\"SYS.H_handleMenuList\",\r\n\t\t\t\t\tdatasetsend:\"dsMenuInfo\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsMenuInfo', this.state.dsMenuInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t//console.log(res)\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS030000_R01':\r\n\t\t\t\tif(res.data.dsMenuRecv.length > 0){\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsMenuInfo\", res.data.dsMenuRecv);\r\n\r\n\t\t\t\t\tthis.refs.menuCdGrid.moveRow(0);\r\n\t\r\n\t\t\t\t\tlet menuCd   = \"\";\r\n\t\t\t\t\tlet rowType = \"\";\r\n\t\r\n\t\t\t\t\tmenuCd   = this.state.dsMenuInfo.records[0].MNU_ID;\r\n\t\t\t\t\trowType = 'r';\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsMenuInfo\", []);\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS030000_H01':\r\n\t\t\t\tComLib.openDialog('A', \"메뉴관리가 정상적으로 저장되었습니다.\");\r\n\t\t\t\tthis.transaction('SYS030000_R01');\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"menuSearchBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS030000_R01\")) this.transaction(\"SYS030000_R01\");\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"menuSaveBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS030000_H01\")) this.transaction(\"SYS030000_H01\");\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// grid 이벤트\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\t//ComLib.setStateRecords(this, \"dsMenuInfo\", e.data);\r\n\t\t\t\t// this.setState({...this.state, dsUserList : {...this.state.dsUserList, records : e.data}});\r\n\t\t\t\tComLib.setStateValue(this, \"dsMenuInfo\", e.index, e.col, e.newValue);\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tif (this.refs.menuCdGrid.getSelectedRows() === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\t\t\t\t} else if (this.refs.menuCdGrid.getSelectedRows()[0].rowtype === \"c\") {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsMenuInfo\", e.data);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.openDialog('A', '신규로 추가된 행만 삭제 가능합니다.');\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\t\t\t\tconsole.log(e);\r\n\r\n\t\t\t\tthis.state.dsMenuInfo.setRecords(e.data);\r\n\r\n\t\t\t\tComLib.setStateDs(this, \"dsMenuInfo\", e.callback);\r\n\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t}\r\n\t\t},\r\n\t\t// input 이벤트\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptMenuId' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, iptMenuId : {...this.state.textFieldProps.iptMenuId, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptMenuNm' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, iptMenuNm : {...this.state.textFieldProps.iptMenuNm, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// selectbox 이벤트\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'mnuKnd':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"MNU_KND\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsSel);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'useYN':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_YN\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsSel);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴ID\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptMenuId.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptMenuId.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptMenuId.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptMenuId.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptMenuId.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptMenuId.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptMenuId.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptMenuId.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptMenuNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptMenuNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptMenuNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptMenuNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptMenuNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptMenuNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptMenuNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptMenuNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"화면유형\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"mnuKnd\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('MENU_TP'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"MNU_KND\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\tid = {\"useYN\"}\r\n\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('USE_YN'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"USE_YN\"]}\r\n\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnMenuSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnMenuSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnMenuSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnMenuSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr = {20} \r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.grdMenuCdProps.id} \r\n\t\t\t\t\t\t\t\tref={this.state.grdMenuCdProps.id} \r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\theader = {this.state.grdMenuCdProps.header}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsMenuInfo}\r\n\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.btnBMenuSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnBMenuSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnBMenuSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnBMenuSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;","// 권한관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsAuthInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsPrgmInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsAuthInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용자권한',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '권한레벨',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsPrgmInfo}\r\n\t\t\t\t\t\t\t\trowSelection = 'multiple' suppressRowClickSelection = {true}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '프로그램ID',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',\theaderCheckboxSelection: true,\tcheckboxSelection: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '상위메뉴',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '프로그램명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '화면유형',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 센터 관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsCentList : DataLib.datalist.getInstance(),\r\n\t\t\tdsTeamList : DataLib.datalist.getInstance(),\r\n\t\t\tdsCentStndValList : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터코드/센터명\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"200px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsCentList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '센터명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\theight= \"200px\"\r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsTeamList}\r\n\t\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀코드',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '팀명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsCentStndValList}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: 'No',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준코드',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준코드명',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준값',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '적용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기준일',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기타속성',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '기타속성2',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// // 기준값관리\r\n// import React from 'react';\r\n// import {\r\n// \tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n// \tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n// } from 'components';\r\n// //버튼 컴포넌트\r\n// import {BasicButton as Button, Label} from 'components';\r\n// import {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\n// import {ScrmRadialBarChart, Grid} from 'components';\r\n// import {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\n// class View extends React.Component {\r\n// \tconstructor(props) {\r\n// \t\tsuper();\r\n// \t\tthis.state = {\r\n// \t\t\tdsStndValInfo : DataLib.datalist.getInstance(),\r\n// \t\t}\r\n// \t}\r\n// \tcomponentDidMount () {\r\n\r\n// \t}\r\n// \trender () {\r\n// \t\treturn (\r\n// \t\t\t<React.Fragment>\r\n// \t\t\t\t<FullPanel>\r\n// \t\t\t\t\t<ComponentPanel>\r\n// \t\t\t\t\t\t<RelativeGroup>\r\n// \t\t\t\t\t\t\t<LFloatArea>\r\n// \t\t\t\t\t\t\t\t<FlexPanel>\r\n// \t\t\t\t\t\t\t\t\t<Label value=\"코드/코드명\"/>\r\n// \t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n// \t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n// \t\t\t\t\t\t\t\t\t<Selectbox\r\n// \t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n// \t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n// \t\t\t\t\t\t\t\t\t\twidth = {200}\r\n// \t\t\t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t\t\t<Label value=\"적용속성\"/>\r\n// \t\t\t\t\t\t\t\t\t<Selectbox\r\n// \t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n// \t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n// \t\t\t\t\t\t\t\t\t\twidth = {200}\r\n// \t\t\t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t\t\t<Label value=\"기준일속성\"/>\r\n// \t\t\t\t\t\t\t\t\t<Selectbox\r\n// \t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n// \t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n// \t\t\t\t\t\t\t\t\t\twidth = {200}\r\n// \t\t\t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t\t</FlexPanel>\r\n// \t\t\t\t\t\t\t</LFloatArea>\r\n// \t\t\t\t\t\t\t<RFloatArea>\r\n// \t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n// \t\t\t\t\t\t\t</RFloatArea>\r\n// \t\t\t\t\t\t</RelativeGroup>\r\n// \t\t\t\t\t</ComponentPanel>\r\n// \t\t\t\t\t<SubFullPanel>\r\n// \t\t\t\t\t\t<ComponentPanel>\r\n// \t\t\t\t\t\t\t<Grid\r\n// \t\t\t\t\t\t\t\theight= \"400px\"\r\n// \t\t\t\t\t\t\t\tdata = {this.state.dsStndValInfo}\r\n// \t\t\t\t\t\t\t\theader = {\r\n// \t\t\t\t\t\t\t\t\t[\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '코드',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '코드명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '사용구분',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '적용여부',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '센터수정가능여부',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '기준일',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '기타속성',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '기타속성2',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '정렬순서',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t\t{headerName: '등록일자',\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\teditable: true},\r\n// \t\t\t\t\t\t\t\t\t]\r\n// \t\t\t\t\t\t\t\t}\r\n// \t\t\t\t\t\t\t/>\r\n// \t\t\t\t\t\t\t<RelativeGroup>\r\n// \t\t\t\t\t\t\t\t<RFloatArea>\r\n// \t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n// \t\t\t\t\t\t\t\t</RFloatArea>\r\n// \t\t\t\t\t\t\t</RelativeGroup>\r\n// \t\t\t\t\t\t</ComponentPanel>\r\n// \t\t\t\t\t</SubFullPanel>\r\n// \t\t\t\t</FullPanel>\r\n// \t\t\t</React.Fragment>\r\n// \t\t)\r\n// \t}\r\n// }\r\n\r\n// export default View;\r\n\r\n// 기준값관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStndValInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsSel: DataLib.datalist.getInstance([{USE_YN: \"\"}]),\r\n\r\n\t\t\tbtnSearchProps : {\r\n\t\t\t\tid       : 'searchBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '조회',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\t\t\tbtnSaveProps : {\r\n\t\t\t\tid       : 'btnSave',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '저장',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\t\t\tgrdStndCdProps : {\r\n\t\t\t\tid : 'stndCdGrid',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '코드',\tfield: 'STND_CD',\t\t\t\tcolId: 'STND_CD',req: true,\trowspan: true},\r\n \t\t\t\t\t{headerName: '코드명',\t\tfield: 'STND_CD_NM',\t\tcolId: 'STND_CD_NM',\teditable: true},\r\n \t\t\t\t\t{headerName: '사용구분',\t\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\teditable: true},\r\n \t\t\t\t\t{headerName: '적용여부',\tfield: 'APY_PTY_USE_YN',\t\tcolId: 'APY_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t{headerName: '센터수정가능여부',\tfield: 'CENT_USR_MFY_PSB_YN',colId: 'CENT_USR_MFY_PSB_YN',\teditable: true},\r\n \t\t\t\t\t{headerName: '기준일',\tfield: 'STND_VL_PTY_USE_YN',colId: 'STND_VL_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t{headerName: '기타속성',\tfield: 'ETC1_PTY_USE_YN',colId: 'ETC1_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t{headerName: '기타속성2',\tfield: 'ETC2_PTY_USE_YN',\t\tcolId: 'ETC2_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_ORD',\t\tcolId: 'SORT_ORD',\teditable: true},\r\n \t\t\t\t\t{headerName: '등록일자',\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM',\teditable: true},\r\n\t\t\t\t],\r\n\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptCdNm : {\r\n\t\t\t\t\tid \t\t\t: 'iptCdNm',\r\n\t\t\t\t\tname        : 'iptCdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '코드/코드명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SYS060000_R01\")) this.transaction(\"SYS060000_R01\");\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t//console.log(\"updated!!\");\r\n\t\t//console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SYS060000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS060000_H01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tconsole.log('transaction');\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tconsole.log(transId);\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'SYS060000_R01' :\r\n\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getStndValInfo\",\r\n\t\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsStndCdRecv\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//transManager.addDataset('dsStndCd', [{\"STND_CD\": this.state.textFieldProps.iptCdNm.value}]);\r\n\t\t\t\t\t  transManager.addDataset('dsUser',[{\"STND_CD_NM\": this.state.textFieldProps.iptCdNm.value,\r\n\t\t\t\t\t  \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t \t\t\t\t\t\t\t\t\t}]);\r\n\t\t\r\n\t\t\t\t\t//transManager.addDataset('dsUser', [{}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS060000_H01' : \r\n\t\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.H_handleStndValInfo\",\r\n\t\t\t\t\t\tdatasetsend: \"dsStndValInfo\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsStndValInfo', this.state.dsStndValInfo.getTransRecords());\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\t\r\n\t\t\tdefault : break;\r\n\t\t} \r\n\t}\tcatch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.log(res);\r\n\t\t//let data;\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS060000_R01':\r\n\t\t\t\tif(res.data.dsStndCdRecv.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsStndValInfo\", res.data.dsStndCdRecv);\r\n\t\r\n\t\t\t\tthis.refs.stndCdGrid.moveRow(0);\r\n\t\t\t\t\r\n\t\t\t\t//data = this.refs.stndCdGrid.state.gridApi.rowModel.rowsTodisplay[0];\r\n\t\t\t\t//data.setSelected(true);\r\n\r\n\t\t\t\tlet stndCd = \"\";\r\n\t\t\t\tlet rowType = \"\";\r\n\r\n\t\t\t\tstndCd = this.state.dsStndValInfo.records[0].STND_CD;\r\n\t\t\t\trowType = 'r';\r\n\r\n\t\t\t\t//if (this.validation(\"SYS060000_R01\", stndCd, rowType)) this.transaction(\"SYS060000_R01\", stndCd);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsStndValInfo\", []);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS060000_H01':\r\n\t\t\t\tComLib.openDialog('A', \"기준값관리가 정상적으로 저장되었습니다.\");\r\n\t\t\t\tthis.transaction('SYS060000_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"searchBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SYS060000_R01\")) this.transaction(\"SYS060000_R01\");\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"btnSave\" : \r\n\t\t\t\t\t\tif (this.validation(\"SYS060000_H01\")) this.transaction(\"SYS060000_H01\");\r\n\t\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch(e.target.id) {\r\n\t\t\t\t\tcase 'iptCdNm' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : {...this.state.textFieldProps,\r\n\t\t\t\t\t\t\t\t\t\tiptCdNm : {...this.state.textFieldProps.iptCdNm,\r\n\t\t\t\t\t\t\t\t \t\tvalue : e.target.value}}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase 'useYn' : \r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_YN\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'apyPtyYn' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_YN\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'stndYn' : \r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_YN\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid : {\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\t//console.log('onDeleteRow');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase \"stndCdGrid\" :\r\n\t\t\t\t\t\tif(this.refs.stndCdGrid.getSelectedRows() === 0) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '선택된 행이 없습니다.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(this.refs.stndCdGrid.getSelectedRows()[0].rowtype === \"c\") {\r\n\t\t\t\t\t\t\tComLib.setStateRecords(this, \"dsStndValInfo\", e.data);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', '신규로 추가된 행만 삭제 가능합니다.');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdefault : break;\t\r\n\t\t\t\t}\r\n\t\t\t\t//ComLib.setStateRecords(this, \"dsStndValInfo\", e.data);\r\n\t\t\t\t//e.callback();\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\t\t\t\tconsole.log('onInsertRow');\r\n\t\t\t\t\r\n\t\t\t\t//this.state.dsStndValInfo.setRecords(e.data);\r\n\r\n\t\t\t\tComLib.setStateRecords(this, \"dsStndValInfo\", e.data);\r\n\t\t\t\t//ComLib.setStateDs(this, \"dsStndValInfo\", e.callback);\r\n\t\t\t\t///ComLib.setStateRecords(this, \"dsStndValInfo\", e.callback);\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t//console.log('onRowClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t\t//ComLib.setStateValue(this, \"dsUserDet\", 0, \"USR_CD\", this.state.dsUserList.getRow(e.index));\r\n\t\t\t\t//ComLib.setStateRecords(this, \"dsUserDet\", this.state.dsUserList.getRow(e.index));\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\t//console.log('onCellClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\t\t\t\t//console.log('onRowSelected');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tthis.setState({...this.state, paging : { ...this.state.paging, page : this.state.page + 1}}, () => {\r\n\t\t\t\t\tthis.transaction(\"SYS060000_R01\");\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tconsole.log('onCellValueChanged');\r\n\t\t\t\t//ComLib.setStateRecords(this, \"dsStndValInfo\", e.data);\r\n\t\t\t\tComLib.setStateValue(this, \"dsStndValInfo\", e.index, e.col, e.newValue);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptCdNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptCdNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptCdNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptCdNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptCdNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptCdNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptCdNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptCdNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"useYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('USE_YN'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"적용속성\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"apyPtyYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('USE_YN'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기준일속성\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"stndYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('USE_YN'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.grdStndCdProps.id}\r\n\t\t\t\t\t\t\t\tref={this.state.grdStndCdProps.id}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.grdStndCdProps.areaName}\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStndValInfo}\r\n\t\t\t\t\t\t\t\trowNum   = {true}\r\n\t\t\t\t\t\t\t\theader = {this.state.grdStndCdProps.header}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\t\r\n\t\t\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\r\n\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t// [\r\n\t\t\t\t\t\t\t\t\t// \t{headerName: '코드',\tfield: 'STND_CD',\t\t\t\tcolId: 'STND_CD',editable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '코드명',\t\tfield: 'STND_CD_NM',\t\tcolId: 'STND_CD_NM',\teditable: true,},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '사용구분',\t\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\teditable: true,},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '적용여부',\tfield: 'USR_NAPY_PTY_USE_YNM',\t\tcolId: 'APY_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '센터수정가능여부',\tfield: 'CENT_USR_MFY_PSB_YN',colId: 'CENT_USR_MFY_PSB_YN',\teditable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '기준일',\tfield: 'STND_VL_PTY_USE_YN',colId: 'STND_VL_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '기타속성',\tfield: 'ETC1_PTY_USE_YN',colId: 'ETC1_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '기타속성2',\tfield: 'ETC2_PTY_USE_YN',\t\tcolId: 'ETC2_PTY_USE_YN',\teditable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '정렬순서',\tfield: 'SORT_ORD',\t\tcolId: 'SORT_ORD',\teditable: true},\r\n \t\t\t\t\t\t\t\t\t// \t{headerName: '등록일자',\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM',\teditable: true},\r\n\t\t\t\t\t\t\t\t\t// ]\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tid={this.state.btnSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.btnSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default View;","// 메시지관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {ScrmRadialBarChart, Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStndValInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메시지코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield width={200}/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue = {''}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {[]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button value=\"조회\"/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\theight= \"400px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStndValInfo}\r\n\t\t\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메시지코드',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '메시지명',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true,},\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button value=\"저장\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\n// 레이아웃 컴포넌트\r\nimport {    AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\t\t\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree} from 'components';\r\nimport {ScrmRadialBarChart} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component{\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// state 초기화 및 이벤트 바인딩할 때 사용\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsGrp: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", USR_CD: \"\"}]),\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tid : 'btnTest',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : 'TEST Button',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tstring : {\r\n\t\t\t\t\tid : 'iptStringTest',\r\n\t\t\t\t\tname : 'iptStringTest',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : 'String....',\r\n\t\t\t\t\tminLength : 5,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tnumber : {\r\n\t\t\t\t\tid : 'iptNumberTest',\r\n\t\t\t\t\tname : 'iptNumberTest',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : 'Number....',\r\n\t\t\t\t\tminLength : 5,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tradioProps : {\r\n\t\t\t\tid : 'rdoTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'rHtml',         txt : 'HTML'},\r\n\t\t\t\t\t{ key : 'rCss',          txt : 'CSS'},\r\n\t\t\t\t\t{ key : 'rJavascript',   txt : 'Javascript'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tselected : 'rCss'\r\n\t\t\t},\r\n\t\t\tsingleCheckProp : {\r\n\t\t\t\tid : 'singleChkTest',\r\n\t\t\t\tindex : 0,\r\n\t\t\t\tkeyProp : 'scVsCode',\r\n\t\t\t\tvalue : 'VsCode',\r\n\t\t\t\tchecked : 'Y',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tmultiCheckProps : {\r\n\t\t\t\tid : 'multiChkTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'cReact',   txt : 'React',      value : 'Y'} ,\r\n\t\t\t\t\t{ key : 'cVue',     txt : 'Vue',        value : 'N'} ,\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t},\r\n\t\t\tcalendarProps : {\r\n\t\t\t\tid : 'iptCalTest',\r\n\t\t\t\tvalue : '20200831',\r\n\t\t\t\tcloseCalendar : true,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdisableCalendar : false,\r\n\t\t\t\tformat : 'y-MM-dd',\r\n\t\t\t\tisOpen : false,\r\n\t\t\t\tmaxDate : null,\r\n\t\t\t\tminDate : null,\r\n\t\t\t\trequired : false,\r\n\t\t\t\treturnValue : 'start'\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tstId : 'iptRangeCalStrtTest',\r\n\t\t\t\tendId : 'iptRangeCalEndTest',\r\n\t\t\t\tstartDate : '20200801',\r\n\t\t\t\tendDate : '20200831',\r\n\t\t\t},\r\n\t\t\tchartProps : {\r\n\r\n\t\t\t},\r\n\t\t\tpopupProps : {\r\n\t\t\t\talert : {\r\n\t\t\t\t\tid : 'btnTestAlert',\r\n\t\t\t\t\tvalue : 'Alert Test'\r\n\t\t\t\t},\r\n\t\t\t\tconfirm : {\r\n\t\t\t\t\tid : 'btnTestConfirm',\r\n\t\t\t\t\tvalue : 'Confirm Test'\r\n\t\t\t\t},\r\n\t\t\t\tmodal : {\r\n\t\t\t\t\tid : 'btnTestModal',\r\n\t\t\t\t\tvalue : 'Modal Test'\r\n\t\t\t\t},\r\n\t\t\t\tmodaless : {\r\n\t\t\t\t\tid : 'btnTestModaless',\r\n\t\t\t\t\tvalue : 'Modaless Test'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tid : 'selTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{value : 'opt1', name : '옵션1'},\r\n\t\t\t\t\t{value : 'opt2', name : '옵션2'},\r\n\t\t\t\t\t{value : 'opt3', name : '옵션3'},\r\n\t\t\t\t\t{value : 'opt4', name : '옵션4'},\r\n\t\t\t\t\t{value : 'opt5', name : '옵션5'},\r\n\t\t\t\t\t{value : 'opt6', name : '옵션6'},\r\n\t\t\t\t\t{value : 'opt7', name : '옵션7'},\r\n\t\t\t\t\t{value : 'opt8', name : '옵션8'},\r\n\t\t\t\t],\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tselected : 1,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tmultiSelectboxProps : {\r\n\t\t\t\tid : 'mulSelTest',\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'cReact',   txt : 'React',      value : 'Y'},\r\n\t\t\t\t\t{ key : 'cVue',     txt : 'Vue',        value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\tdisplayCount : 5\r\n\t\t\t},\r\n\t\t\ttreeProps : {\r\n\t\t\t\tid : 'tstTree',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdepth : 3,\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{id : 'depth1', parn_id : 'none', value : 'depth1'},\r\n\t\t\t\t\t{id : 'depth1-1', parn_id : 'depth1', value : 'depth1-1'},\r\n\t\t\t\t\t{id : 'depth1-2', parn_id : 'depth1', value : 'depth1-2'},\r\n\t\t\t\t\t{id : 'depth1-3', parn_id : 'depth1', value : 'depth1-3'},\r\n\t\t\t\t\t{id : 'depth1-1-1', parn_id : 'depth1-1', value: 'depth1-1-1'},\r\n\t\t\t\t\t{id : 'depth1-1-2', parn_id : 'depth1-1', value: 'depth1-1-2'},\r\n\t\t\t\t\t{id : 'depth2', parn_id : 'none', value : 'depth2'},\r\n\t\t\t\t\t{id : 'depth2-1', parn_id : 'depth2', value : 'depth2-1'},\r\n\t\t\t\t\t{id : 'depth2-2', parn_id : 'depth2', value : 'depth2-2'},\r\n\t\t\t\t\t{id : 'depth2-3', parn_id : 'depth2', value : 'depth2-3'},\r\n\t\t\t\t\t{id : 'depth2-2-1', parn_id : 'depth2-2', value: 'depth2-2-1'},\r\n\t\t\t\t\t{id : 'depth2-2-2', parn_id : 'depth2-2', value: 'depth2-2-2'},\r\n\t\t\t\t\t{id : 'depth3', parn_id : 'none', value : 'depth3'},\r\n\t\t\t\t\t{id : 'depth3-1', parn_id : 'depth3', value : 'depth3-1'},\r\n\t\t\t\t\t{id : 'depth3-2', parn_id : 'depth3', value : 'depth3-2'},\r\n\t\t\t\t\t{id : 'depth3-2-1', parn_id : 'depth3-2', value: 'depth3-2-1'},\r\n\t\t\t\t\t{id : 'depth3-2-2', parn_id : 'depth3-2', value: 'depth3-2-2'},\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.radio.onChange = this.event.radio.onChange.bind(this);\r\n\t\tthis.event.checkbox.onChange = this.event.checkbox.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\tconsole.log(\"updated!!\");\r\n\t\tconsole.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SAM010000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tconsole.log('transaction');\r\n\t\ttry  {\r\n\t\t\tconsole.log(transId);\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.log('callback');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnTest\" :\r\n\t\t\t\t\t\talert(e.target.id);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnDisabled\" :\r\n\t\t\t\t\t\tthis.setState({...this.state, buttonProps : { ...this.state.buttonProps, disabled : !this.state.buttonProps.disabled }});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnControlInputText\" :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestAlert\" :\r\n\t\t\t\t\t\tComLib.openDialog('A', 'Alert test 입니다.');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestConfirm\" :\r\n\t\t\t\t\t\tComLib.openDialog('C', 'Confirm 테스트입니다.', foo => { if (foo === true) return; });\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestModal\" :\r\n\t\t\t\t\t\tlet option1 = { width: '500px', height: '400px', modaless: false, callback : () => {alert('callback 먼저');} }\r\n\t\t\t\t\t\tComLib.openPop('pwdInit', '비밀번호 초기화', option1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestModaless\" :\r\n\t\t\t\t\t\tlet option2 = { width: '800px', height: '600px',  modaless: true,}\r\n\t\t\t\t\t\tComLib.openPop('pwdInit', '비밀번호 초기화', option2);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptStringTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, string : {...this.state.textFieldProps.string, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptNumberTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, number : {...this.state.textFieldProps.number, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tradio : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'rdoTest' :\r\n\t\t\t\t\t\t//alert(e.value);\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : e.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'singleChkTest' :\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'multiChkTest' :\r\n\t\t\t\t\t\tlet data = this.state.multiCheckProps.dataset;\r\n\t\t\t\t\t\tdata = data.map((item, index) => {\r\n\t\t\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\t\t\tif (e.checked === true) {\r\n\t\t\t\t\t\t\t\t\titem['value'] = 'Y';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\titem['value'] = 'N';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t, multiCheckProps : {\r\n\t\t\t\t\t\t\t\t...this.state.multiCheckProps\r\n\t\t\t\t\t\t\t\t, dataset : data\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, calendarProps : {...this.state.calendarProps, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptRangeCalStrtTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, startDate : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptRangeCalEndTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, endDate : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selTest' :\r\n\t\t\t\t\t\tconsole.log('selTest onChange');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, selected : e.target.selectedIndex, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mulSelTest' :\r\n\t\t\t\t\t\tconsole.log('mulSelTest');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, multiSelectboxProps : {...this.state.multiSelectboxProps, dataset : e.dataset}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbCent':\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsGrp);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbTeam':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbUser':\r\n\t\t\t\t\t\tconsole.log(e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsGrp\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\t\tconsole.log(this.state.dsGrp);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\t// 화면 그림 리턴\r\n\t\tconsole.log('parent');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Button Component</label>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.buttonProps.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.buttonProps.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.buttonProps.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tid = 'btnDisabled'\r\n\t\t\t\t\t\t\t\tvalue = '버튼 Disabled 하기'\r\n\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>TextFiled Component</label>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}>문자 입력</label>\r\n\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.string.id}\r\n\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.string.name}\r\n\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.string.value}\r\n\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.string.placeholder}\r\n\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.string.minLength}\r\n\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.string.maxLength}\r\n\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.string.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.string.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}>숫자만 입력</label>\r\n\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\ttype = \"onlyNum\"\r\n\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.number.id}\r\n\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.number.name}\r\n\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.number.value}\r\n\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.number.placeholder}\r\n\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.number.minLength}\r\n\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.number.maxLength}\r\n\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.number.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.number.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Radio Component</label>\r\n\t\t\t\t\t\t<Radio  id = {this.state.radioProps.id}\r\n\t\t\t\t\t\t\t\tdataset = {this.state.radioProps.dataset}\r\n\t\t\t\t\t\t\t\tkeyProp = {this.state.radioProps.keyProp}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.radioProps.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.radioProps.disabled}\r\n\t\t\t\t\t\t\t\tdefaultSelected = {2}\r\n\t\t\t\t\t\t\t\tselected = {this.state.radioProps.selected}\r\n\t\t\t\t\t\t\t\tdata = {this.state.radioProps.data}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.radio.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Single Checkbox Component </label>\r\n\t\t\t\t\t\t<Checkbox   id = {this.state.singleCheckProp.id}\r\n\t\t\t\t\t\t\t\t\tkeyProp = {this.state.singleCheckProp.keyProp}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.singleCheckProp.value}\r\n\t\t\t\t\t\t\t\t\tchecked = {this.state.singleCheckProp.checked}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.singleCheckProp.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Mulit Checkbox Component </label>\r\n\t\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\t\t\t\tid = {this.state.multiCheckProps.id}\r\n\t\t\t\t\t\t\t\t\tdataset = {this.state.multiCheckProps.dataset}\r\n\t\t\t\t\t\t\t\t\tkeyProp = {this.state.multiCheckProps.keyProp}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.multiCheckProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.multiCheckProps.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> InputCalendar Component </label>\r\n\t\t\t\t\t\t<InputCalendar\r\n\t\t\t\t\t\t\t\t\tid = {this.state.calendarProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.calendarProps.value}\r\n\t\t\t\t\t\t\t\t\tautoFocus = {this.state.calendarProps.autoFocus}\r\n\t\t\t\t\t\t\t\t\tcloseCalendar = {this.state.calendarProps.closeCalendar}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.calendarProps.disabled}\r\n\t\t\t\t\t\t\t\t\tdisableCalendar = {this.state.calendarProps.disableCalendar}\r\n\t\t\t\t\t\t\t\t\tformat = {this.state.calendarProps.format}\r\n\t\t\t\t\t\t\t\t\tisOpen = {this.state.calendarProps.isOpen}\r\n\t\t\t\t\t\t\t\t\tmaxDate = {this.state.calendarProps.maxDate}\r\n\t\t\t\t\t\t\t\t\tminDate = {this.state.calendarProps.minDate}\r\n\t\t\t\t\t\t\t\t\trequired = {this.state.calendarProps.required}\r\n\t\t\t\t\t\t\t\t\treturnValue = {this.state.calendarProps.returnValue}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\tonCalendarOpen = {this.event.inputcalendar.onCalendarOpen}\r\n\t\t\t\t\t\t\t\t\tonCalendarClose = {this.event.inputcalendar.onCalendarClose}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> RangeInputCalendar Component </label>\r\n\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\tstId = {this.state.rangeCalendarProps.stId}\r\n\t\t\t\t\t\t\tendId = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\tendDate = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ScrmRadialBarChart/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Button Component</label>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.alert.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.alert.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.alert.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.alert.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.confirm.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.confirm.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.confirm.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.confirm.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.modal.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.modal.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.modal.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.modal.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.modaless.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.modaless.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.modaless.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.modaless.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel width=\"20%\">\r\n\t\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Selectbox Component </label>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbCent\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsGrp.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbTeam\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getTeamList(this.state.dsGrp), newScrmObj.constants.select.argument.all)}\r\n\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsGrp.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbUser\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getUserList(this.state.dsGrp), newScrmObj.constants.select.argument.none)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsGrp.records[0][\"USR_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbComm\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('100'), newScrmObj.constants.select.argument.none)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<MulitSelectBox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.multiSelectboxProps.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.multiSelectboxProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {this.state.multiSelectboxProps.keyProp}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.multiSelectboxProps.value}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.multiSelectboxProps.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.multiSelectboxProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tdisplayCount = {this.state.multiSelectboxProps.displayCount}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\tid = {this.state.treeProps.id}\r\n\t\t\t\t\t\t\tdataset = {this.state.treeProps.dataset}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\nimport {Label, Checkbox, Radio, Textfield, InputCalendar, Table, Grid, ComponentPanel, SubFullPanel, FullPanel, Player, RFloatArea, RelativeGroup} from 'components';\r\nimport {Selectbox} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component{\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tstate = {\r\n\t\tdsUserList: DataLib.datalist.getInstance(),\r\n\t\tdsUserDet: DataLib.datalist.getInstance([{USR_CD: \"\"}]),\r\n\t\tplayerProps : {\r\n\t\t\tid  : 'btnPlayerTest',\r\n\t\t\tvalue : 'playerTest',\r\n\t\t},\r\n\t\tgridProps : {\r\n\t\t\tid : 'testGrid',\r\n\t\t\theader: [\r\n\t\t\t\t{headerName: '센터코드',\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\treq: true,\trowspan: true},\r\n\t\t\t\t{headerName: '팀코드',\t\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\t},\r\n\t\t\t\t{headerName: '사용자코드',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\teditable: true},\r\n\t\t\t\t{headerName: '사용자명',\t\tfield: 'ENC_USR_NM',\t\tcolId: 'ENC_USR_NM',\teditable: true},\r\n\t\t\t\t{headerName: '권한레벨',\t\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\teditable: true},\r\n\t\t\t\t{headerName: '영업가능여부',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN',editable: true},\r\n\t\t\t\t{headerName: '사용여부',\t\tfield: 'USE_YN',\t\tcolId: 'USE_YN',\teditable: true},\r\n\t\t\t],\r\n\t\t\tdata : DataLib.datalist.getInstance(\r\n\t\t\t\t[\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t\t{\tTEST1 : 'TEST1', TEST2 : 'TEST2', TEST3 : 'TEST3', TEST4 : 'TEST4', TEST5 : 'TEST5', TEST6: 'TEST6', TEST7 : 'TEST7', TEST8 : 'TEST8'\t},\r\n\t\t\t\t]\r\n\t\t\t),\r\n\t\t\tpaging : {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tsize : 40,\r\n\t\t\t\tpage : 1\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount() {\r\n\t\tif (this.validation(\"SAM010000_R01\")) this.transaction(\"SAM010000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SAM010000_R01':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SAM010000_H01':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SAM010000_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserListTEST\",\r\n\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\t// transManager.addDataset('dsUser', [{\r\n\t\t\t\t// \tQUERY_START\t: this.state.gridProps.paging.start,\r\n\t\t\t\t// \tQUERY_LIMIT\t: this.state.gridProps.paging.size,\r\n\t\t\t\t// \tQUERY_PAGE\t: this.state.gridProps.paging.page\r\n\t\t\t\t// }]);\r\n\t\t\t\ttransManager.addDataset('dsUser', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SAM010000_H01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid:\"COM.H_handleTEST\",\r\n\t\t\t\t\tdatasetsend:\"dsUserList\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUserList', this.state.dsUserList.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SAM010000_R01':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsUserList\", res.data.dsRst);\r\n\t\t\tbreak;\r\n\t\tcase 'SAM010000_H01':\r\n\t\t\tthis.transaction(\"SAM010000_R01\");\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnPlayerTest':\r\n\t\t\t\t\t//alert('btnPlayerTest');\r\n\t\t\t\t\tComLib.openPlayer('123123');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnAdd':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnDel':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSave':\r\n\t\t\t\t\tif (this.validation(\"SAM010000_H01\")) this.transaction(\"SAM010000_H01\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tComLib.setStateValue(this, \"dsUserDet\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t//console.log('onRowClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t\t//ComLib.setStateValue(this, \"dsUserDet\", 0, \"USR_CD\", this.state.dsUserList.getRow(e.index));\r\n\t\t\t\tComLib.setStateRecords(this, \"dsUserDet\", this.state.dsUserList.getRow(e.index));\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\t\t\t\t//console.log('onCellFocused');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\t\t//console.log('onCellClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\t//console.log('onCellDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tconsole.log('onCellValueChanged');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\t//ComLib.setStateRecords(this, \"dsUserList\", e.data);\r\n\t\t\t\tconsole.log(this.state.dsUserList);\r\n\t\t\t\t// this.setState({...this.state, dsUserList : {...this.state.dsUserList, records : e.data}});\r\n\t\t\t\tconsole.log(123);\r\n\t\t\t\tComLib.setStateValue(this, \"dsUserList\", e.index, e.col, e.newValue);\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\t\t\t\t//console.log('onRowDoubleClicked');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\t\t\t\t//console.log('onCellEditingStopped');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\t//console.log('onSelectionChanged');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\t\t\t\t//console.log('onRowSelected');\r\n\t\t\t\t//console.log(e);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\t//console.log('onDeleteRow');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tComLib.setStateRecords(this, \"dsUserList\", e.data, e.callback);\r\n//\t\t\t\te.callback();\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\t\t\t\tconsole.log('onInsertRow');\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t\tthis.state.dsUserList.setRecords(e.data);\r\n\t\t\t\tthis.state.dsUserList.setValue(e.index, \"CENT_CD\", \"0000000\");\r\n\t\t\t\tthis.state.dsUserList.setValue(e.index, \"TEAM_CD\", \"0000001\");\r\n\r\n\t\t\t\tComLib.setStateDs(this, \"dsUserList\", e.callback);\r\n\r\n\t\t\t\t//this.state.gridProps.data.setRecords(e.data);\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tthis.setState({...this.state, paging : { ...this.state.paging, page : this.state.page + 1}}, () => {\r\n\t\t\t\t\tthis.transaction(\"SAM010000_R01\");\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\tconsole.log('container render');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Player></Player>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tid = {this.state.playerProps.id}\r\n\t\t\t\t\t\tvalue = {this.state.playerProps.value}\r\n\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tid={this.state.gridProps.id} ref={this.state.gridProps.id} height= \"600px\"\r\n\t\t\t\t\t\theader = {this.state.gridProps.header}\r\n\t\t\t\t\t\trowNum = {true}\r\n\t\t\t\t\t\tdnlExcelBtn = {true}\r\n\t\t\t\t\t\tdata = {this.state.dsUserList}\r\n\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\r\n\t\t\t\t\t\tpaging = {true}\r\n\t\t\t\t\t\tinfinite = {true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/*<Button id = \"btnAdd\" value = {\"행추가\"} onClick = {this.event.button.onClick}/>\r\n\t\t\t\t\t<Button id = \"btnDel\" value = {\"행삭제\"} onClick = {this.event.button.onClick}/>*/}\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button id = \"btnSave\" value = {\"저장\"} onClick = {this.event.button.onClick}/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Label value={\"사용자ID\"}/>\r\n\t\t\t\t\t<Textfield id=\"txfUsrCd\" value={this.state.dsUserDet.records[0][\"USR_CD\"]} onChange={this.event.input.onChange}/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport {Grid, Tabs, TabPanel, ComponentPanel, InputFileUpload} from 'components';\r\n\r\nclass Index extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\t\tthis.state = { \r\n\t\t\tuploadProps : {\r\n\t\t\t\tid : 'testUpload',\r\n\t\t\t\theight : '300px'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel areaName=\"파일업로드\">\r\n\t\t\t\t\t<InputFileUpload id = {this.state.uploadProps.id} height = {this.state.uploadProps.height}/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n }\r\nexport default Index;","import React from 'react';\r\n\r\nimport {BasicButton as Button, SubFullPanel, LFloatArea, RFloatArea, FlexPanel, FullPanel, ComponentPanel} from 'components';\r\nimport {Checkbox, Radio, Textfield, InputCalendar, Table, Grid, RangeInputCalendar, Label } from 'components';\r\nimport {Selectbox, MulitSelectBox, AlertDialog, PopupDialog} from 'components';\r\nimport {ComLib, TransManager} from 'common';\r\n\r\n\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\n\r\n\r\nclass Index extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    state = {\r\n        val1 : 1,\r\n        val2 : 'val2',\r\n        dataList : [],\r\n        dataListTest : [],\r\n        radioValue : '',\r\n        checkValue : [],\r\n        stateDataList : [],\r\n        alert : {\r\n            flag : false,\r\n            message : ''\r\n        },\r\n        popup : {\r\n            flag : false,\r\n        }\r\n    }\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SAM030000_R01' :\r\n                this.transaction('SAM030000_R01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                case 'SAM030000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"COM.R_selectTest\",\r\n                        datasetsend:\"dsTest\",\r\n                        datasetrecv:\"datasetTest\"\r\n                    });\r\n                    transManager.addDataset('dsTest', [{ id : 'test' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (param) => {\r\n        console.log('callback start');\r\n        console.log(param);\r\n        try  {\r\n            switch (param.id) {\r\n                case 'SAM030000_R01' :\r\n                    console.log('SAM030000_R01 callback 성공');\r\n                    console.log(param.data);\r\n\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    onClick = (e) => {\r\n        console.log('onclick');\r\n        switch (e.target.id) {\r\n            case 'btnSearch' :\r\n                console.log('SAM030000_R01 시작');\r\n                this.validation('SAM030000_R01');\r\n                break;\r\n            case 'btnNew' :\r\n                alert(2);\r\n                break;\r\n            case 'btnSave' :\r\n                alert(3);\r\n                break;\r\n            case 'btnDel' :\r\n                alert(4);\r\n                break;\r\n            case 'btnChgState' :\r\n                console.log('값 변경');\r\n                this.setState({...this.state, val1: this.state.val1+1});\r\n                console.log(this.state.val1);\r\n                break;\r\n            case 'btnRestState' :\r\n                console.log('값 리셋');\r\n                this.setState({...this.state, val1: 1});\r\n                console.log(this.state.val1);\r\n                break;\r\n            case 'btnGetValue' :\r\n                console.log('값 확인');\r\n                console.log(this.state.dataList.getRowCount());\r\n                this.setState({ dataList: { ...this.state.dataList,  data : [{ id : 'test'}] } });\r\n                break;\r\n            case 'btnTestAlert' :\r\n                this.setState({...this.state,  alert : { flag: true, message : '팝업 완료'} });\r\n                break;\r\n            case 'btnTestPop' : \r\n                this.setState({...this.state,  popup : { flag: true } });\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        switch (e.target.id) {\r\n            case 'txtTest' :\r\n                this.setState({ ...this.state, val2: e.target.value});\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    onclick = (e) => {\r\n        var checkList = document.getElementById('list1');\r\n        if (checkList.classList.contains('visible'))\r\n             checkList.classList.remove('visible');\r\n         else\r\n             checkList.classList.add('visible');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        const { dataList, val1, val2 } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    {123444}\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n }\r\nexport default Index;","import COM010000 from 'containers/com/COM010000';\r\n\r\nimport QAM010000 from 'containers/qam/QAM010000';\r\nimport QAM020000 from 'containers/qam/QAM020000';\r\nimport QAM030000 from 'containers/qam/QAM030000';\r\nimport QAM040000 from 'containers/qam/QAM040000';\r\nimport QAM050000 from 'containers/qam/QAM050000';\r\n\r\nimport STA010000 from 'containers/sta/STA010000';\r\nimport STA020000 from 'containers/sta/STA020000';\r\n\r\nimport STT010000 from 'containers/stt/STT010000';\r\nimport STT020000 from 'containers/stt/STT020000';\r\nimport STT030000 from 'containers/stt/STT030000';\r\nimport STT040000 from 'containers/stt/STT040000';\r\nimport STT050000 from 'containers/stt/STT050000';\r\n\r\nimport SYS010000 from 'containers/sys/SYS010000';\r\nimport SYS020000 from 'containers/sys/SYS020000';\r\nimport SYS030000 from 'containers/sys/SYS030000';\r\nimport SYS040000 from 'containers/sys/SYS040000';\r\nimport SYS050000 from 'containers/sys/SYS050000';\r\nimport SYS060000 from 'containers/sys/SYS060000';\r\nimport SYS070000 from 'containers/sys/SYS070000';\r\n\r\n\r\nimport SAM000000 from 'containers/sam/SAM000000';\r\nimport SAM010000 from 'containers/sam/SAM010000';\r\nimport SAM020000 from 'containers/sam/SAM020000';\r\nimport SAM030000 from 'containers/sam/SAM030000';\r\n// import SYS010000 from 'containers/sys/SYS010000';\r\n// import SYS020000 from 'containers/sys/SYS020000';\r\n// import SYS030000 from 'containers/sys/SYS030000';\r\n// import SYS040000 from 'containers/sys/SYS040000';\r\n// import SYS050000 from 'containers/sys/SYS050000';\r\n// import SYS060000 from 'containers/sys/SYS060000';\r\n\r\n\r\nexport const appRoute = [\r\n\t{ id: 'BASE',       path: \"/base\",              exact: true,    component: SAM010000 },\r\n\t{ id: 'COM010000',  path: \"/com/COM010000\",     exact: true,    component: COM010000 },\r\n\r\n\t{ id: 'QAM010000',  path: \"/qam/QAM010000\",     exact: true,    component: QAM010000 },\r\n\t{ id: 'QAM020000',  path: \"/qam/QAM020000\",     exact: true,    component: QAM020000 },\r\n\t{ id: 'QAM030000',  path: \"/qam/QAM030000\",     exact: true,    component: QAM030000 },\r\n\t{ id: 'QAM040000',  path: \"/qam/QAM040000\",     exact: true,    component: QAM040000 },\r\n\t{ id: 'QAM050000',  path: \"/qam/QAM050000\",     exact: true,    component: QAM050000 },\r\n\r\n\t{ id: 'STA010000',  path: \"/sta/STA010000\",     exact: true,    component: STA010000 },\r\n\t{ id: 'STA020000',  path: \"/sta/STA020000\",     exact: true,    component: STA020000 },\r\n\r\n\t{ id: 'STT010000',  path: \"/stt/STT010000\",     exact: true,    component: STT010000 },\r\n\t{ id: 'STT020000',  path: \"/stt/STT020000\",     exact: true,    component: STT020000 },\r\n\t{ id: 'STT030000',  path: \"/stt/STT030000\",     exact: true,    component: STT030000 },\r\n\t{ id: 'STT040000',  path: \"/stt/STT040000\",     exact: true,    component: STT040000 },\r\n\t{ id: 'STT050000',  path: \"/stt/STT050000\",     exact: true,    component: STT050000 },\r\n\r\n\t{ id: 'SYS010000',  path: \"/sys/SYS010000\",     exact: true,    component: SYS010000 },\r\n\t{ id: 'SYS020000',  path: \"/sys/SYS020000\",     exact: true,    component: SYS020000 },\r\n\t{ id: 'SYS030000',  path: \"/sys/SYS030000\",     exact: true,    component: SYS030000 },\r\n\t{ id: 'SYS040000',  path: \"/sys/SYS040000\",     exact: true,    component: SYS040000 },\r\n\t{ id: 'SYS050000',  path: \"/sys/SYS050000\",     exact: true,    component: SYS050000 },\r\n\t{ id: 'SYS060000',  path: \"/sys/SYS060000\",     exact: true,    component: SYS060000 },\r\n\t{ id: 'SYS070000',  path: \"/sys/SYS070000\",     exact: true,    component: SYS070000 },\r\n\t\r\n\r\n\t// { id: 'BAT010000',  path: \"/bat/BAT010000\",     exact: true,    component: SAM010000 },\r\n\t// { id: 'BAT010000',  path: \"/bat/BAT010000\",     exact: true,    component: SAM020000 },\r\n\r\n\t{ id: 'SAM000000',  path: \"/sam/SAM010000\",     exact: true,    component: SAM000000 },\r\n\t{ id: 'SAM010000',  path: \"/sam/SAM010000\",     exact: true,    component: SAM010000 },\r\n\t{ id: 'SAM020000',  path: \"/sam/SAM020000\",     exact: true,    component: SAM020000 },\r\n\t{ id: 'SAM030000',  path: \"/sam/SAM030000\",     exact: true,    component: SAM030000 }\r\n];","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {appRoute} from 'routes';\r\nimport {sampleRoute} from 'routes/sampleRoute.js';\r\nimport {TrayPanel, IconButton, RFloatArea, LFloatArea, Tray as TrayMenu, TrayDiv} from 'components';\r\nimport { Route, Switch, Link} from 'react-router-dom';\r\nimport COM010000 from '../../com/COM010000';\r\n\r\nclass Main extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttrayProp : []\r\n\t\t}\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onPrevMove = this.onPrevMove.bind(this);\r\n\t\tthis.onNextMove = this.onNextMove.bind(this);\r\n\t\tthis.onSelect = this.onSelect.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tconsole.log('main > index > onClick');\r\n\t\tthis.selectMenu();\r\n\t}\r\n\tonClose = (e) => {\r\n\t\tconsole.log('main > index > onClose');\r\n\t\tthis.props.closeMenu(e);\r\n\t}\r\n\tonPrevMove  = (e) => {\r\n\t\tconsole.log('main > index > onPrevMove');\r\n\t\tthis.props.prevMenu(e);\r\n\t}\r\n\tonNextMove  = (e) => {\r\n\t\tconsole.log('main > index > onNextMove');\r\n\t\tthis.props.nextMenu(e);\r\n\t}\r\n\tonSelect  = (e) => {\r\n\t\tconsole.log('main > index > onSelectMenu');\r\n\t\tthis.props.selectMenu(e);\r\n\t}\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'btnPrev' :\r\n\t\t\t\t\t\t// 이전 메뉴 이동\r\n\t\t\t\t\t\tthis.props.prevMenu(this.props.selected);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'btnNext' :\r\n\t\t\t\t\t\t// 다음 메뉴 이동\r\n\t\t\t\t\t\tthis.props.nextMenu(this.props.selected);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'btnClose' :\r\n\t\t\t\t\t\tthis.props.closeAllMenu();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<TrayPanel>\r\n\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t<TrayDiv data= {this.props.tray} selected = {this.props.selected} onClick = {this.onClick} onClose = {this.onClose} onSelect={this.onSelect}/>\r\n\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t<div className=\"scrm-tray-btn-div\">\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-prev' id='btnPrev' onClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-next' id='btnNext' onClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-close' id='btnClose' onClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t</TrayPanel>\r\n\t\t\t\t<div style={{ height:'96%', overflow: 'auto'}}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.tray.map(tray => {\r\n\t\t\t\t\t\t\treturn  appRoute.filter(item => item.id === tray.MNU_ID).map((prop, key) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<div id={prop.id} style={{display : (this.props.selected.MNU_ID === prop.id) ? 'block' : 'none'}} key={key}>\r\n\t\t\t\t\t\t\t\t\t\t<prop.component/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Main;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\nimport {TrayPanel, IconButton, RFloatArea, LFloatArea} from 'components';\r\nclass Footer extends React.Component{\r\n\trender () {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\treturn (\r\n\t\t\t<TrayPanel>\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div id=\"scrmFooterDiv\" className=\"scrm-footer-div\">\r\n\t\t\t\t\t\t<ul className=\"scrm-footer-pop-ul\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.props.popupList !== undefined) ? this.props.popupList.map((item, index) => { return (\r\n\t\t\t\t\t\t\t\t\t<li className=\"scrm-footer-pop-li\">\r\n\t\t\t\t\t\t\t\t\t\t<div onClick={e => {document.getElementById(item.id).hidden = false; AppModuleAction.selectPop(item)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)})\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t<div className=\"scrm-tray-btn-div\">\r\n\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-close' id='btnPopAllClose'\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tthis.props.popupList.forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.body.removeChild(document.getElementById(element.id));\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tAppModuleAction.delAllPop()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</RFloatArea>\r\n\t\t\t</TrayPanel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(\r\n\t(state) => ({\r\n\t\tpopupList : state.appModule.popupList,\r\n\t}),\r\n\t(dispatch) => ({\r\n\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t})\r\n)(Footer);","import React from 'react';\r\nimport { Menu } from 'components';\r\n\r\nclass Side extends React.Component{\r\n\trender () { \r\n\t\treturn ( \r\n\t\t\t// <Menu data={this.props.menu}/> \r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"side-badge-div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>STT완료건수</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>220 건</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>배치 : 196건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>재처리 : 0건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>수동처리 : 24건</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"side-badge-div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>STT성공 건수</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>213 건</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"side-badge-div\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>STT실패 건수</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<span>7 건</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Side;","import React from 'react';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\nimport {IconButton, LFloatArea, RFloatArea, HeaderMenu} from 'components';\r\nimport 'assets/styles/header.css';\r\n\r\nclass Header extends React.Component{\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\t}\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogout':\r\n\t\t\t\t\tif (this.validation(\"HEADER_D01\")) this.transaction(\"HEADER_D01\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnNoti':\r\n\t\t\t\t\tlet notiOption = { width: '700px', height: '800px' }\r\n\t\t\t\t\tComLib.openPop('COM010010', '공지사항조회', 'modal', notiOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnMyinfo':\r\n\t\t\t\t\tlet infoOption = { width: '500px', height: '335px', pop: true }\r\n\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', 'modal', infoOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSetting':\r\n\t\t\t\t\tlet setOption = { width: '500px', height: '600px' }\r\n\t\t\t\t\tComLib.openPop('COM010020', '설정변경', 'modal', setOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'HEADER_D01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'HEADER_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'HEADER_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid:\"COM.D_delLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUser', this.state.dsUser.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'HEADER_D01':\r\n\t\t\t\t//sessionStorage.clear();\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tComLib.setSession(\"logoutComplete\", true);\r\n\t\t\t\twindow.close();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div style = {{display: 'flex'}}>\r\n\t\t\t\t\t\t<div className = 'scrm-header-left-div'/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t<div className=\"scrm-header-btn-div\">\r\n\t\t\t\t\t\t{/*<IconButton classes='scrm-btn-noti'\t\tid='btnNoti'\tonClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-user'\t\tid='btnMyinfo'\tonClick={this.event.button.onClick}/>\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-setting'\tid='btnSetting'\tonClick={this.event.button.onClick}/>*/}\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-logut'\tid='btnLogout'\tonClick={this.event.button.onClick}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</RFloatArea>\r\n\t\t\t\t<HeaderMenu menu={this.props.menu} openMenu = {this.props.openMenu}/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Main from './main';\r\nimport Side from './side';\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport {AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, FooterPanel, HeaderMenu} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\nimport {menuData, loginData} from 'sample';\r\n\r\nclass AppMain extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\tthis.event.window.onbeforeunload = this.event.window.onbeforeunload.bind(this);\r\n\t\t\tthis.event.window.onunload = this.event.window.onunload.bind(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstate = {\r\n\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t\tmenu: ComLib.getSession(\"gdsMenu\").filter(item => item.MNU_KND === '10' || item.MNU_KND === '20'),\r\n\t\t//menu: menuData.filter(item => item.MENU_TYPE === '10' || item.MENU_TYPE === '20'),\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\tAppModuleAction.addTray(ComLib.getInitScreen());\r\n\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\twindow.addEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\t\twindow.addEventListener('unload', this.event.window.onunload);\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\twindow.removeEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\t\twindow.removeEventListener('unload', this.event.window.onunload);\r\n\t\t}\r\n\t}\r\n\tevent = {\r\n\t\twindow: {\r\n\t\t\tonbeforeunload: (e) => {\r\n\t\t\t\tif (!ComLib.getSession(\"logoutComplete\")) e.returnValue = \"로그아웃?\";\r\n\t\t\t},\r\n\t\t\tonunload: (e) => {\r\n\t\t\t\tif (!ComLib.getSession(\"logoutComplete\")) {\r\n\t\t\t\t\tif (this.validation(\"BASE_D01\")) this.transaction(\"BASE_D01\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch(serviceid) {\r\n\t\t\tcase 'BASE_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.setAsync(false);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid:\"COM.D_delLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUsr\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUsr', this.state.dsUser.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch(res.id) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * User Function\r\n\t *******************************************************************/\r\n\r\n\trender () {\r\n\t\tconst {selected, tray, popupList} = this.props;\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\treturn(\r\n\t\t\t<AppPanel>\r\n\t\t\t\t<HeadPanel>\r\n\t\t\t\t\t<Header menu={this.state.menu} openMenu = {AppModuleAction.addTray}/>\r\n\t\t\t\t</HeadPanel>\r\n\t\t\t\t<MiddlePanel>\r\n\t\t\t\t\t{/* <SidePanel>\r\n\t\t\t\t\t\t<Side/>\r\n\t\t\t\t\t</SidePanel> */}\r\n\t\t\t\t\t<MainPanel width=\"100%\">\r\n\t\t\t\t\t\t{/* <Main menu = {ComLib.getMenuList().filter(item => item.MENU_TYPE === '10' || item.MENU_TYPE === '20')}/> */}\r\n\t\t\t\t\t\t<Main\r\n\t\t\t\t\t\t\tmenu = {this.state.menu}\r\n\t\t\t\t\t\t\ttray={tray}\r\n\t\t\t\t\t\t\tselected = {selected}\r\n\t\t\t\t\t\t\topenMenu = {AppModuleAction.addTray}\r\n\t\t\t\t\t\t\tcloseMenu = {AppModuleAction.delTray}\r\n\t\t\t\t\t\t\tprevMenu = {AppModuleAction.prevTray}\r\n\t\t\t\t\t\t\tnextMenu = {AppModuleAction.nextTray}\r\n\t\t\t\t\t\t\tselectMenu = {AppModuleAction.selectTray}\r\n\t\t\t\t\t\t\tcloseAllMenu = {AppModuleAction.delAllTray}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</MainPanel>\r\n\t\t\t\t</MiddlePanel>\r\n\t\t\t\t<FooterPanel>\r\n\t\t\t\t\t<Footer popupList = {popupList}/>\r\n\t\t\t\t</FooterPanel>\r\n\t\t\t</AppPanel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(\r\n\t(state) => ({\r\n\t\tselected : state.appModule.selected,\r\n\t\ttray : state.appModule.tray,\r\n\t\tpopupList : state.appModule.popupList,\r\n\t}),\r\n\t(dispatch) => ({\r\n\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t})\r\n)(AppMain);","import React from 'react';\r\nimport Login from 'containers/base/common/login.js'\r\nimport Main from 'containers/base/main';\r\nimport Side from 'containers/base/side';\r\nimport Footer from 'containers/base/footer';\r\nimport Header from 'containers/base/header';\r\nimport AppMain from 'containers/base';\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\n\r\nconst NotFound = () => <h1>404.. This page is not found!</h1>\r\n\r\nclass App extends React.Component{\r\n\tcomponentDidMount(){\r\n\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\r\n\t}\r\n\trender () {\r\n\t\tconst token = sessionStorage.getItem('token');\r\n\t\t//const token = true;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\r\n\t\t\t\t\t{ token ? ( <Provider store={store}><AppMain/></Provider>)\r\n\t\t\t\t\t\t\t: (\r\n\t\t\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t\t\t<Route path={'/'} exact={true} component={Login}/>\r\n\t\t\t\t\t\t\t\t\t<Route path={'/base'} exact={true} component={<Provider store={store}><AppMain/></Provider>}/>\r\n\t\t\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'containers/App.js';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route } from 'react-router-dom';\r\n\r\nconst history = createBrowserHistory();\r\n\r\n//ReactDOM.render( <App />,  document.getElementById('root'));\r\nReactDOM.render( <Router history={history}>  <Route path='/'  component= {App} /> </Router>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"public/media/test3.055d4341.WAV\";","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\nrequire('babel-polyfill');\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\r\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\r\n// We don't polyfill it in the browser--this is user's responsibility.\r\nif (process.env.NODE_ENV === 'test') {\r\n  require('raf').polyfill(global);\r\n}\r\n"],"sourceRoot":""}