import React from 'react';

class BasicButton extends React.Component{
	constructor (props) {
			super(props);
			this.state = { disbaled : this.props.disabled }
	}
	static defaultProps = {
		mt: '0px',
		mr: '0px',
		mb: '0px',
		ml: '0px',
		disabled: false,
		type : 'default',
		size : 'md',
		color : 'grey',
		filled : false,
		innerImage : false,
		onClick : (e) => {return;}
	}
	render () {
		let fiiled, innerImage, btnClass, iconClass;

		fiiled = (this.props.fiiled) ? '' : '-o';
		innerImage = (this.props.innerImage) ? ' i' : '';

		btnClass =  (this.props.value) ? 'scrm-btn ' + this.props.size + ' ' + this.props.color + fiiled : btnClass = 'scrm-btn ' + this.props.size + ' ' + this.props.color + fiiled + innerImage;

		if (this.props.innerImage) {
			switch (this.props.icon) {
				case "save"  : iconClass = 'xi-diskette xi-x'; break;
				case "add"  : iconClass = 'xi-plus xi-x'; break;
				case "del"  : iconClass = 'xi-minus xi-x'; break;
				case "copy"  : iconClass = (this.props.fiiled) ? 'xi-documents xi-x' : 'xi-documents-o xi-x'; break;
				case "check" : iconClass = 'xi-check xi-x'; break;
				case "trash" : iconClass = 'xi-trash-o xi-x'; break;				
				case "down"  : iconClass = (this.props.fiiled) ? 'xi-download xi-x' : 'xi-download-o xi-x'; break;
				case "srch"  : iconClass = (this.props.fiiled) ? 'xi-search xi-x' : 'xi-search-o xi-x'; break;
				case "left"  : iconClass = 'xi-arrow-left xi-x c-grey-6';  break;
				case "right" : iconClass = 'xi-arrow-right xi-x c-grey-6';  break;
				case "undo"  : iconClass = 'xi-undo';  break;
				case "redo" : iconClass = 'xi-redo';  break;
				case "arrowUp"  : iconClass = 'xi-arrow-up';  break;
				case "arrowDn" : iconClass = 'xi-arrow-down';  break;
				case "close" : iconClass = 'xi-close';  break;
				case "play" : iconClass = 'xi-play xi-x';  break;
				case "pause" : iconClass = 'xi-pause xi-x';  break;
				default : iconClass = null; break;
			}
		}
		return (
			<button className = {btnClass} ref = { (ref) => this.button = ref } id = {this.props.id} onClick = {(e) => { e.target.blur(); this.props.onClick(e);} } disabled={ this.props.disabled }
					tooltip = {this.props.tooltip} style={{ marginTop: this.props.mt, marginRight: this.props.mr, marginBottom: this.props.mb, marginLeft: this.props.ml, visibility : (this.props.hidden) ? 'hidden' :  'visible'}}
			>
				{(this.props.innerImage && iconClass !== null) ? <i onClick= {(e) => { e.stopPropagation(); this.button.click(); }} className={ iconClass }></i> :  null}
				{this.props.value}
			</button>
		);
	}
}

class IconButton extends React.Component{
	render () {
		return (
			<button tooltip = {this.props.tooltip} className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>
		);
	}
}
class BadgeButton extends React.Component{
	render () {
		return (
			<button tooltip = {this.props.tooltip} className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>
		);
	}
}
export {BasicButton, IconButton, BadgeButton};
