{"version":3,"sources":["components/Layout/index.js","components/Button/index.js","components/Charts/index.js","components/Input/index.js","components/SelectBox/index.js","components/Table/index.js","components/Label/index.js","components/Grid/components/date/index.js","components/Grid/components/checkbox/index.js","components/Grid/components/button/index.js","components/Grid/index.js","components/Menu/index.js","components/Tab/index.js","routes/popupRoute.js","containers/base/common/pwdInit.js","containers/base/common/pwdChg.js","containers/com/COM010010/index.js","containers/com/COM010020/index.js","containers/sys/SYS030001/index.js","components/Dialog/index.js","components/FileUpload/index.js","components/Textarea/index.js","components/HtmlEditor/index.js","components/Slide/index.js","components/Tree/index.js","components/Tray/index.js","common/index.js","components/Player/index.js","containers/base/common/login.js","containers/sam/SAM010000/index.js","containers/sam/SAM020000/index.js","containers/sam/SAM030000/index.js","containers/sam/SAM000000/index.js","containers/sys/SYS010000/index.js","containers/sys/SYS020000/index.js","containers/sys/SYS030000/index.js","containers/sys/SYS040000/index.js","containers/sys/SYS050000/index.js","containers/sys/SYS060000/index.js","containers/sup/SUP020000/index.js","routes/sampleRoute.js","containers/base/tray/index.js","containers/base/main/index.js","containers/base/side/index.js","containers/base/footer/index.js","containers/base/header/index.js","containers/base/index.js","containers/moblie/common/header.js","containers/moblie/common/footer.js","containers/moblie/MFU020000/index.js","containers/moblie/MFU030000/index.js","containers/moblie/index.js","containers/App.js","index.js","../config/polyfills.js"],"names":["AppPanel","className","this","props","children","React","Component","defaultProps","width","HeadPanel","MiddlePanel","SidePanel","MainPanel","ComponentPanel","style","height","FooterPanel","FlexPanel","FullPanel","SubFullPanel","LFloatArea","RFloatArea","TrayPanel","BasicButton","state","disbaled","disabled","id","onClick","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","visibility","hidden","value","IconButton","classes","data","ScrmRadialBarChart","innerRadius","outerRadius","startAngle","endAngle","minAngle","label","fill","position","background","clockWise","dataKey","iconSize","layout","verticalAlign","align","Checkbox","e","target","index","checked","document","getElementById","onChange","bind","type","keyProp","name","htmlFor","MultiCheckBox","Array","from","getElementsByName","Fragment","dataset","map","item","i","key","Radio","setRadio","selected","defaultSelected","readOnly","selectedOption","console","log","Textfield","rtnVal","replace","placeholder","minLength","maxLength","InputCalendar","date","DateLib","getStringDate","onCalendarOpen","onCalendarClose","getDateYymmdd","closeCalendar","disableCalendar","format","isOpen","maxDate","minDate","required","returnValue","RangeInputCalendar","stId","startDate","endId","endDate","Selectbox","length","filter","undefined","prop","CentListSelectBox","getCentList","a","transManager","TransManager","setTransId","setTransUrl","constants","url","common","addConfig","dao","base","crudh","read","sqlmapid","datasetsend","datasetrecv","addDataset","SRCH_YN","agent","res","dsCentComboInfo","setState","comboItem","CENT_CD","CENT_NM","ComLib","openDialog","options","TeamListSelectBox","getTeamList","centCd","dsTeamComboInfo","TEAM_CD","TEAM_NM","prevProps","getUserList","teamCd","dsUsrComboInfo","USR_CD","USR_NM","MulitSelectBox","handleClickOutside","domNode","ReactDOM","findDOMNode","contains","display","expended","openCheckbox","checkboxes","onCheckAll","text","baseOption","onCheckboxClick","rtnText","checkedList","toString","element","addEventListener","removeEventListener","float","displayCount","Table","setColGroup","colGrp","setBody","body","setRow","rowArray","colArray","setColumn","colJson","colSpan","rowSpan","head","tbData","footer","DateComponent","Date","TimeComponent","time","disableClock","maxTime","RangeDateComponent","onStrtDtChange","strtDate","onEndDtChange","StrLib","isNull","STRT_DT","END_DT","RangeTimeComponent","onStrtTmChange","strtTime","onEndTmChange","endTime","STRT_TM","END_TM","getFormatterTime","CheckboxRenderer","checkedHandler","event","colId","column","node","setDataValue","DelRowButton","context","componentParent","onDeleteRow","Grid","onCellValueChanged","oldValue","newValue","row","rowIndex","col","cellEditor","colDef","cellEditorParams","onCellClicked","onCellDoubleClicked","onCellFocused","onRowClicked","onRowDoubleClicked","onGridReady","obj","Object","fromEntries","Map","header","field","gridApi","api","columnApi","insertColumnData","keys","setTimeout","sizeColumnsToFit","onCellEditingStopped","onRowDataChanged","onSelectionChanged","onRowSelected","doFilter","setQuickFilter","insertRow","applyTransaction","add","setFocusedCell","getDisplayedRowCount","startEditingCell","colKey","getSelectedRowIndex","getSelectedNodes","Number","getSelectedRows","getDeSelectedRows","deSelectRows","forEachNode","isSelected","push","editStart","autoSizeFit","columnDefs","rowData","setGridHeader","suppressAutoSize","alwaysShowVerticalScroll","components","frameworkComponents","rangeDate","rangeTime","checkbox","selectbox","SelectboxRenderer","headerCheckbox","HeaderCheckboxRender","delButton","suppressMovableColumns","immutableColumns","multiSortKey","headerHeight","rowHeight","defaultColDef","resizable","sortable","sort","editable","autoHeight","floatingFilter","autoGroupColumnDef","rowDragManaged","suppressDragLeaveHidesColumns","suppressScrollOnNewData","suppressRowClickSelection","stopEditingWhenGridLosesFocus","localeText","noRowsToShow","rowSelection","colResizeDefault","paging","pagination","paginationPageSize","paginationAutoPageSize","HeaderMenu","setMenuDivOpen","open","setOpenTray","openMenu","menu","PARN_MENU_ID","MENU_NM","MENU_ID","subMenu","subKey","Tabs","onClickTab","active","Children","toArray","child","tab","tabWidth","Tab","TabPanel","popRoute","component","validation","param","telNo","transaction","transId","init","setCallBack","callback","create","TEL_NO","birth","err","alert","dsRecvData","password","onClose","button","input","setStateValue","popupdivid","remove","serviceid","dsPwdInfo","getValue","setdata","passwd","columnid","getRecords","dsChkCurPwdRst","dsChkNewPwdRst","click","DataLib","datalist","getInstance","CUR_PWD","NEW_PWD","CON_PWD","location","setStateRecords","records","BORD_MNG_NO","srchFileParam","dsNoteInfo","dsNoteFileInfo","dsModifyInfo","TITLE","VALD_DT","getToday","CONT","CONT_DV","DEL_YN","REG_DT","REG_USR","MFY_ER","MFY_DT","grid","assign","getRowJSON","REG_CENT","REG_DTM","REG_ID","CHG_ID","CHG_DTM","ref","headerName","valueFormatter","getFormatterDate","values","setGridComCodeComboCellVal","setGridComCodeComboCellNm","toolbarHidden","Slide","dsAddMulUserInfo","dsUserInfo","filterDsAddMulUserInfo","srchParam","usrNm","handler","fliterUserName","dsSrchCondition","concat","OPER","COND_NM","COND","COND_VAL","refs","grdSrchCondInfo","getRowCount","onCallbackFunc","grdAddMulUserInfo","getRowNode","setSelected","refreshCells","filterdDataSet","intA","filterByCondition","Set","str","getFilterInstance","setModel","onFilterChanged","condition","AUTH_LV","cellEditorSelector","params","getCenterList","cellRenderer","headerCheckboxSelection","checkboxSelection","headerCheckboxSelectionFilteredOnly","AlertDialog","containerClassName","defaultPosition","x","y","noBackdrop","clickBackdropToClose","padding","alignItems","message","ConfirmDialog","returnVal","onReturnVal","positions","PopupDialog","onMinimize","modal","onMouseDown","modaless","positionOffset","overflow","comp","InputFileUpload","getUploadParams","handleChangeStatus","status","meta","mete","setProgressPercent","progressEvent","uploadPercent","Math","floor","loaded","total","uploadStatus","handleSubmit","files","allFiles","validate","showProgressbar","formData","FormData","forEach","f","append","file","set","addSendDataset","upload","gifnoc","ERR_CODE","size","parseInt","round","percent","inputContent","inputWithFilesContent","submitButtonContent","onChangeStatus","onSubmit","maxSizeBytes","styles","dropzone","HtmlEditor","modules","toolbar","font","color","list","indent","clipboard","matchVisual","formats","theme","SlidePreview","src","process","alt","filepath","SlideContainer","onDownload","reqOptions","method","headers","responseType","axios","resData","window","URL","createObjectURL","Blob","link","createElement","href","setAttribute","appendChild","removeChild","onPreview","newScrmObj","mdi","DIALOG","dialog","render","unmountComponentAtNode","ext","doc","xls","ppt","pdf","img","CustomSlide","setSlideInfo","setSlideContent","idx","FILE_NM","onDownloadAll","onSelectPrev","slider","slickPrev","onSelectNext","slickNext","settings","dots","slidesToShow","slidesToScroll","initialSlide","speed","responsive","breakpoint","infinite","textAlign","top","left","c","Tree","parentElement","querySelector","classList","toggle","setComboItem","parn_key","parn_id","html","span","ul","li","innerText","onclick","TrayDiv","crud","update","destroy","datetime","POP_UP","PLAYER","select","argument","all","none","menuId","isJson","JSON","parse","setSession","sessionStorage","setItem","stringify","getSession","getItem","rtnArr","getOwnPropertyNames","colVal","msg","openPop","callbackFunc","arrPopTag","tag","tagName","substring","popDiv","substr","Promise","resolve","reject","error","then","catch","openPlayer","callId","arrPlayerPop","getCommCodeList","sBigCtgCd","commCodeList","PARENT_CODE","setStateDs","strDatasetId","setRecordsToDs","nRowIndex","strColumnId","strValue","setValueToDs","arrRecords","convComboList","args","arr","sValue","getTrim","String","valueOf","getPos","sOrg","sFind","nStart","indexOf","getPosCase","toLowerCase","getPosReverse","pos","getPosReverseCase","getReplace","sRepFrom","sRepTo","sRet","getReplaceCase","getSexCd","sRrNo","strRno","getNumStr","getLPad","sPad","nCnt","getRPad","getRight","nSize","getLenB","sVal","len","charCodeAt","getLen3B","getFull2Half","sFull","sHalf","unescape","charAt","getHalf2Full","rTmp","iTmp","fromCharCode","isNum","sNum","point_cnt","ret","isAlpha","search","isAlNum","isKor","arg","sResult","getLastDateNum","sDate","nMonth","isLeapYear","nY","getLastDate","nLastDate","getAddDate","nOffset","nYear","nDate","objDate","getFullYear","getMonth","getDate","getAddMonth","nsDate","sToday","getTodayTime","getHours","getMinutes","getSeconds","getDiffDate","sStartDate","sEndDate","vFromDate","vToDate","getDiffMonth","nStartMon","NaN","year","month","day","prevState","objDs","setValue","setRecords","datamap","orgrecords","get","getValueByRecId","recid","setValueByRecId","lastIndexOf","find","Function","findFirst","findLast","filterexpr","lookup","record","_","initialize","transdata","epytwor","reyolpme","datasets","setAccessToken","setReyolpme","arrUser","setBeforeSend","beforeSend","setError","timeout","setAsync","async","makeTransData","config","addSequence","sequence","addIterator","iterator","addRecvDataset","token","accessToken","onUploadProgress","baseURL","post","response","json","errorcode","SUCCESS","ERR_MESSAGE","erorr","asyncdata","dataType","ERROR","systemid","procedure","handle","batch","dir","datasetmap","retry","datatype","script","xml","Login","dsLoginInfo","onKeyDown","keyCode","dsRst","foo","dsLogin","dsCommCodeInfo","dsMenuInfo","dsCentStvlInfo","dsCentList","dsTeamList","dsUserList","PWD","CONN_IP","to","pathname","View","playerProps","STND_CD","STND_CD_NM","APY_YN","RSTR_DT_PTY_USE_YN","RSTR_TM_PTY_USE_YN","STND_DT_PTY_USE_YN","Index","val1","val2","dataList","dataListTest","radioValue","checkValue","stateDataList","flag","popup","checkList","buttonProps","option1","textFieldProps","string","number","radio","radioProps","singleCheckProp","multiCheckProps","inputcalendar","calendarProps","rangeCalendarProps","selectedIndex","selectboxProps","multiSelectboxProps","txt","chartProps","popupProps","confirm","treeProps","depth","snapshot","autoFocus","sampleRoute","path","exact","LOGIN","SAM010000","SAM020000","SAM030000","trayMenuInfo","Main","trayProps","vale","menuNm","addMenu","trayProp","tray","Side","Footer","Header","logout","usrCd","ENCPWD_PWD","usrPasswd","PS_STA_CD","clear","pop","Menu","SORT_ORD","PRG_PATH","AppMain","dsUser","onbeforeunload","onunload","moveMenu","closeMenu","MfuHeader","custNm","mode","MfuFooter","continue","preventDefault","nextStep","back","prevStep","BtnBack","BtnContinue","stepInfo","stepCssNames","info","finish","variant","MoblieStep1","App","localStorage","history","createBrowserHistory","require","enable"],"mappings":"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","file":"public/js/main.33d9ddb8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'assets/styles/component.css';\r\n\r\nclass AppPanel extends React.Component {\r\n    static defaultProps = { width: '100%'}\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-app-panel\"> {this.props.children} </div>); }\r\n}\r\nclass HeadPanel extends React.Component {\r\n    static defaultProps = { width: '100%'}\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-head-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MiddlePanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-middle-panel\"> {this.props.children} </div>); }\r\n}\r\nclass SidePanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-side-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MainPanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-main-panel\"> {this.props.children} </div>); }\r\n}\r\nclass ComponentPanel extends React.Component {\r\n    static defaultProps = { width: '97%'}\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-component-panel\" style={{width: this.props.width, height: this.props.height}}> {this.props.children} </div>); }\r\n}\r\nclass FooterPanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return ( <div className = \"scrm-footer-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FlexPanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return (<div className = \"scrm-flex-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FullPanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return (<div className = \"scrm-full-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass SubFullPanel extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return (<div className = \"scrm-subfull-panel\" style={{width: this.props.width, height: this.props.height}}> {this.props.children} </div>); }\r\n}\r\nclass LFloatArea extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return (<div className = \"scrm-lfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RFloatArea extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return (<div className = \"scrm-rfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RelativeGroup extends React.Component {\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { return (<div className = \"scrm-relative-div\"> {this.props.children} </div>); }\r\n}\r\nclass TrayPanel extends React.Component {\r\n    static defaultProps = { width: '97%'}\r\n    static propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n    render () { \r\n        return (<div className=\"scrm-tray-panel\"> {this.props.children} </div>); }\r\n}\r\nexport { AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, TrayPanel} ;","import React from 'react';\r\n\r\nclass BasicButton extends React.Component{\r\n    constructor (props) {\r\n      super(props);\r\n      this.state = { disbaled : this.props.disabled }\r\n    }\r\n    render () {\r\n      return (\r\n          <button id = {this.props.id} onClick = {this.props.onClick} disabled={this.props.disabled}\r\n                  style={{\r\n                    marginTop: this.props.mt,\r\n                    marginRight: this.props.mr,\r\n                    marginBottom: this.props.mb,\r\n                    marginLeft: this.props.ml,\r\n                    visibility : (this.props.hidden) ? 'hidden' :  'visible'\r\n                  }}\r\n          >\r\n            {this.props.value}\r\n          </button>\r\n      );\r\n    }\r\n}\r\nclass IconButton extends React.Component{\r\n  render () {\r\n    return ( \r\n      <button className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n    );\r\n  }\r\n}\r\nclass BadgeButton extends React.Component{\r\n  render () {\r\n    return ( \r\n      <button className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n    );\r\n  }\r\n}\r\nexport {BasicButton, IconButton, BadgeButton};\r\n","import React from 'react';\r\nimport { RadialBarChart, RadialBar, Legend, Tooltip} from 'recharts';\r\nconst data = [\r\n    {\r\n      \"name\": \"18-24\",\r\n      \"uv\": 31.47,\r\n      \"pv\": 2400,\r\n      \"fill\": \"#8884d8\"\r\n    },\r\n    {\r\n      \"name\": \"25-29\",\r\n      \"uv\": 26.69,\r\n      \"pv\": 4567,\r\n      \"fill\": \"#83a6ed\"\r\n    },\r\n    {\r\n      \"name\": \"30-34\",\r\n      \"uv\": -15.69,\r\n      \"pv\": 1398,\r\n      \"fill\": \"#8dd1e1\"\r\n    },\r\n    {\r\n      \"name\": \"35-39\",\r\n      \"uv\": 8.22,\r\n      \"pv\": 9800,\r\n      \"fill\": \"#82ca9d\"\r\n    },\r\n    {\r\n      \"name\": \"40-49\",\r\n      \"uv\": -8.63,\r\n      \"pv\": 3908,\r\n      \"fill\": \"#a4de6c\"\r\n    },\r\n    {\r\n      \"name\": \"50+\",\r\n      \"uv\": -2.63,\r\n      \"pv\": 4800,\r\n      \"fill\": \"#d0ed57\"\r\n    },\r\n    {\r\n      \"name\": \"unknow\",\r\n      \"uv\": 6.67,\r\n      \"pv\": 4800,\r\n      \"fill\": \"#ffc658\"\r\n    }\r\n  ]\r\n  \r\nclass ScrmRadialBarChart extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"scrm-chart-div\">\r\n                {/* <RadialBar/> */}\r\n                <RadialBarChart \r\n                    width={730} \r\n                    height={250} \r\n                    innerRadius=\"10%\" \r\n                    outerRadius=\"80%\" \r\n                    data={data} \r\n                    startAngle={180} \r\n                    endAngle={0}\r\n                >\r\n                    <RadialBar minAngle={15} label={{ fill: '#666', position: 'insideStart' }} background clockWise={true} dataKey='uv' />\r\n                    <Legend iconSize={10} width={120} height={140} layout='vertical' verticalAlign='middle' align=\"right\" />\r\n                    <Tooltip />\r\n                </RadialBarChart>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ScrmRadialBarChart;","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport { DateLib} from 'common';\r\n\r\n\r\nclass Checkbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tindex : 0,\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-checkbox-div'>\r\n\t\t\t\t<input  type = \"checkbox\"\r\n\t\t\t\t\t\tid = {'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.keyProp}\r\n\t\t\t\t\t\tname = {this.props.id}\r\n\t\t\t\t\t\tchecked = { this.props.checked === 'Y'}\r\n\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor={'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}> {this.props.value} </label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass MultiCheckBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tthis.props.dataset.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tkey = {'checkbox_' + i}\r\n\t\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\t\tindex = {i}\r\n\t\t\t\t\t\t\tvalue = {item[this.props.value]}\r\n\t\t\t\t\t\t\tkeyProp =  {item[this.props.keyProp]}\r\n\t\t\t\t\t\t\tchecked = {item['value']}\r\n\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nclass Radio extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state  = {\r\n\t\t\tselectedOption : this.props.selected || this.props.dataset[this.props.defaultSelected][this.props.keyProp]\r\n\t\t}\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonChange : () => { return; }\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id: this.props.id, value : e.target.value});\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\tsetRadio = (props) => {\r\n\t\treturn (\r\n\t\t\tprops.dataset.map((item, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={'radio_div_' + i} className ='scrm-input-radio-div'>\r\n\t\t\t\t\t\t<input  key={'radio_'+ i} \r\n\t\t\t\t\t\t\t\tid = {'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tname={props.id}\r\n\t\t\t\t\t\t\t\tvalue={item[props.keyProp]}\r\n\t\t\t\t\t\t\t\tchecked = { \r\n\t\t\t\t\t\t\t\t\t(props.selected === null)\r\n\t\t\t\t\t\t\t\t\t? props.defaultSelected === i\r\n\t\t\t\t\t\t\t\t\t: props.selected === item[props.keyProp]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label  key={'radio_label_' + i}\r\n\t\t\t\t\t\t\t\thtmlFor={'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item[props.value]}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('checkbox child');\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t{ this.setRadio(this.props) }\r\n\t\t\t </div>\r\n\t\t);\r\n\t}\r\n}\r\nclass Textfield extends React.Component {\r\n\trtnVal = (value) => {\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase 'onlyNum' : return value.replace(/[^0-9]/g,\"\");\r\n\t\t\tcase 'onlyKor' : return value.replace(/[a-z0-9]|[ \\]{}()<>?|`~!@#$%^&*-_+=,.;:'\\\\]/g,\"\");\r\n\t\t\tcase 'onlyEng' : return value.replace(/[^a-zA-Z]/g,\"\");\r\n\t\t\tdefault : return value;\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t<input  type=\"text\" \r\n\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\t\tvalue = {this.rtnVal(this.props.value)}\r\n\t\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\t\tminLength =  {this.props.minLength}\r\n\t\t\t\t\t\tmaxLength = {this.props.maxLength}\r\n\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}\r\n\t\t\t\t\t\t//onClick = {(e) => this.props.onClick(e)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass TextPasswdfield extends React.Component {\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t<div className='scrm-input-div'>\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\tmaxlength = {this.props.maxlength}\r\n\t\t\t\t\tminlength =  {this.props.minlength}\r\n\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}></input> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass InputCalendar extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onCalendarOpen = this.onCalendarOpen.bind(this);\r\n\t\tthis.onCalendarClose = this.onCalendarClose.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcloseCalendar : true,\r\n\t\tdisabled : false,\r\n\t\tdisableCalendar : false,\r\n\t\tformat : 'y-MM-dd',\r\n\t\tisOpen : false,\r\n\t\trequired : false,\r\n\t\treturnValue : 'start'\r\n\t}\r\n\tonChange = (date) =>  {\r\n\t\tthis.props.onChange({target :{ id: this.props.id, value: DateLib.getStringDate(date) }});\r\n\t}\r\n\tonCalendarOpen = () => {\r\n\t\tthis.props.onCalendarOpen({target : {id : this.props.id, value : this.props.value}});\r\n\t}\r\n\tonCalendarClose = () => {\r\n\t\tthis.props.onCalendarOpen({target : {id : this.props.id, value : this.props.value}});\r\n\t}\r\n\trender () {\r\n\t\treturn ( \r\n\t\t\t\t<DatePicker\r\n\t\t\t\t\tclassName=\"scrm-datepicker\"\r\n\t\t\t\t\tvalue={DateLib.getDateYymmdd(this.props.value)}\r\n\t\t\t\t\tcloseCalendar = {this.props.closeCalendar}\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tdisableCalendar = {this.props.disableCalendar}\r\n\t\t\t\t\tformat = {this.props.format}\r\n\t\t\t\t\tisOpen = {this.props.isOpen}\r\n\t\t\t\t\tmaxDate = {this.props.maxDate}\r\n\t\t\t\t\tminDate = {this.props.minDate}\r\n\t\t\t\t\trequired = {this.props.required}\r\n\t\t\t\t\treturnValue = {this.props.returnValue}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tonCalendarOpen = {this.onCalendarOpen}\r\n\t\t\t\t\tonCalendarClose = {this.onCalendarClose}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass RangeInputCalendar extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<DatePicker id={this.props.stId} className=\"scrm-datepicker\"\r\n\t\t\t\t\t\t\tonChange = {  date => this.props.onChange({target :{ id: this.props.stId, value: DateLib.getStringDate(date)}}) }\r\n\t\t\t\t\t\t\tvalue= {DateLib.getDateYymmdd(this.props.startDate)} />\r\n\t\t\t\t<DatePicker id={this.props.endId} className=\"scrm-datepicker\"\r\n\t\t\t\t\t\t\tonChange = {  date => this.props.onChange({target :{ id: this.props.endId, value: DateLib.getStringDate(date)}}) }\r\n\t\t\t\t\t\t\tvalue={DateLib.getDateYymmdd(this.props.endDate)} />\r\n\t\t\t</React.Fragment>\r\n\t\t);  \r\n\t}\r\n}\r\nexport { MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, TextPasswdfield, RangeInputCalendar}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {TransManager, ComLib, StrLib} from 'common';\r\nimport {Checkbox, MultiCheckBox} from 'components';\r\n\r\nclass Selectbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tselected : 0,\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target : e.target, id : this.props.id});\r\n\t}\r\n\trender () {\r\n\t\tconsole.log('select child render');\r\n\t\treturn (\r\n\t\t\t<div className='scrm-select-div' style={{width : this.props.width}}>\r\n\t\t\t\t<select\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tvalue = {(this.props.dataset.length <= this.props.selected)  ? '' :  this.props.dataset[this.props.selected]['value']} \r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t> \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.dataset.filter(item=> item.value !== null && item.value !== undefined).map((prop, key) => {\r\n\t\t\t\t\t\t\treturn (<option value={prop.value} key={prop.value + '_' + key} >{prop.name}</option>);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass CentListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = { type : 'A' }\r\n\tcomponentDidMount () {\r\n\t\tthis.getCentList();\r\n\t}\r\n\tgetCentList = async() => {\r\n\t\t// let item = [{value : '', name : (this.props.type === 'C') ? '선택' : '전체'}];\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('CENTLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getCentComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsCentComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\tconst res = await transManager.agent();\r\n\r\n\t\t\tif ( res.data.dsCentComboInfo.length === 0 ) {\r\n\t\t\t\t//this.setState({ ...this.state, comboItem : item});\r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({...this.state, comboItem : item.concat(res.data.dsCentComboInfo.map((item) => {\r\n\t\t\t\t//     return { value : item.CENT_CD , name : item.CENT_NM };\r\n\t\t\t\t// }))});\r\n\t\t\t\tthis.setState({...this.state, comboItem : res.data.dsCentComboInfo.map((item) => {\r\n\t\t\t\t\treturn { value : item.CENT_CD , name : item.CENT_NM };\r\n\t\t\t\t})});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/>);\r\n\t}\r\n}\r\nclass TeamListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getTeamList(this.props.centCd);\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd) {\r\n\t\t\tthis.getTeamList(this.props.centCd);\r\n\t\t}\r\n\t}\r\n\tgetTeamList = async() => {\r\n\t\t// let item = [{value : '', name : (this.props.type === 'C') ? '선택' : '전체'}];\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('TEAMLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getTeamComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsTeamComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\r\n\t\t\tif (res.data.dsTeamComboInfo.length === 0) {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item});\r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item.concat(res.data.dsTeamComboInfo.map((item) => {\r\n\t\t\t\t//    return { value : item.TEAM_CD , name : item.TEAM_NM };\r\n\t\t\t\t// }))});\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsTeamComboInfo.map((item) => {\r\n\t\t\t\t   return { value : item.TEAM_CD , name : item.TEAM_NM };\r\n\t\t\t\t})});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t// this.setState({ ...this.state, comboItem : item});\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange={this.props.onChange}/> );\r\n\t}\r\n}\r\nclass UsrListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomboItem : []\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getUserList();\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd || prevProps.teamCd !== this.props.teamCd) {\r\n\t\t\tthis.getTeamList();\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\tteamCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tgetUserList = async() => {\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('USERLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getUsrComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsUsrComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd, TEAM_CD : this.props.teamCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\t\t\tif (res.data.dsUsrComboInfo.length === 0) {\r\n\t\t\t\t// return item; \r\n\t\t\t} else {\r\n\t\t\t\t// this.setState({ ...this.state, comboItem : item.concat(res.data.dsUsrComboInfo.map((item) => {\r\n\t\t\t\t//     return { value : item.USR_CD , name : item.USR_NM };\r\n\t\t\t\t//  }))});\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsUsrComboInfo.map((item) => {\r\n\t\t\t\t\treturn { value : item.USR_CD , name : item.USR_NM };\r\n\t\t\t\t })});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\t//return item; \r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/> );\r\n\t}\r\n}\r\nclass MulitSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tlet text = '...';\r\n\t\tif (this.props.dataset.length !== 0) {\r\n\t\t\tif (this.props.dataset.filter(item => item['value'] === 'Y').length === this.props.dataset.length) {\r\n\t\t\t\ttext = '전체선택';\r\n\t\t\t} else {\r\n\t\t\t\ttext = this.props.dataset.filter(item => item['value'] === 'Y').map(element => { return element[this.props.value]}).toString();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\texpended : false,\r\n\t\t\ttext : text,\r\n\t\t\tbaseOption : {\r\n\t\t\t\tkeyProp : 'all_check',\r\n\t\t\t\tvalue : '전체선택',\r\n\t\t\t\tchecked : 'N'\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.onCheckAll = this.onCheckAll.bind(this);\r\n\t\tthis.onCheckboxClick = this.onCheckboxClick.bind(this);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\thandleClickOutside = (e) => {\r\n\t\tconst domNode = ReactDOM.findDOMNode(this);\r\n\t\tif ( !domNode || !domNode.contains(e.target) ) {\r\n\t\t\tdocument.getElementById(this.props.id).style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended : false});\r\n\t\t}\r\n\t}\r\n\topenCheckbox = () => {\r\n\t\tlet checkboxes = document.getElementById(this.props.id);\r\n\t\tif (!this.state.expended) {\r\n\t\t\tcheckboxes.style.display = \"block\";\r\n\t\t\tthis.setState({...this.state, expended: true});\r\n\t\t} else {\r\n\t\t\tcheckboxes.style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended: false});\r\n\t\t}\r\n\t}\r\n\tonCheckAll = (e) => {\r\n\t\tthis.setState({...this.state\r\n\t\t\t, text: (e.checked) ? '전체선택' : '...'\r\n\t\t\t, baseOption : {...this.state.baseOption, checked : (e.checked) ? 'Y' : 'N'}\r\n\t\t}, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\tdataset : this.props.dataset.map((item) =>{ item['value'] = (e.checked) ? 'Y' : 'N'; return item;})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase  \"multiselect_\" + this.props.id + '_head' :\r\n\t\t\t\tconsole.log('all check box');\r\n\t\t\t\tbreak;\r\n\t\t\tcase  \"multiselect_\" + this.props.id :\r\n\t\t\t\tconsole.log('single check box');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\tonCheckboxClick = (e) => {\r\n\t\tlet rtnText = null;\r\n\t\tlet checkedList = null;\r\n\t\tif (e.target.checked) {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' || item === this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t} else {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' && item !== this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t}\r\n\t\tif (checkedList.length === this.props.dataset.length) {\r\n\t\t\trtnText  = '전체선택';\r\n\t\t} else {\r\n\t\t\tif (checkedList.length === 0) {\r\n\t\t\t\trtnText  = '...';\r\n\t\t\t} else {\r\n\t\t\t\trtnText = checkedList.toString();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ ...this.state,  text :  rtnText,  baseOption : {...this.state.baseOption, checked : (checkedList.length === this.props.dataset.length) ? 'Y' : 'N'}}\r\n\t\t, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tdataset : this.props.dataset.map((item, index) => {\r\n\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\titem['value'] = (e.checked) ? 'Y' : 'N';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-mulitlselect\">\r\n\t\t\t\t<div className= { (this.props.disabled) ? \"scrm-react-mulitlselect-selectbox-disabled\" : \"scrm-react-mulitlselect-selectbox\"}\r\n\t\t\t\t\t onClick={(this.props.disabled) ? (e) => { return null; } : this.openCheckbox} style={{width: this.props.width, display: 'flex'}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"scrm-react-mulitlselect-selectbox-label\" style={{width: this.props.width}}>\r\n\t\t\t\t\t\t<span>{this.state.text}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width:'10px', float: 'right', marginRight: '5px', verticalAlign: \"middle\"}}>\r\n\t\t\t\t\t\t<i className={(this.state.expended) ? \"arrow up\" : \"arrow down\"}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"scrm-react-mulitselect-checkbox\" id= {this.props.id} style={{width: this.props.width, height: this.props.displayCount * 20 + 'px'}}>\r\n\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\tid = {\"multiselect_\" + this.props.id + '_head'}\r\n\t\t\t\t\t\tkeyProp = {\"multiselect_baseOpt_\" + this.props.id}\r\n\t\t\t\t\t\tvalue = {this.state.baseOption.value}\r\n\t\t\t\t\t\tchecked = {this.state.baseOption.checked}\r\n\t\t\t\t\t\tonClick = {this.onCheckAll}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\tid= {\"multiselect_\" + this.props.id}\r\n\t\t\t\t\t\tdataset = {this.props.dataset}\r\n\t\t\t\t\t\tkeyProp = {this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\tonClick = {this.onCheckboxClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {Selectbox, MulitSelectBox, CentListSelectBox, TeamListSelectBox, UsrListSelectBox};","import React from 'react';\r\nimport 'assets/styles/component.css';\r\n\r\nclass Table extends React.Component {\r\n    setColGroup = (colGrp) => {\r\n        if (colGrp === undefined) {\r\n            return null;\r\n        } else {\r\n            if (colGrp.length === 0) {\r\n                return null;\r\n            }  else {\r\n                return colGrp.map((colGrp, index) => {\r\n                    return (<col key={'col_' + index} style={{width: colGrp.width}}></col>)\r\n                });\r\n            }\r\n        }\r\n    }\r\n    setBody = (body) => {\r\n        if (body === undefined)  {\r\n            return null;\r\n        } else {\r\n            return this.setRow(body);\r\n        }\r\n    }\r\n    setRow = (rowArray) => {\r\n        return rowArray.map((colArray, index) => {\r\n            return (<tr key={'tr_' + index}>{this.setColumn(colArray)}</tr>)\r\n        });\r\n        \r\n    }\r\n    setColumn = (colArray) => {\r\n        return colArray.map((colJson, index) => {\r\n            return (\r\n              (colJson.type === 'T') ?  <th className='scrm-table-th' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</th>\r\n                                     :  <td className='scrm-table-td' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</td>\r\n            )\r\n        });\r\n    }\r\n    render () {\r\n        return (\r\n            <table className = 'scrm-table' id = {this.props.id} style={{width: this.props.width}}>\r\n                <colgroup>\r\n                    { this.setColGroup(this.props.colGrp) }\r\n                </colgroup>\r\n                { (this.props.head === null || this.props.head === undefined) ? <thead>{this.props.head}</thead> : <thead/> }\r\n                <tbody>\r\n                    { this.setBody(this.props.tbData) }\r\n                </tbody>\r\n                { (this.props.footer === null || this.props.footer === undefined) ? <tfoot>{this.props.footer}</tfoot> : <tfoot></tfoot> }\r\n            </table>\r\n        );\r\n    }\r\n}\r\nexport default Table;","import React from 'react';\r\n\r\nclass Label extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className=\"scrm-label-div\">\r\n                <u><span>{this.props.value}</span></u>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport {StrLib, DateLib} from 'common';\r\n\r\n\r\nclass DateComponent extends React.Component {\r\n    state = { date: new Date() }\r\n    componentDidMount() {\r\n        if (this.props.value === null || this.props.value === undefined) {\r\n\r\n        }\r\n    }\r\n    onChange = date => this.setState({ date })\r\n    getValue () {\r\n        return DateLib.getStringDate(this.state.date);\r\n    }\r\n    isPopup() {return true;}\r\n    render() {\r\n        return ( <DatePicker onChange={this.onChange} value={this.state.date} />);\r\n    }\r\n\r\n}\r\nclass TimeComponent extends React.Component {\r\n    state = { time: '00:00'}\r\n    onChange = time => this.setState({ time })\r\n    getValue () {return this.state.time;}\r\n    isPopup() {return true;}\r\n    render() {\r\n        return ( <TimePicker onChange={this.onChange} value={this.state.time} format=\"HH:m\" disableClock={true} maxTime={'23:59:59'}/> );\r\n    }\r\n}\r\nclass RangeDateComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { strtDate: '', endDate : '' }\r\n    }\r\n    static defaultProps = {\r\n        STRT_DT : '', END_DT : ''\r\n    }\r\n    \r\n    isPopup() {return true;}\r\n    onStrtDtChange = date => this.setState({ ...this.state, strtDate : date });\r\n    onEndDtChange = date => this.setState({ ...this.state, endDate : date });\r\n    getValue () {\r\n        let strtDate = DateLib.getStringDate(this.state.strtDate);\r\n        let endDate = DateLib.getStringDate(this.state.endDate);\r\n\r\n        if (StrLib.isNull(endDate) && StrLib.isNull(strtDate)) {\r\n            this.props.data.STRT_DT = '';\r\n            this.props.data.END_DT = '';\r\n            return '';\r\n        } else {\r\n            if (StrLib.isNull(endDate)) {\r\n                this.props.data.STRT_DT = strtDate;\r\n                return strtDate;\r\n            }\r\n            if (StrLib.isNull(strtDate)) {\r\n                this.props.data.END_DT = endDate;\r\n                return endDate;\r\n            }\r\n            this.props.data.STRT_DT = strtDate;\r\n            this.props.data.END_DT = endDate;\r\n            return strtDate + endDate;\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.setState({strtDate : DateLib.getDateYymmdd(this.props.data.STRT_DT), endDate : DateLib.getDateYymmdd(this.props.data.END_DT)});\r\n    }\r\n    render () {\r\n        return (\r\n            <div style={{display : 'flex'}}>\r\n                <span style={{marginRight : '5px'}}><b> 시작일자 : </b></span>\r\n                <DatePicker onChange={this.onStrtDtChange} value={this.state.strtDate} />\r\n                <span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n                <span style={{marginRight : '5px'}}><b> 종료일자 :  </b></span>\r\n                <DatePicker onChange={this.onEndDtChange} value={this.state.endDate} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nclass RangeTimeComponent extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = { strtTime: '00:00', endTime: '23:59'}\r\n        this.onStrtTmChange = this.onStrtTmChange.bind(this);\r\n        this.onEndTmChange = this.onEndTmChange.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        STRT_TM : '', END_TM : ''\r\n    }\r\n    onStrtTmChange = time => this.setState({ ...this.state, strtTime : time });\r\n    onEndTmChange = time => this.setState({ ...this.state, endTime : time });\r\n    getValue () {\r\n        if (StrLib.isNull(this.state.endTime) && StrLib.isNull(this.state.strtTime)) {\r\n            this.props.data.STRT_TM = '';\r\n            this.props.data.END_TM = '';\r\n            return '';\r\n        } else {\r\n            if (StrLib.isNull(this.state.strtTime)) {\r\n                this.props.data.END_TM = this.state.endTime.replace(':', '');\r\n                return this.state.endTime.replace(':', '');\r\n            }\r\n            if (StrLib.isNull(this.state.endTime)) {\r\n                this.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n                return this.state.strtTime.replace(':', '');\r\n            }\r\n            this.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n            this.props.data.END_TM = this.state.endTime.replace(':', '');\r\n            return this.state.strtTime.replace(':', '') + this.state.endTime.replace(':', '');\r\n        }\r\n    }\r\n    componentDidMount () {\r\n        this.setState({strtTime : StrLib.getFormatterTime(this.props.data.STRT_TM), endTime : StrLib.getFormatterTime(this.props.data.END_TM)});\r\n    }\r\n    isPopup() {return true;}\r\n    render() {\r\n        return (\r\n            <div style={{display : 'flex'}}>\r\n                <span style={{marginRight : '5px'}}><b> 시작시간 : </b></span>\r\n                <TimePicker onChange={this.onStrtTmChange} value={this.state.strtTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n                <span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n                <span style={{marginRight : '5px'}}><b> 종료시간 :  </b></span>\r\n                <TimePicker onChange={this.onEndTmChange} value={this.state.endTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport {DateComponent, TimeComponent, RangeDateComponent, RangeTimeComponent}","import React from 'react';\r\nclass CheckboxRenderer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.checkedHandler = this.checkedHandler.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        value : 'N'\r\n    };\r\n    checkedHandler(event) {\r\n        let value = 'N'\r\n        if (event.target.checked) {\r\n            value = 'Y'\r\n        }\r\n        let colId = this.props.column.colId;\r\n        this.props.node.setDataValue(colId, value);\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <input type=\"checkbox\"  onClick={this.checkedHandler} checked={(this.props.value === 'Y') ? true : false} />\r\n        )\r\n    }\r\n}\r\nexport default CheckboxRenderer;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\n \r\nclass DelRowButton extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onClick = (e) => {\r\n        console.log(this.props);\r\n        this.props.context.componentParent.onDeleteRow(this.props);\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <Button value='삭제' onClick={this.onClick}/>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DelRowButton;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport {ComLib} from 'common';\r\n//import DatePicker from \"react-datepicker\";\r\n\r\nimport {CentListSelectBox} from 'components';\r\nimport {DateComponent, TimeComponent, CheckboxRenderer, RangeDateComponent, RangeTimeComponent, DelRowButton} from './components';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\nimport \"flatpickr/dist/themes/dark.css\";\r\n\r\nclass Grid extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            gridApi : {},\r\n            columnApi : {},\r\n            columnDefs: [],\r\n            rowData: [],\r\n            insertColumnData : {}\r\n        }\r\n        this.onCellClicked          =       this.onCellClicked.bind(this);\r\n        this.onCellDoubleClicked    =       this.onCellDoubleClicked.bind(this);\r\n        this.onCellFocused          =       this.onCellFocused.bind(this);\r\n        this.onRowClicked           =       this.onRowClicked.bind(this);\r\n        this.onRowSelected          =       this.onRowSelected.bind(this);\r\n        this.onRowDoubleClicked     =       this.onRowDoubleClicked.bind(this);\r\n        this.onCellValueChanged     =       this.onCellValueChanged.bind(this);\r\n        this.onGridReady            =       this.onGridReady.bind(this);\r\n        this.onCellEditingStopped   =       this.onCellEditingStopped.bind(this);\r\n        this.onRowDataChanged       =       this.onRowDataChanged.bind(this);\r\n        this.onSelectionChanged     =       this.onSelectionChanged.bind(this);\r\n        this.onDeleteRow            =       this.onDeleteRow.bind(this);\r\n    }\r\n    // checkboxSelection: false,\r\n    static defaultProps = {\r\n        id : null,\r\n        data : [],\r\n        header : [],\r\n        suppressMovableColumns : true,\r\n        rowDragManaged : false,\r\n        suppressScrollOnNewData : false,\r\n        suppressRowClickSelection : false,\r\n        sort : true,\r\n        filter : false,\r\n        floatingFilter: false,\r\n        rowSelection : 'single',\r\n        paging : {\r\n            pagination : true,\r\n            paginationPageSize : 100,\r\n            paginationAutoPageSize : false\r\n        },\r\n        onRowClicked : () => {return;},\r\n        onCellFocused : () => {return;},\r\n        onCellClicked : () => {return;},\r\n        onCellDoubleClicked : () => {return;},\r\n        onCellValueChanged : () => {return;},\r\n        onRowDoubleClicked : () => {return;},\r\n        onCellEditingStopped  : () => {return;},\r\n        onSelectionChanged  : () => {return;},\r\n        onRowSelected  : () => {return;},\r\n        onDeleteRow : () => {return;}\r\n    };\r\n    componentDidMount () { \r\n        this.setState({...this.state, columnDefs : ComLib.setGridHeader(this.props.header), rowData : this.props.data});\r\n    };\r\n    /* Event Zone */\r\n    onCellValueChanged = (e) => { if (e.oldValue !== e.newValue) { this.props.onCellValueChanged({ id : this.props.id, data : e.data, index : e.node.id, row: e.rowIndex, col: e.column.colId, node : e.node, cellEditor : e.colDef.cellEditor, cellEditorParams : e.colDef.cellEditorParams, oldValue : e.oldValue, newValue : e.newValue}); }}\r\n    onCellClicked = (e) => { if (this.props.id === null || this.props.id === undefined) { return; }  \r\n        this.props.onCellClicked({ id : this.props.id, data : e.data, index : e.node.id });};\r\n    onCellDoubleClicked = (e) => { if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onCellDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id });};\r\n    onCellFocused = (e) => { if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onCellFocused({ id : this.props.id, data : e.data, index : e.node.id }); };\r\n    onRowClicked = (e) => { if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onRowClicked({ id : this.props.id, data : e.data, index : e.node.id });};\r\n    onRowDoubleClicked = (e) => { if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onRowDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id }); };\r\n    onGridReady = (event) => {\r\n        let obj = Object.fromEntries(new Map(this.props.header.map((row => { return [row.field, '']; }))));\r\n        this.setState({\r\n                ...this.state, gridApi: event.api, columnApi: event.columnApi, insertColumnData : obj\r\n        }, () => { \r\n            if (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n                setTimeout(() => this.state.gridApi.sizeColumnsToFit(), 50)\r\n            }\r\n        });\r\n    };\r\n    onCellEditingStopped = (e) => { if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onCellEditingStopped({ id : this.props.id, data : e.data, index : e.node.id });};\r\n    onRowDataChanged = () => { \r\n        if (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n            this.state.gridApi.sizeColumnsToFit();\r\n        }\r\n    };\r\n    onSelectionChanged = (e) => {\r\n        //if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onSelectionChanged({ id : this.props.id, data : e.data, index : e.node.id });\r\n    };\r\n    onRowSelected = (e) => {\r\n        if (this.props.id === null || this.props.id === undefined) { return; }  this.props.onRowSelected({ id : this.props.id, data : e.data, index : e.node.id });\r\n    }\r\n    onDeleteRow = (e) => {\r\n        if (this.props.id === null || this.props.id === undefined) { return; }\r\n        this.props.onDeleteRow({ id : this.props.id, data : e.data, index : e.node.id });\r\n    }\r\n    /* Method Zone */\r\n    doFilter = (value) => {\r\n        this.state.gridApi.setQuickFilter(value);\r\n    };\r\n    insertRow = () => {\r\n        this.state.gridApi.applyTransaction({add : new Array(this.state.insertColumnData)});\r\n        this.state.gridApi.setFocusedCell(this.state.gridApi.getDisplayedRowCount()-1, Object.keys(this.state.insertColumnData)[0], '');\r\n        this.state.gridApi.startEditingCell({\r\n            rowIndex: this.state.gridApi.getDisplayedRowCount()-1,\r\n            colKey: Object.keys(this.state.insertColumnData)[0]\r\n        });\r\n    };\r\n    getSelectedRowIndex = () => {\r\n        if (this.state.gridApi.getSelectedNodes().length === 0) {\r\n            return null;\r\n        }\r\n        return Number(this.state.gridApi.getSelectedNodes()[0].id);\r\n    };\r\n    getSelectedRows = () => {\r\n        if (this.state.gridApi.getSelectedRows().length === 0) {\r\n            return [];\r\n        }\r\n        return this.state.gridApi.getSelectedRows();\r\n    };\r\n    getDeSelectedRows = () => {\r\n        let deSelectRows = [];\r\n        this.state.gridApi.forEachNode((node, index) => {  \r\n            if (!node.isSelected()) deSelectRows.push(node.data);\r\n        });\r\n        return deSelectRows;\r\n    };\r\n    //deselectAll = () => { this.state.gridApi.deselectAll(); };\r\n    editStart = (row, col) => {\r\n        this.state.gridApi.setFocusedCell(row, col);\r\n        this.state.gridApi.startEditingCell({ rowIndex : row, colKey : col});\r\n    };\r\n    autoSizeFit = () => {\r\n        this.state.gridApi.sizeColumnsToFit();\r\n    };\r\n    render() {\r\n        return (\r\n            <div className=\"ag-theme-alpine\" style={ {width:'100%', height: this.props.height} }>\r\n                <AgGridReact onGridReady={this.onGridReady} suppressAutoSize = {false} alwaysShowVerticalScroll = {false}\r\n                            components = {{\r\n                                // dated : flatpickr()\r\n                            }}\r\n                            frameworkComponents = {{\r\n                                date : DateComponent,\r\n                                rangeDate : RangeDateComponent,\r\n                                rangeTime : RangeTimeComponent,\r\n                                time : TimeComponent,\r\n                                checkbox: CheckboxRenderer,\r\n                                selectbox : SelectboxRenderer,\r\n                                headerCheckbox : HeaderCheckboxRender,\r\n                                delButton : DelRowButton,\r\n                                CentListSelectBox : CentListSelectBox\r\n                            }}\r\n                            suppressMovableColumns = {this.props.suppressMovableColumns}\r\n                            context = {{ componentParent : this }}\r\n                            immutableColumns = {true}\r\n                            multiSortKey = {'ctrl'}\r\n                            headerHeight = {30}\r\n                            rowHeight = {20}\r\n                            defaultColDef = {{ \r\n                                    resizable: true\r\n                                ,   sortable : this.props.sort\r\n                                ,   editable : false\r\n                                ,   autoHeight : true\r\n                                ,   filter : this.props.filter\r\n                                ,   floatingFilter: this.props.floatingFilter\r\n                            }}\r\n                            autoGroupColumnDef = {this.props.autoGroupColumnDef || {}}\r\n                            rowDragManaged = {this.props.rowDragManaged}\r\n                            suppressDragLeaveHidesColumns={true}\r\n                            suppressScrollOnNewData = {this.props.suppressScrollOnNewData}\r\n                            suppressRowClickSelection = {this.props.suppressRowClickSelection}\r\n                            stopEditingWhenGridLosesFocus = {true}\r\n                            columnDefs = {this.props.header}\r\n                            rowData = { this.props.data }\r\n                            localeText = {{noRowsToShow: '조회된 결과가 존재하지 않습니다.'}}\r\n                            rowSelection= {this.props.rowSelection}\r\n                            colResizeDefault= {'shift'}\r\n                            \r\n                            \r\n                            // event\r\n                            onRowClicked = {this.onRowClicked}\r\n                            onCellClicked = {this.onCellClicked}\r\n                            onCellDoubleClicked = {this.onCellDoubleClicked}\r\n                            onCellValueChanged = {this.onCellValueChanged}\r\n                            onCellEditingStopped  = {this.onCellEditingStopped}\r\n                            onRowDataChanged = {this.onRowDataChanged}\r\n                            onSelectionChanged = {this.onSelectionChanged}\r\n                            onRowSelected = {this.onRowSelected}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nclass SelectboxRenderer extends React.Component {\r\n    render() {\r\n        return (\r\n            <select onChange = {(e) => console.log(1)}>\r\n                <option value='Y'>사용</option>\r\n                <option value='N'>사용안함</option>\r\n            </select>\r\n        )\r\n    }\r\n}\r\nclass HeaderCheckboxRender extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.checkedHandler = this.checkedHandler.bind(this);\r\n    }\r\n    checkedHandler(event) {\r\n        let value = 'N'\r\n        if (event.target.checked) {\r\n            value = 'Y'\r\n        }\r\n        this.props.api.forEachNode((node, index) => { node.setDataValue(this.props.column.colId, value); });\r\n    }\r\n    render() {\r\n        return (\r\n            <input type=\"checkbox\"  onClick={this.checkedHandler}></input>\r\n        )\r\n    }\r\n}\r\nexport default Grid;","import React from 'react';\r\nimport {StrLib} from 'common';\r\nimport { Link } from 'react-router-dom';\r\nclass HeaderMenu extends React.Component {\r\n    constructor(props)  {\r\n        super(props);\r\n        this.state = {\r\n            open : false\r\n        }\r\n        this.setOpenTray = this.setOpenTray.bind(this);\r\n    }\r\n    setMenuDivOpen = () => {\r\n        this.setState({...this.state, open : !this.state.open});\r\n    }\r\n    setOpenTray = (e) => {\r\n        console.log('setOpenTray');\r\n        console.log(e.target.id);\r\n        console.log(e.target);\r\n        this.props.openMenu(e.target.id);\r\n        this.setState({...this.state, open : false});\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"scrm-header-menu-container\">\r\n                    <ul className=\"scrm-header-menu-ul\">\r\n                        {\r\n                            this.props.menu.filter(item => StrLib.isNull(item.PARN_MENU_ID) ).map((item, key) => {\r\n                                return <li className=\"scrm-header-menu-li\" key={'menu_' + key} onClick={this.setMenuDivOpen}>{item.MENU_NM}</li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className= {(this.state.open) ? \"scrm-header-menu-active\" : \"scrm-header-menu-nested\"}>\r\n                        <ul className=\"scrm-header-menu-ul\">\r\n                            {\r\n                                this.props.menu.filter(item => item.PARN_MENU_ID === '').map((item, key) => {\r\n                                    return (\r\n                                        <li className=\"scrm-header-menu-li\" key={'div_menu_' + key} onClick={this.setMenuDivOpen}>\r\n                                            <ul className=\"scrm-header-submenu-ul\">\r\n                                                {\r\n                                                    this.props.menu.filter(menu => menu.PARN_MENU_ID === item.MENU_ID).map((subMenu, subKey) => {\r\n                                                        return <li  className=\"scrm-header-submenu-li\" key={'submenu_' + subKey} id={subMenu.MENU_ID}\r\n                                                                    onClick = {\r\n                                                                        (e) => {\r\n                                                                            this.props.openMenu(subMenu);\r\n                                                                            this.setState({...this.state, open : false});\r\n                                                                        }\r\n                                                                    }\r\n                                                                > {subMenu.MENU_NM} </li>;\r\n                                                    })\r\n                                                }\r\n                                            </ul>\r\n                                        </li>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nclass Menu extends React.Component {\r\n    onClick = () => {\r\n        \r\n    }\r\n    setMenuOpen = (e) => {\r\n        if (e.target.nextSibling.style.display === 'none' || e.target.nextSibling.style.display.length === 0) {\r\n            e.target.nextSibling.style.display = 'block';\r\n        } else {\r\n            e.target.nextSibling.style.display = 'none';\r\n        };\r\n    }\r\n    setMenuConfig = (data) => {\r\n        let rtnUpMenu = [];\r\n        data.map((item) => {\r\n            if (item.PARN_MENU_ID === null || item.PARN_MENU_ID === '') {\r\n                item = {...item, subMenuYn: 'N'};\r\n                rtnUpMenu.push(item);\r\n            } else {\r\n                rtnUpMenu.map((arrJson) => {\r\n                    if (arrJson.MENU_ID === item.PARN_MENU_ID) {\r\n                        arrJson.subMenuYn = 'Y';\r\n                    }\r\n                    return arrJson;\r\n                });\r\n            }\r\n        });\r\n        return (\r\n            rtnUpMenu.map((json, i) => {\r\n                if (json.subMenuYn === 'N') {\r\n                    if (json.MENU_ID === 'BASE') {\r\n                        return (\r\n                            <li key={'up_menu_li_' + i}>\r\n                                 <Link style={{ textDecoration: 'none', color: '#000000'}} to= {'/' + json.MENU_ID }>\r\n                                    <div className='scrm-menu-side-li-div'>{json.MENU_NM}</div>\r\n                                </Link>\r\n                            </li>\r\n                        );\r\n                    } else {\r\n                        return (\r\n                            <li key={'up_menu_li_' + i}>\r\n                                <div className='scrm-menu-side-li-div' onClick={this.setMenuOpen}> {json.MENU_NM} </div>\r\n                            </li>\r\n                        );\r\n                    }\r\n                } else {\r\n                    return (\r\n                        <li key={'up_menu_li_' + i}>\r\n                            <div>\r\n                                <div className='scrm-menu-side-li-div' onClick={this.setMenuOpen}>{json.MENU_NM}</div>\r\n                                <div className='scrm-menu-side-li-div-hide'>\r\n                                    <ul key = {'sub_menu_ul' + i} >\r\n                                    { \r\n                                        data.map((menu, index) => {\r\n                                            if (menu.PARN_MENU_ID === json.MENU_ID) {\r\n                                                return ( \r\n                                                    <li key={'sub_mnu_li' + index}>\r\n                                                        <Link style={{ textDecoration: 'none', color: '#000000'}} to={menu.PRG_PATH}>\r\n                                                            <div className='scrm-menu-side-li-div' >{menu.MENU_NM}</div>\r\n                                                        </Link>\r\n                                                    </li>\r\n                                                );\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                 }\r\n            })\r\n        );\r\n    }\r\n    render () {\r\n        return (\r\n            <nav className='scrm-menu-side'>\r\n                <ul>\r\n                    { this.setMenuConfig(this.props.data) }\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport {Menu, HeaderMenu};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Tabs extends React.Component {\r\n    static propTypes = {\r\n        // children: PropTypes.instanceOf(Array).isRequired,\r\n        onClick : PropTypes.func.isRequired,\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            active: (React.Children.toArray(this.props.children).length === 0) \r\n                    ? 0 \r\n                    : React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none')[0].props.index };\r\n    }\r\n    static defaultProps = {\r\n        onClick : (e) => {return false;}\r\n    }\r\n    onClickTab = (index) => {\r\n        this.setState({ active: index });\r\n        this.props.onClick(index);\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{marginBottom: '50px'}}>\r\n                    <ul className ='scrm-tabs-ul'>\r\n                        {\r\n                            React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((tab) => {\r\n                                    return (\r\n                                        <Tab id={this.props.id} tabWidth= {this.props.tabWidth} active ={this.state.active} key ={tab.props.index} index= {tab.props.index} label = {tab.props.label} onClick = {this.onClickTab}/>\r\n                                    )\r\n                            })\r\n\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <div className='scrm-tab-container' style={{height: this.props.height}}>\r\n                    {   \r\n                        React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((child) => {\r\n                            if (child.props.index !== this.state.active) return undefined;\r\n                            return child.props.children;\r\n                        })\r\n                    }\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n} \r\nclass Tab extends React.Component {\r\n    static propTypes = {\r\n        active: PropTypes.number.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n        tabWidth: PropTypes.string.isRequired\r\n    };\r\n    onClick = () => {\r\n        this.props.onClick(this.props.index);\r\n    }\r\n    render () {\r\n        let className = 'scrm-tabs-ul-li';\r\n        if (this.props.active === this.props.index) {\r\n            className += ' scrm-tabs-ul-li-active'\r\n        }\r\n        return (\r\n            <li className ={className} style={{width: this.props.tabWidth}} onClick ={this.onClick}> {this.props.label} </li>\r\n        );\r\n    }\r\n}\r\nclass TabPanel extends React.Component {\r\n    static defaultProps = {\r\n        index : 0,\r\n        label : 'TAB'\r\n    }; \r\n    render () {\r\n        return ( <div id={this.props.id} className='scrm-tab-panel'> {this.props.children} </div> )\r\n    }\r\n}\r\nexport { Tabs, Tab, TabPanel };","import PwdInit   from 'containers/base/common/pwdInit.js';\r\nimport pwdChg   from 'containers/base/common/pwdChg.js';\r\nimport COM010010 from 'containers/com/COM010010';\r\nimport COM010020 from 'containers/com/COM010020';\r\nimport SYS030001 from 'containers/sys/SYS030001';\r\n\r\nexport const popRoute = [\r\n    { id: 'pwdInit',  component: PwdInit },\r\n    { id: 'pwdChg',  component: pwdChg },\r\n    { id: 'COM010010',  component: COM010010 },\r\n    { id: 'COM010020',  component: COM010020 },\r\n    { id: 'SYS030001',  component: SYS030001 },\r\n];","import React from 'react'\r\nimport {ComLib, TransManager, StrLib} from 'common';\r\n\r\nclass PwdInit extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        // state 초기화\r\n        this.state = {\r\n            open : false,\r\n            param : {\r\n                id : '',\r\n                name : '',\r\n                telNo : ''\r\n             }\r\n        }\r\n        // 이벤트 바인딩\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.event.input.onChange = this.event.input.onChange.bind(this)\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            // 로그인 체크\r\n            case 'PWD_INIT_C01' :\r\n                if (StrLib.isNull(this.state.param.id)) {\r\n                    ComLib.openDialog('A', 'ID를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.name)) {\r\n                    ComLib.openDialog('A', '사용자 성명을 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.telNo)) {\r\n                    ComLib.openDialog('A', '전화번호를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 로그인 체크\r\n                case 'PWD_INIT_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.init);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        // sqlmapid:\"COM.C_doInitPwd\",\r\n                        datasetsend:\"dsSendData\",\r\n                        datasetrecv:\"dsRecvData\",\r\n                    });\r\n                    transManager.addDataset('dsSendData', [{ USR_CD : this.state.param.id, USR_NM: this.state.param.name, TEL_NO: this.state.param.birth }]);\r\n                    transManager.agent();\r\n                    break;\r\n\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        console.log('callback start');\r\n        console.log(res);\r\n        try  {\r\n            switch (res.id) {\r\n                case 'PWD_INIT_C01' :\r\n                    console.log(res.data);\r\n                    alert(res.data.dsRecvData.password);\r\n                    this.props.onClose();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnPwdInitConfirm' : \r\n                        if (this.validation('PWD_INIT_C01')) {\r\n                            this.transaction('PWD_INIT_C01');\r\n                        }\r\n                        break;\r\n                    case 'btnPwdInitCancel' :\r\n                        this.props.onClose();\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'txtInitId'    : this.setState({...this.state, param : {...this.state.param, id : e.target.value}}); break;\r\n                    case 'txtInitPwd'   : this.setState({...this.state, param : {...this.state.param, name : e.target.value}}); break;\r\n                    case 'txtInitTelNo' : this.setState({...this.state, param : {...this.state.param, telNo : e.target.value}}); break;\r\n                    default: break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"scrm-pwdinit\">\r\n                <div className=\"scrm-pwd-init-div\">\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>ID</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitId' value={this.state.param.id} placeholder={'사용자 ID를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div> \r\n                    <div className = 'scrm-login-input'>\r\n                        <label>성명</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitPwd' value={this.state.param.name} placeholder={'성명을 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>전화번호</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitTelNo' value={this.state.param.telNo} placeholder={'전화번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-btn-div'>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PwdInit;","import React from 'react';\r\nimport {ComLib, StrLib, TransManager, DataLib} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n//  화면 ID     : pwdChg\r\n//  화면명      : 비밀번호 변경\r\n//  화면 종류   : 팝업\r\n//  작성자      : HW.LEE\r\n//  작성일자    : 2020.07.26\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass PwdChg extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\tdsPwdInfo: DataLib.datalist.getInstance([{USR_CD: '', CUR_PWD: '', NEW_PWD: '', CON_PWD: ''}]),\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this)\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.location !== undefined) {\r\n\t\t\tComLib.setStateRecords(this, \"dsPwdInfo\", this.props.location.state.param);\r\n\t\t\tconsole.log(this.state.dsPwdInfo);\r\n\t\t} else {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tevent = {\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptUsrCd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptCurPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CUR_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptNewPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"NEW_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptConPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CON_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnPwdchgConfirm':\r\n\t\t\t\t\tif (this.validation('PWDCHG_R01')) this.transaction('PWDCHG_R01');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnPwdchgCancel':\r\n\t\t\t\t\t//window.location = '/';\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid).remove();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t * PWDCHG_R01 : 인증 / 신규 비밀번호 체크\r\n\t * PWDCHG_C01 : 신규 비밀번호 등록\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"USR_CD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '아이디를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CUR_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '현재 비밀번호를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '새로운 비밀번호를 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"CUR_PWD\") === this.state.dsPwdInfo.getValue(0, \"NEW_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', '현재 비밀번호와 신규 비밀번호가 같습니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CON_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '신규 비밀번호를 재 입력해 주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") !== this.state.dsPwdInfo.getValue(0, \"CON_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', '신규 비밀번호와 재입력된 비밀번호가 다릅니다.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Sen data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkCurUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkCurPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkNewPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkNewPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.C_addUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry  {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'PWDCHG_R01' :\r\n\t\t\t\tif (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'USR') {\r\n\t\t\t\t\tComLib.openDialog('A', '아이디가 없습니다.');\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'N') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 오류 입니다.');\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'Y') {\r\n\t\t\t\t\tif (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'Y') {\r\n\t\t\t\t\t\tComLib.openDialog('A', '최근 6개월 이내 사용된 비밀번호 입니다.');\r\n\t\t\t\t\t} else if (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'N') {\r\n\t\t\t\t\t\tif (this.validation('PWDCHG_C01')) this.transaction('PWDCHG_C01');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\t//ComLib.openDialog('A', '비밀번호가 변경되었습니다.');\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tdocument.getElementById('_btnClose').click();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className = {(this.props.options) ? 'scrm-login-pop' : 'scrm-login'}>\r\n\t\t\t\t<div className = \"scrm-login-div\">\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'iptUsrCd' value = {this.state.dsPwdInfo.records[0][\"USR_CD\"]} placeholder = {'아이디를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>현재 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptCurPwd' value = {this.state.dsPwdInfo.records[0][\"CUR_PWD\"]} placeholder = {'현재 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>신규 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptNewPwd' value = {this.state.dsPwdInfo.records[0][\"NEW_PWD\"]} placeholder = {'신규 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>비밀번호 확인</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptConPwd' value = {this.state.dsPwdInfo.records[0][\"CON_PWD\"]} placeholder = {'신규 비밀번호를 재입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn'><button id = 'btnPwdchgConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn'><button id = 'btnPwdchgCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PwdChg;","import React from 'react';\r\nimport {SubFullPanel, HtmlEditor, CustomSlide as Slide} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DateLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone] \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            srchFileParam : '',\r\n            dsNoteInfo : [],\r\n            dsNoteFileInfo : [],\r\n            dsModifyInfo : { BORD_MNG_NO: '', TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', REG_CENT: '', DEL_YN : '', REG_DTM : '', REG_ID : '' , CHG_ID: '', CHG_DTM: ''}\r\n        }\r\n        this.event.grid.onRowClicked = this.event.grid.onRowClicked.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n        this.transaction('COM010010_R01');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            case 'COM010010_R01' :\r\n                this.transaction('COM010010_R01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                case 'COM010010_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"COM.R_getNoteInfo\",\r\n                        datasetsend:\"dsSrchNoteInfo\",\r\n                        datasetrecv:\"dsNoteInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchNoteInfo', [{ SRCH_YN : 'Y' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                    \r\n                case 'COM010010_R02' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"COM.R_getNoteFileInfo\",\r\n                        datasetsend:\"dsSrchNoteFileInfo\",\r\n                        datasetrecv:\"dsNoteFileInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchNoteFileInfo', [{BORD_MNG_NO : this.state.srchFileParam}]);\r\n                    transManager.agent();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'COM010010_R01' : \r\n                this.setState({\r\n                        ...this.state,\r\n                        dsNoteInfo : res.data.dsNoteInfo,\r\n                        dsNoteFileInfo : [],\r\n                        dsModifyInfo : { TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', DEL_YN : '', REG_DT : '', REG_USR : '' , MFY_ER: '', MFY_DT: ''}\r\n                });\r\n                break;\r\n            case 'COM010010_R02' : \r\n                this.setState({...this.state, dsNoteFileInfo : res.data.dsNoteFileInfo});\r\n                break;\r\n            default :  break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        grid : {\r\n            onRowClicked  : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdNoteInfo' :\r\n                        this.setState({ \r\n                            ...this.state\r\n                            ,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n                            ,   srchFileParam : e.data.BORD_MNG_NO\r\n                        }, () => this.transaction('COM010010_R02'));\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <SubFullPanel>\r\n                    <Grid   id = 'grdNoteInfo' ref='grdNoteInfo' height=\"200px\"\r\n                            header = {[\r\n                                {   headerName : 'No',          field : 'BORD_MNG_NO',  colId : 'BORD_MNG_NO',  width: 80      },\r\n                                {   headerName : '등록일자',    field : 'REG_DTM',      colId : 'REG_DTM',      width: 120,\r\n                                    valueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n                                {   headerName : '유효일자',    field : 'VALD_DT',      colId : 'VALD_DT',      width: 120,        \r\n                                    valueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n                                {   headerName : '제목',        field : 'TITLE',        colId : 'TITLE',        width: 200      },\r\n                                {   headerName : '내용구분',    field : 'CONT_DV',      colId : 'CONT_DV',      width: 120,\r\n                                    cellEditor: 'agSelectCellEditor', \r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('106') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '106')            },\r\n                                {   headerName : '등록센터',    field : 'CENT_NM',      colId : 'CENT_NM',     width: 120       },\r\n                                {   headerName : '등록자',      field : 'REG_ID',       colId : 'REG_ID',      width: 110       }\r\n                            ]}\r\n                            data = {this.state.dsNoteInfo}\r\n                            onRowClicked = {this.event.grid.onRowClicked}\r\n                    />\r\n                </SubFullPanel>\r\n                <SubFullPanel>\r\n                    <HtmlEditor id=\"iptNoteCont\"  value={this.state.dsModifyInfo.CONT} readOnly={true} toolbarHidden={true} height={320}/>\r\n                </SubFullPanel>\r\n                <SubFullPanel>\r\n                    {(this.state.dsNoteFileInfo.length !== 0) ? <Slide data={this.state.dsNoteFileInfo} height={150}></Slide> : <span>{'조회된 파일 없습니다.'}</span> }\r\n                </SubFullPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, CentListSelectBox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    \r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dsSrchCondition : [],\r\n            dsAddMulUserInfo : [],\r\n            filterDsAddMulUserInfo : [],\r\n            srchParam : {\r\n                usrNm : ''\r\n            },\r\n        }\r\n        this.event.input.onChange = this.event.input.onChange.bind(this);\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.event.grid.onRowClicked = this.event.grid.onRowClicked.bind(this);\r\n        this.event.grid.onCellValueChanged = this.event.grid.onCellValueChanged.bind(this);\r\n        this.event.grid.onDeleteRow = this.event.grid.onDeleteRow.bind(this);\r\n    }\r\n    componentDidMount () {\r\n        this.transaction('SYS030001_R01');\r\n    }\r\n    validation = (id) => {\r\n        switch (id) {\r\n            case 'SYS030001_R01' :\r\n                \r\n                this.transaction('SYS030001_R01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    transaction = (transId) => {\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 사용자 조회\r\n                case 'SYS030001_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getUserAllInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsUserInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y'}]);\r\n                    transManager.agent();\r\n                    break;\r\n                default : break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SYS030001_R01' : \r\n                this.setState({...this.state, dsAddMulUserInfo : res.data.dsUserInfo, filterDsAddMulUserInfo : res.data.dsUserInfo});\r\n                break;\r\n            default :  break;\r\n        }\r\n    }\r\n    event = {\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'iptSrchName' : \r\n                        this.setState({...this.state , srchParam : { ...this.state.srchParam, usrNm : e.target.value}}, () => {\r\n                            this.handler.fliterUserName(this.state.srchParam.usrNm);\r\n                        });\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnAddCond' :\r\n                        if (this.state.dsSrchCondition.length === 0) {\r\n                            this.setState({\r\n                                ...this.state\r\n                            ,   dsSrchCondition : this.state.dsSrchCondition.concat({ OPER: 'NOT', COND_NM : '', COND : '', COND_VAL : ''})}\r\n                            ,   () => this.refs.grdSrchCondInfo.editStart(DataLib.getRowCount(this.state.dsSrchCondition)-1, 'COND_NM'));\r\n                        } else {\r\n                            this.setState({\r\n                                ...this.state\r\n                            ,   dsSrchCondition : this.state.dsSrchCondition.concat({ OPER: 'AND', COND_NM : '', COND : '', COND_VAL : ''})}\r\n                            ,   () => this.refs.grdSrchCondInfo.editStart(DataLib.getRowCount(this.state.dsSrchCondition)-1, 'COND_NM'));\r\n                        }\r\n                        \r\n                        break;\r\n                    case 'btnSrchMulUser' :\r\n                        break;\r\n                    case 'btnAddAddMulUser' :\r\n                        this.props.onCallbackFunc('add user suceess');\r\n                        if (this.refs.grdAddMulUserInfo.getSelectedRows().length === 0) {\r\n                            ComLib.openDialog('A', '선택된 사용자가 없습니다.');\r\n                            return false;\r\n                        } else {\r\n                            \r\n                            this.props.onCallbackFunc(this.refs.grdAddMulUserInfo.getSelectedRows());\r\n                        }\r\n                        break;\r\n                    default : break;\r\n                }\r\n                \r\n            }\r\n        },\r\n        grid : {\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdAddMulUserInfo' :\r\n                        let api = this.refs.grdAddMulUserInfo.state.gridApi;\r\n                        api.getRowNode(e.index).setSelected(!api.getRowNode(e.index).isSelected());\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onCellValueChanged : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdSrchCondInfo' :\r\n                        if (e.row === 0) {\r\n                            if (e.data.OPER !== 'NOT') {\r\n                                ComLib.openDialog('A', '첫 행은 접속어를 선택할 수 없습니다.');\r\n                                e.node.data.OPER = 'NOT';\r\n                                e.node.gridApi.refreshCells();\r\n                                return false;\r\n                            }\r\n                        } else {\r\n                            if (e.data.OPER === 'NOT') {\r\n                                ComLib.openDialog('A', '첫 행이 아닌 행은 없음을 선택할 수 없습니다.');\r\n                                e.node.data.OPER = e.oldValue;\r\n                                e.node.gridApi.refreshCells();\r\n                                return false;\r\n                            }\r\n                        }\r\n                        if (!StrLib.isNull(e.data.OPER) && !StrLib.isNull(e.data.COND_NM) && !StrLib.isNull(e.data.COND) && !StrLib.isNull(e.data.COND_VAL)) {\r\n                            let filterdDataSet = [];\r\n                            for (let intA=0; intA < this.state.dsSrchCondition.length; intA++) {\r\n                                if (this.state.dsSrchCondition[intA].OPER === 'AND') {\r\n                                    filterdDataSet = this.handler.filterByCondition(this.state.dsAddMulUserInfo, this.state.dsSrchCondition[intA]);\r\n                                } else {\r\n                                    filterdDataSet = filterdDataSet.concat(this.handler.filterByCondition(this.state.dsAddMulUserInfo, this.state.dsSrchCondition[intA]));\r\n                                    filterdDataSet = Array.from(new Set(filterdDataSet));\r\n                                }\r\n                            }\r\n                            this.setState({...this.state, filterDsAddMulUserInfo : filterdDataSet}, () => this.handler.fliterUserName(this.state.srchParam.usrNm));\r\n                        }\r\n                        break;\r\n                    case 'grdAddMulUserInfo' :\r\n                        \r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onDeleteRow : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdSrchCondInfo' :\r\n                        this.setState({...this.state, dsSrchCondition: this.state.dsSrchCondition.filter(item => item !== this.state.dsSrchCondition[e.index])});\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handler = {\r\n        fliterUserName : (str) => {\r\n            let userNameComponent = this.refs.grdAddMulUserInfo.state.gridApi.getFilterInstance('USR_NM');\r\n            userNameComponent.setModel({ type: 'startsWith', filter : str });\r\n            this.refs.grdAddMulUserInfo.state.gridApi.onFilterChanged();\r\n        },\r\n        filterByCondition : (data, condition) => {\r\n            if (condition.COND_NM === 'AUTH') {\r\n                switch (condition.COND) {\r\n                    case 'EQUAL' : return data.filter(item => item.AUTH_LV === condition.COND_VAL);\r\n                    case 'EXCPT' : return data.filter(item => item.AUTH_LV !== condition.COND_VAL);\r\n                    case 'LESS' : return data.filter(item => item.AUTH_LV <= condition.COND_VAL);\r\n                    case 'MORE' : return data.filter(item => item.AUTH_LV >= condition.COND_VAL);\r\n                    case 'OVER' : return data.filter(item => item.AUTH_LV > condition.COND_VAL);\r\n                    case 'UNDER' : return data.filter(item => item.AUTH_LV < condition.COND_VAL);\r\n                    default : break;\r\n                }\r\n            } else {\r\n                switch (condition.COND) {\r\n                    case 'EQUAL' : return data.filter(item => item.CENT_CD === condition.COND_VAL);\r\n                    case 'EXCPT' : return data.filter(item => item.CENT_CD !== condition.COND_VAL);\r\n                    case 'LESS' : return data.filter(item => item.CENT_CD <= condition.COND_VAL);\r\n                    case 'MORE' : return data.filter(item => item.CENT_CD >= condition.COND_VAL);\r\n                    case 'OVER' : return data.filter(item => item.CENT_CD > condition.COND_VAL);\r\n                    case 'UNDER' : return data.filter(item => item.CENT_CD < condition.COND_VAL);\r\n                    default : break;\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <ComponentPanel width=\"93%\">\r\n                <SubFullPanel>\r\n                    <FlexPanel>\r\n                        <Button mr=\"5px\" id=\"btnAddCond\" value=\"조건추가\" onClick = {this.event.button.onClick}></Button>\r\n                        <Textfield width=\"60%\" id='iptSrchName' value={this.state.srchParam.usrNm} onChange={this.event.input.onChange} placeholder={'성명을 입력하세요.'}/>\r\n                        <Button ml=\"5px\" id=\"btnSrchMulUser\" value=\"조회\" onClick = {this.event.button.onClick}></Button>\r\n                        <Button ml=\"5px\" id=\"btnAddAddMulUser\" value=\"추가\" onClick = {this.event.button.onClick}></Button>\r\n                    </FlexPanel>\r\n                </SubFullPanel>\r\n                <SubFullPanel>\r\n                    <Grid   id ='grdSrchCondInfo' ref='grdSrchCondInfo' height=\"250px\" sort={false}\r\n                            header = {[\r\n                                {   headerName : '그리고/또는',    field : 'OPER', colId : 'OPER',   width: 130,   editable : true, cellEditor: 'agSelectCellEditor',\r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('110') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '110')         },\r\n                                {   headerName : '조건명',         field : 'COND_NM', colId : 'COND_NM',   width: 130,   editable : true, cellEditor: 'agSelectCellEditor',\r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('108') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '108')         },\r\n                                {   headerName : '검색조건',       field : 'COND', colId : 'COND',   width: 130,   editable : true, cellEditor: 'agSelectCellEditor',\r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('109') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '109')         },\r\n                                {   headerName : '조건값',         field : 'COND_VAL', colId : 'COND_VAL',   width: 130,   editable : true, \r\n                                    cellEditorSelector : (params) => {\r\n                                        if (params.data.COND_NM === 'CENT') {\r\n                                            return {\r\n                                                component: 'agSelectCellEditor',\r\n                                                params : { values : ComLib.getCenterList().map((item) => item.CENT_CD) }\r\n                                            };\r\n                                        } else if (params.data.COND_NM === 'AUTH') {\r\n                                            return { \r\n                                                component: 'agSelectCellEditor' ,\r\n                                                params : { values : ComLib.setGridComCodeComboCellVal('100')}\r\n                                            };\r\n                                        } else {  return { component: 'agTextCellEditor'};  }\r\n\r\n                                    },\r\n                                    valueFormatter : (params) => {\r\n                                        if (params.api.getValue('COND_NM', params.api.getSelectedNodes()[0]) === 'CENT') {\r\n                                            if (ComLib.getCenterList().filter(item => item.CENT_CD === params.value).length !== 1) {\r\n                                                return '';\r\n                                            } else {\r\n                                                return ComLib.getCenterList().filter(item => item.CENT_CD === params.value)[0].CENT_NM;\r\n                                            }\r\n                                        } else if (params.api.getValue('COND_NM', params.api.getSelectedNodes()[0]) === 'AUTH') {\r\n                                            return ComLib.setGridComCodeComboCellNm(params.value, '100');\r\n                                        } else {\r\n                                            return params.value;\r\n                                        }\r\n                                        \r\n                                    }\r\n                                    \r\n                                },\r\n                                {headerName : '삭제',   field : 'DEL_BTN',       colId : 'DEL_BTN',       width: 70, cellRenderer: 'delButton'}\r\n                            ]}\r\n                            data = {this.state.dsSrchCondition}\r\n                            onRowClicked = {this.event.grid.onRowClicked}\r\n                            onCellValueChanged = {this.event.grid.onCellValueChanged}\r\n                            onDeleteRow = {this.event.grid.onDeleteRow}\r\n                    />\r\n                </SubFullPanel>\r\n                <SubFullPanel>\r\n                <Grid   id ='grdAddMulUserInfo' ref='grdAddMulUserInfo' height=\"300px\" rowSelection = 'multiple'\r\n                        suppressRowClickSelection = {true}\r\n                        sort = {false}\r\n                        header = {[\r\n                            {   headerName : '센터'        , field : 'CENT_NM',    colId : 'CENT_CD',  width: 130, headerCheckboxSelection: true, checkboxSelection: true, headerCheckboxSelectionFilteredOnly: true},\r\n                            {   headerName : '권한'        , field : 'AUTH_LV',    colId : 'AUTH_LV',  width: 130,\r\n                                cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('100') },\r\n                                valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '100')  },\r\n                            {   headerName : '사용자명'    , field : 'USR_NM',     colId : 'USR_NM',   width: 130 },\r\n                            {   headerName : '사용자코드'  , field : 'USR_CD',     colId : 'USR_CD',   width: 130 },\r\n                        ]}\r\n                        data = {this.state.filterDsAddMulUserInfo}\r\n                        onRowClicked = {this.event.grid.onRowClicked}\r\n                />\r\n                </SubFullPanel>\r\n            </ComponentPanel>\r\n        );\r\n    }\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {popRoute} from 'routes/popupRoute.js';\r\nimport Draggable from 'react-draggable';\r\nimport DialogBox from 'react-modeless';\r\n\r\n\r\nclass AlertDialog extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmessage : '',\r\n\t\tonClose : () => {return false;}\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClose = () => { this.props.onClose();};\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tonClose={this.onClose}\r\n\t\t\t\tcontainerClassName={\"scrm-alert-modal\"}\r\n\t\t\t\tdefaultPosition={{x: 0, y: 0}}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t\tclickBackdropToClose={true}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClose}>&#xd7;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<h2>{this.props.message}</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ConfirmDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\treturnVal : false\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false ,\r\n\t\tmessage :  '',\r\n\t\tonReturnVal : () =>  { return false; } ,\r\n\t\tonClose: () =>  { return false; }\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonReturnVal : PropTypes.func.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClick = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase 'btnConfirm' :  this.setState({...this.state, returnVal : true}, () => this.onClose()); break;\r\n\t\t\tcase 'btnCancel' : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t\tdefault : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t}\r\n\t}\r\n\tonClose = () => {\r\n\t\tthis.props.onClose();\r\n\t\tthis.props.onReturnVal(this.state.returnVal);\r\n\t};\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tdefaultPosition={{x: 0, y: 0}}\r\n\t\t\t\tcontainerClassName={\"scrm-alert-modal\"}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClick.bind(this)}>&#xd7;</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<h2>{this.props.message}</h2>\r\n\t\t\t\t\t\t<button id='btnConfirm' style={{positions:'relative', float: 'center', width: '80px', height : '30px', marginRight: '5px'}} onClick ={this.onClick.bind(this)}>예</button>\r\n\t\t\t\t\t\t<button id='btnCancel' style={{positions:'relative', float: 'center', width: '80px', height : '30px', marginLeft: '5px'}} onClick ={this.onClick.bind(this)}>아니오</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass PopupDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false ,\r\n\t\t\tmodal : true\r\n\t\t}\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onMinimize = this.onMinimize.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmodaless : false,\r\n\t\tposition : {x : 0, y: 0}\r\n\t};\r\n\tstatic propTypes = { onClose: PropTypes.func };\r\n\tonClick = (e) => {this.props.onClose(e);}\r\n\tonClose = (e) => {this.props.onClose(e);}\r\n\tonMinimize = (e) => {document.getElementById(this.props.popupdivid).hidden = true;}\r\n\tonCallbackFunc = (data) => {this.props.onCallbackFunc(data);}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tonMouseDown = {(e) => {}}\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tnoBackdrop={this.props.modaless}\r\n\t\t\t>\r\n\t\t\t\t<Draggable\r\n\t\t\t\t\tonClick = {(e) => {}}\r\n\t\t\t\t\tdefaultPosition = {this.props.position}\r\n\t\t\t\t\tpositionOffset = {{x: '-50%', y: 0}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className = \"scrm-popup-modal-content\" style={{width: this.props.options.width, height: this.props.options.height}}>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-header\">\r\n\t\t\t\t\t\t\t<div style={{float: 'left'}}>\r\n\t\t\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onClick}>&#xd7;</button>\r\n\t\t\t\t\t\t\t<button style={{padding: '5px', float: 'right', width : '30px', height : '30px', alignItems: 'center'}} onClick ={this.onMinimize}>-</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-body\" style={{overflow: 'auto'}}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpopRoute.filter(item => item.id === this.props.url).map((comp, key) => {\r\n\t\t\t\t\t\t\t\t\treturn <comp.component popupdivid={this.props.popupdivid} onCallbackFunc={this.onCallbackFunc} key={'pop_' + comp.id + '_' + key} onClose={this.onClose} options = {this.props.options}/>}\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Draggable>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nexport { AlertDialog, ConfirmDialog, PopupDialog};","import React from 'react';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\n\r\nimport { Progress } from \"react-sweet-progress\";\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\n\r\nimport { TransManager, ComLib } from \"common\";\r\n\r\nclass InputFileUpload extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            id : this.props.id || '',\r\n            files : null,\r\n            uploadPercent: 0,\r\n            uploadStatus: \"\",\r\n            showProgressbar: false\r\n        }\r\n        this.getUploadParams = this.getUploadParams.bind(this);\r\n        this.handleChangeStatus = this.handleChangeStatus.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setProgressPercent = this.setProgressPercent.bind(this);\r\n        this.callback = this.callback.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        height : 200,\r\n        handleChangeStatus : () => { return;},\r\n        handleSubmit : () => { return;}\r\n    }\r\n    getUploadParams = () => {\r\n        return { url: 'https://httpbin.org/post' }\r\n    }\r\n    handleChangeStatus = ({ meta }, status) => {\r\n        this.props.handleChangeStatus({ id : this.state.id, data : {status : status, mete: meta}})\r\n    }\r\n    setProgressPercent = (progressEvent) => {\r\n        this.setState({...this.state, uploadPercent: Math.floor((progressEvent.loaded * 100) / progressEvent.total)});\r\n        if (this.state.uploadPercent === 100) {\r\n            this.setState({\r\n                ...this.state, uploadStatus: \"success\",\r\n            });\r\n        }\r\n    }\r\n    handleSubmit = (files, allFiles) => {\r\n        if (this.validate(files)) {\r\n            this.setState({\r\n                ...this.state,\r\n                showProgressbar: true,\r\n                files : files\r\n            }, () => {\r\n                let transManager = new TransManager();\r\n                transManager.setTransUrl(\"/scrm/mfu/upload\");\r\n\r\n                let formData = new FormData();\r\n                Array.from(this.state.files).forEach((f) => formData.append(\"files\", f.file));\r\n                \r\n                formData.set(\"urlPath\", 'UPLOAD');\r\n                formData.set(\"transId\", 'UPLOAD');\r\n\r\n                transManager.addSendDataset(\"formData\", { formData: formData });\r\n                transManager.upload(this.setProgressPercent, this.callback);\r\n\r\n                allFiles.forEach(f => f.remove());\r\n            });\r\n        }\r\n    }\r\n    callback = (res) => {\r\n        console.log(res);\r\n        try {\r\n            switch (res.id) {\r\n                case \"UPLOAD\":\r\n                    if (res.data.gifnoc.ERR_CODE === 0) {\r\n                        this.setState({...this.state, uploadStatus : \"success\"}\r\n                        , () => {\r\n                            this.props.handleSubmit({ id : this.state.id, files : this.state.files});\r\n                            setTimeout(this.setState({...this.state,  files : null, showProgressbar: false, uploadPercent : 0, uploadStatus : \"\"}), 2000);\r\n                        });\r\n                    } else {\r\n                        this.setState({...this.state, uploadStatus: \"error\"});\r\n                    }\r\n                break;\r\n                default: break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    validate = (files) => {\r\n        let size = 0;\r\n        files.forEach((item) => { size += parseInt(item['file']['size']); })\r\n        if (Math.round(size/(1024*1024)) > 5) {\r\n            ComLib.openDialog('A', '업로드할 파일의 총 용랑은 5MB 이하로 제한됩니다.');\r\n            return false;\r\n        }\r\n        if (files.length > 5) {\r\n            ComLib.openDialog('A', '첨부파일의 갯수는 최대 5개로 제한됩니다.');\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    render () {\r\n        //this.setState({...this.state,  showProgressbar: false, uploadPercent : 0, uploadStatus : \"\"});\r\n        return  (\r\n            <React.Fragment>\r\n                {   this.state.showProgressbar \r\n                    ? <Progress percent={this.state.uploadPercent} status={this.state.uploadStatus}/>\r\n                    : null\r\n                }\r\n                <Dropzone\r\n                    inputContent=\"클릭 또는 파일을 드래그 하세요.\"\r\n                    inputWithFilesContent = \"파일추가\"\r\n                    submitButtonContent = \"업로드\"\r\n                    getUploadParams={this.getUploadParams}\r\n                    onChangeStatus={this.handleChangeStatus}\r\n                    onSubmit={this.handleSubmit}\r\n                    maxSizeBytes = {1024 * 1024 * 3}\r\n                    styles={{ dropzone: { height: this.props.height } }}\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass MultiFileUpload extends React.Component {\r\n    render () {\r\n        return  (\r\n            <></>\r\n        );\r\n    }\r\n}\r\n\r\nclass IconFileUpload extends React.Component {\r\n    render () {\r\n        return  (\r\n            <></>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport {InputFileUpload, MultiFileUpload, IconFileUpload}","import React from 'react';\r\n\r\nclass Textarea extends React.Component {\r\n    render () {\r\n        return (\r\n            <div className='scrm-textarea-div'>\r\n                <textarea id={this.props.id} value={this.props.value} rows=\"10\" onChange={(e) => this.props.onChange(e)}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Textarea;","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'; \r\n\r\nclass HtmlEditor extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n        this.onChange  = this.onChange.bind(this);\r\n    }\r\n    static defaultProps = {\r\n        toolbarHidden : false,\r\n        readOnly : false,\r\n        onChange : () => {return;}\r\n    }\r\n    modules = {\r\n        toolbar : (!this.props.toolbarHidden) ? [\r\n            [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n            [{ size: [\"small\", false, \"large\", \"huge\"] }, { font: [] }, { color: [] }, { background: [] }],\r\n            [{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n            [\"clean\"]\r\n        ] : false,\r\n        clipboard: { matchVisual: false }\r\n    };\r\n    formats = [ \"header\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"size\", \"color\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\", \"align\", \"background\", \"code\"];\r\n\r\n    onChange = (e) => { this.props.onChange({ id: this.props.id, value : e}); }\r\n    render (){\r\n        return (\r\n            <React.Fragment>\r\n                <Style>\r\n                    {`\r\n                        .scrm-editor-contnents {\r\n                            width: 100%;\r\n                            box-sizing: border-box;\r\n                        }\r\n                        .scrm-editor-contnents .ql-editor{\r\n                            width:  100%;\r\n                            height: ${this.props.height}px;\r\n                            overflow-y: auto;\r\n                            overflow-x: auto;\r\n                        }\r\n                    `}\r\n                </Style>\r\n                <ReactQuill theme = 'snow'\r\n                            id = {this.props.id}\r\n                            value = {this.props.value}\r\n                            onChange = {this.onChange}\r\n                            modules={this.modules}\r\n                            formats={this.formats}\r\n                            placeholder={'내용을 입력하세요.'}\r\n                            readOnly={this.props.readOnly}\r\n                            className = 'scrm-editor-contnents'\r\n                />\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default HtmlEditor;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Slider from \"react-slick\";\r\nimport axios from 'axios';\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport {newScrmObj, ComLib} from 'common';\r\n\r\nclass SlidePreview extends React.Component {\r\n    static defaultProps = {\r\n        open: false,\r\n        filepath : '',\r\n        onClose : () => {return false;}\r\n    };\r\n    static propTypes = {\r\n        open : PropTypes.bool.isRequired,\r\n        onClose: PropTypes.func.isRequired\r\n    };\r\n    onClick = () => { this.props.onClose();};\r\n    render () {\r\n        return (\r\n           <div className='scrm-slide-preview modal' style={{display: (this.props.open) ? 'block' : 'none'}}>\r\n                <span className=\"scrm-slide-preview close\" onClick ={this.onClick}>&times;</span>\r\n                <img className=\"scrm-slide-preview img\" src={process.env.API_URL + '/img/' + this.props.name} alt=''/>\r\n                <div id=\"scrm-slide-preview caption\">{}</div>\r\n           </div> \r\n        )\r\n    }\r\n}\r\n\r\nclass SlideContainer extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            ext : {\r\n                doc : ['doc', 'docx', 'hwp', 'txt'],\r\n                xls : ['xls', 'xlsx'],\r\n                ppt : ['ppt', 'pptx'],\r\n                pdf : ['pdf'],\r\n                img : ['gif', 'bmp', 'png', 'jpg', 'jpeg', 'jp2', 'j2c', 'jpx', 'jpf', 'jpc', 'j2k', 'tif']\r\n            }\r\n        }\r\n        this.onDownload = this.onDownload.bind(this);\r\n        this.onPreview = this.onPreview.bind(this);\r\n    }\r\n    onDownload = async() => {\r\n        console.log('download');\r\n        const reqOptions = {\r\n            method: 'get',\r\n            url: process.env.API_URL + '/scrm/mfu/files/' + this.props.name,\r\n            headers: { \r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            responseType: 'blob'\r\n        };\r\n        try {\r\n            const resData = await axios(reqOptions);\r\n            const url = window.URL.createObjectURL(new Blob([resData.data]));\r\n            const link = document.createElement('a');\r\n            link.href = url;\r\n            link.setAttribute('download', this.props.name); //or any other extension\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        } catch (err) {\r\n            ComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n            return false;\r\n        }\r\n    }\r\n    onPreview = () => {\r\n        console.log('onPreview');\r\n        if ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n            let dialog = document.createElement('div');\r\n            dialog.id = newScrmObj.constants.mdi.DIALOG;\r\n            document.body.appendChild(dialog);\r\n        }\r\n        ReactDOM.render(\r\n            <SlidePreview   open={true} url={this.props.url} name={this.props.name} onClose={ () => { ReactDOM.unmountComponentAtNode(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n                        ,   document.getElementById(newScrmObj.constants.mdi.DIALOG) \r\n        );\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <div className ='scrm-slide-container' style={{padding: '1px', width: (this.props.height * 0.9)+ 'px', height: (this.props.height * 0.9)+ 'px'}}>\r\n                    <div className ='scrm-slide-main'  onClick = {this.onPreview} style={{height: ((this.props.height * 0.9) - 20)+ 'px'}}>\r\n                        <span>{this.props.name}</span>\r\n                    </div>\r\n                    <div className=\"scrm-slider-download\" onClick = {this.onDownload} style={{height: '20px'}}>\r\n                        <img id='imgDownload' src={'/images/download.png'} alt='' width=\"20px\"/>\r\n                        <span>DOWNLOAD</span>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nclass CustomSlide extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.onSelectPrev = this.onSelectPrev.bind(this);\r\n        this.onSelectNext = this.onSelectNext.bind(this);\r\n    }\r\n    static defaultProps = { height: 200 }\r\n    setSlideInfo = (props) => {\r\n        let info = [];\r\n        return info;\r\n    }\r\n    setSlideContent = (item) => {\r\n        return (\r\n            item.map((data, idx) => {\r\n                return <SlideContainer key={'_slidsContainer_' + idx} name={data.FILE_NM} url={ process.env.API_URL + 'img/' + data.FILE_NM } height={this.props.height}/>\r\n            })\r\n        );\r\n    }\r\n    onDownloadAll = () => {\r\n        console.log('download all');\r\n    }\r\n    onSelectPrev = () => { this.slider.slickPrev(); }\r\n    onSelectNext = () => { this.slider.slickNext(); }\r\n    render() {\r\n        const settings = {\r\n                dots: true\r\n            ,   slidesToShow: Number(this.props.data.length) <= 5 ? this.props.data.length : 5\r\n            ,   slidesToScroll: 1\r\n            ,   initialSlide: 0\r\n            ,   speed: 500 \r\n            ,   responsive: [\r\n                    { breakpoint: 1024, settings: { slidesToShow: 3, slidesToScroll: 1, infinite: true, dots: true}}\r\n                ,   { breakpoint: 600, settings: { slidesToShow: 2, slidesToScroll: 1 }}\r\n                ,   { breakpoint: 480, settings: { slidesToShow: 1, slidesToScroll: 1 }}\r\n              ]\r\n        };\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{display : 'flex', width: '100%', height: this.props.height + 'px'}}>\r\n                    <div className='scrm-slide-prev' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectPrev}>\r\n                        <h1>&#10094;</h1>\r\n                    </div>\r\n                    <div style={{width : \"80%\"}}>\r\n                        <Slider ref={c => (this.slider = c)} {...settings}>\r\n                            {this.setSlideContent(this.props.data)}\r\n                        </Slider>\r\n                    </div>\r\n                    <div className='scrm-slide-next' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectNext}>\r\n                        <h1>&#10095;</h1>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default CustomSlide;","import React from 'react';\r\n\r\nclass Tree extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\te.target.parentElement.querySelector('.scrm-react-tree-ul-nested').classList.toggle('scrm-react-tree-ul-active');\r\n\t\te.target.classList.toggle('scrm-react-tree-check-box');\r\n\t}\r\n\tsetComboItem = () => {\r\n\t\tconsole.log('setComboItem');\r\n\t\tthis.props.dataset.map((item) => {\r\n\t\t\treturn {\r\n\t\t\t\tkey : item.id,\r\n\t\t\t\tparn_key : item.parn_id,\r\n\t\t\t\tlabel : item.value,\r\n\t\t\t\tnode : this.props.dataset.filter(node => node.parn_id === item.id)\r\n\t\t\t}\r\n\t\t}).forEach((item) => {\r\n\t\t\tlet html = null;\r\n\t\t\tlet span = document.createElement('span');\r\n\t\t\tlet ul = document.createElement('ul');\r\n\t\t\tlet li = document.createElement('li');\r\n\t\t\tif (item.node.length > 0) {\r\n\t\t\t\tspan.innerText = item.label;\r\n\t\t\t\tspan.className = 'scrm-react-tree-box';\r\n\t\t\t\tspan.onclick = this.onClick;\r\n\r\n\t\t\t\tul.id = item.key;\r\n\t\t\t\tul.className = 'scrm-react-tree-ul-nested'\r\n\r\n\t\t\t\thtml = li\r\n\t\t\t\thtml.appendChild(span);\r\n\t\t\t\thtml.appendChild(ul);\r\n\t\t\t\tif (item.parn_key === 'none') {\r\n\t\t\t\t\tdocument.getElementById(this.props.id).appendChild(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(item.parn_key).appendChild(html);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\thtml = li;\r\n\t\t\t\thtml.innerText = item.label;\r\n\t\t\t\tif (item.parn_key === 'none') {\r\n\t\t\t\t\tdocument.getElementById(this.props.id).appendChild(html);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdocument.getElementById(item.parn_key).appendChild(html);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.setComboItem();\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-tree\">\r\n\t\t\t\t<ul className=\"scrm-react-tree-ul\" id={this.props.id}>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Tree;","import React from 'react';\r\nimport {IconButton, LFloatArea} from 'components';\r\n\r\nclass Tray extends React.Component {\r\n    isContain = () => {\r\n\t\t  console.log(' ===== Tray isContain ===== ');\r\n    }\r\n    select = () => {\r\n\t\t  console.log(' ===== Tray select ===== ');\r\n    }\r\n    remove = () => {\r\n\t\t  console.log(' ===== Tray remove ===== ');\r\n    }\r\n    removeAll = () => {\r\n\t\t  console.log(' ===== Tray removeAll ===== ');\r\n    }\r\n    initialize = () => {\r\n\t\t  console.log(' ===== Tray initialize ===== ');\r\n    }\r\n}\r\n\r\nclass TrayDiv extends React.Component {\r\n  constructor(props)  {\r\n      super(props);\r\n      this.state = {\r\n          open : false\r\n      }\r\n  }\r\n  setMenuDivOpen = () => {\r\n      this.setState({...this.state, open : !this.state.open});\r\n  }\r\n  add = (props) => {\r\n    console.log(' ===== Tray add ===== ');\r\n    console.log(props);\r\n  } \r\n  \r\n  render () {\r\n      return (\r\n          <React.Fragment>\r\n            <LFloatArea>\r\n              <div className='scrm-tray-div'>\r\n                  <ul>\r\n                      {\r\n                        this.props.data.map((item, key) => {\r\n                            return (\r\n                            <li key={'scrm-tray-div' + key}>\r\n                                <div className='scrm-tray-div-li-div' onClick={this.openMenu}>{item.MENU_NM}</div>\r\n                                <IconButton classes='scrm-tray-div-btn-close' id='btnClose' onClick={this.remove}/>\r\n                            </li>\r\n                            )\r\n                        })\r\n                      }\r\n                  </ul>\r\n              </div>\r\n              </LFloatArea>\r\n          </React.Fragment>\r\n      )\r\n  }\r\n}\r\n\r\nexport {Tray, TrayDiv};","import axios from 'axios';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {AlertDialog, ConfirmDialog, PopupDialog, Player} from 'components';\r\n\r\nconst newScrmObj = {\r\n\tconstants: {\r\n\t\tcrud: {\r\n\t\t\tread: 'r',\r\n\t\t\tcreate: 'c',\r\n\t\t\tupdate: 'u',\r\n\t\t\tdestroy: 'd',\r\n\t\t\tremove: 'e'\r\n\t\t},\r\n\t\tdatetime: {\r\n\t\t\tformat: 'YYYYMMDDHH24MISS'\r\n\t\t},\r\n\t\tmdi : {\r\n\t\t\tDIALOG : 'dialog',\r\n\t\t\tPOP_UP : 'popup',\r\n\t\t\tPLAYER : 'player',\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\targument: {\r\n\t\t\t\tall: 'a',\r\n\t\t\t\tselect: 's',\r\n\t\t\t\tnone: 'n',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\nconst ComLib = {\r\n\topenMenu : (menuId) => {\r\n\t\tlet div = document.createElement('div');\r\n\t\tdiv.id = menuId\r\n\t\tReactDOM.render( <div>123123</div>\r\n\t\t, document.getElementById(menuId));\r\n\t},\r\n\tisNull : (obj) => {\r\n\t\tif (typeof obj === undefined) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t},\r\n\tisJson: (data) => {\r\n\t\ttry {\r\n\t\t\tlet json = JSON.parse(data);\r\n\t\t\treturn (typeof json === 'object');\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tsetSession: (id, obj) => {\r\n\t\tif (typeof obj === 'object') {\r\n\t\t\tsessionStorage.setItem(id, JSON.stringify(obj));\r\n\t\t} else {\r\n\t\t\tsessionStorage.setItem(id, obj);\r\n\t\t}\r\n\t},\r\n\tgetSession: (id) => {\r\n\t\tif (ComLib.isJson(sessionStorage.getItem(id))) {\r\n\t\t\treturn JSON.parse(sessionStorage.getItem(id));\r\n\t\t} else {\r\n\t\t\treturn sessionStorage.getItem(id);\r\n\t\t}\r\n\t},\r\n\tsetGridHeader : (header) => {\r\n\t\tlet rtnArr = [];\r\n\t\tlet headerKey = Object.getOwnPropertyNames(header);\r\n\t\theaderKey.map((colVal) => {\r\n\t\t\trtnArr.push({ headerName : header[colVal], field : colVal } );\r\n\t\t});\r\n\t\treturn rtnArr;\r\n\t},\r\n\topenDialog : (type, msg, callback) => {\r\n\t\tif ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n\t\t\tlet dialog = document.createElement('div');\r\n\t\t\tdialog.id = newScrmObj.constants.mdi.DIALOG;\r\n\t\t\tdocument.body.appendChild(dialog);\r\n\t\t}\r\n\t\tif (type === 'C') {\r\n\t\t\tif (typeof callback === undefined || typeof callback !== 'function') {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tReactDOM.render( <ConfirmDialog open={true} message={msg}  onReturnVal = {callback}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t} else {\r\n\t\t\tReactDOM.render( <AlertDialog   open={true} message={msg}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t}\r\n\t},\r\n\topenPop : (url, name, options, callbackFunc) => {\r\n\t\tlet arrPopTag = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.POP_UP.length) === newScrmObj.constants.mdi.POP_UP\r\n\t\t);\r\n\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\t\tif (arrPopTag.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPopTag.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPopTag[arrPopTag.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPopTag.length * 10,  y: arrPopTag.length * 10 }\r\n\t\t}\r\n\t\tdocument.body.appendChild(popDiv);\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<PopupDialog\r\n\t\t\t\tpopupdivid = {popDiv.id}\r\n\t\t\t\topen={true}\r\n\t\t\t\turl={url}\r\n\t\t\t\tname={name}\r\n\t\t\t\tmodaless={options.modaless}\r\n\t\t\t\tposition = {position}\r\n\t\t\t\toptions={options}\r\n\t\t\t\tonCallbackFunc={callbackFunc}\r\n\t\t\t\tonClose={\r\n\t\t\t\t\t() => {\r\n\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\toptions.callback();\r\n\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t }\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t/>\r\n\t\t, popDiv);\r\n\t},\r\n\topenPlayer : (callId) => {\r\n\t\tlet arrPlayerPop = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.PLAYER.length) === newScrmObj.constants.mdi.PLAYER\r\n\t\t);\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\t\tif (arrPlayerPop.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPlayerPop.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPlayerPop[arrPlayerPop.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPlayerPop.length * 10,  y: arrPlayerPop.length * 10 }\r\n\t\t}\r\n\t\tdocument.body.appendChild(popDiv);\r\n\t\t// ReactDOM.render(\r\n\t\t// \t<Player\r\n\t\t// \t\topen={true}\r\n\t\t// \t\turl={url}\r\n\t\t// \t\tname={name}\r\n\t\t// \t\tmodaless={modaless}\r\n\t\t// \t\tposition = {position}\r\n\t\t// \t\toptions={options}\r\n\t\t// \t\tonCallbackFunc={callbackFunc}\r\n\t\t// \t\tonClose={\r\n\t\t// \t\t\t() => {\r\n\t\t// \t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t// \t\t\t\t\ttry {\r\n\t\t// \t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t// \t\t\t\t\t\t\ttry {\r\n\t\t// \t\t\t\t\t\t\t\toptions.callback();\r\n\t\t// \t\t\t\t\t\t\t} catch (err) {\r\n\t\t// \t\t\t\t\t\t\t\treject(err);\r\n\t\t// \t\t\t\t\t\t\t }\r\n\t\t// \t\t\t\t\t\t}\r\n\t\t// \t\t\t\t\t\tresolve();\r\n\t\t// \t\t\t\t\t} catch (error) {\r\n\t\t// \t\t\t\t\t\treject(error);\r\n\t\t// \t\t\t\t\t}\r\n\t\t// \t\t\t\t}).then(function () {\r\n\t\t// \t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t// \t\t\t\t}).catch(function (error) {\r\n\t\t// \t\t\t\t\tconsole.log(error);\r\n\t\t// \t\t\t\t});\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t/>\r\n\t\t// , popDiv);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [대분류 코드에 해당하는 소분류 공통코드를 갖고온다]\r\n\t* @param\t:\tstring sBigCtgCd\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. sBigCtgCd : 공통코드 대분류 코드\r\n\t\t\t\t\t2. 성공 => 대분류 코드에 해당하는 소분류 코드를 array로 return\r\n\t\t\t\t\t   실패 => empty array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCommCodeList : (sBigCtgCd) => {\r\n\t\tlet commCodeList = [];\r\n\t\tif (StrLib.isNull(sessionStorage.getItem('gdsCommCode')))  return commCodeList;\r\n\t\tcommCodeList = JSON.parse(sessionStorage.getItem('gdsCommCode'));\r\n\t\treturn commCodeList.filter(item => item.PARENT_CODE === sBigCtgCd);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [이미 변경된 Dataset을 react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateDs: (obj, strDatasetId) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, state[strDatasetId].getRecords()); });\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Value를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, integer nRowIndex, string strColumnId, string strValue\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. nRowIndex : 변경 대상 Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 대상 Column ID\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateValue: (obj, strDatasetId, nRowIndex, strColumnId, strValue) => {\r\n\t\tobj.setState((state) => { return DataLib.setValueToDs(state, strDatasetId, nRowIndex, strColumnId, strValue); });\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Records를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateRecords: (obj, strDatasetId, arrRecords) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, arrRecords); });\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [SelectBox List로 변환]\r\n\t* @param\t:\tarray arrRecords, string args\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. arrRecords : select inner list data\r\n\t\t\t\t\t2. args : list add flag (all : 전체 / select : 선택 / none)\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tconvComboList: (arrRecords, args) => {\r\n\t\tvar arr = [];\r\n\t\tif (args === newScrmObj.constants.select.argument.all) {\r\n\t\t\tarr.push({value: \"\", name: \"전체\"});\r\n\t\t} else if (args === newScrmObj.constants.select.argument.select) {\r\n\t\t\tarr.push({value: \"\", name: \"선택\"});\r\n\t\t}\r\n\t\tfor (var index = 0; index < arrRecords.length; index++) {\r\n\t\t\tarr.push({value: arrRecords[index][\"CODE\"], name: arrRecords[index][\"CODE_NM\"]});\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n};\r\n\r\nconst StrLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력값이 null에 해당하는 경우 모두를 한번에 체크한다]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t:\t1. sValue : 체크할 문자열 ( 예 : null 또는 undefined 또는 \"\" 또는 \"abc\" )\r\n\t\t\t\t\t2. sValue가 undefined, null, NaN, \"\", Array.length = 0인 경우 = true, 이외의 경우 false를 return한다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNull: (sValue) => {\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\t\tif (String(sValue).valueOf() === \"undefined\") return true;\r\n\t\tif (String(sValue).valueOf() === \"null\") return true;\r\n\t\tif (String(sValue).valueOf() === \"\") return true;\r\n\t\tif (sValue === null) return true;\r\n\t\tif (sValue === '') return true;\r\n\t\tif ((sValue === \"\") && (String(sValue.length).valueOf() === \"undefined\")) return true;\r\n\t\tif (sValue.length === 0) return true;\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4 )\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\t getPos: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.indexOf(sFind, nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.toLowerCase().indexOf(sFind.toLowerCase(), nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverse: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr(pos, sFind.length) === sFind) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverseCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr( pos, sFind.length ).toLowerCase() === sFind.toLowerCase()) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별하여 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxbbccxx\" ) return\r\n\t\t\t\t\t   실패 => sOrg return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplace: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return sOrg;\r\n\t\tif (StrLib.isNull(sRepTo)) return sOrg;\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPos(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별없이 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxxxccxx\" ) return\r\n\t\t\t\t\t   실패 => sOrg return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplaceCase: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return sOrg;\r\n\t\tif (StrLib.isNull(sRepTo)) return sOrg;\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPosCase(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [주민번호(7자리 이상)에서 성별 구분]\r\n\t* @param\t:\tstring sRrNo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sRrNo : 생년월일성별 또는 주민번호\r\n\t\t\t\t\t2. 성공 => 7번째 자리 번호 기준 남자 : 'M' / 여자 : 'F' return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetSexCd: (sRrNo) => {\r\n\t\tlet strRno = StrLib.getNumStr(sRrNo);\r\n\t\tif (strRno.length < 7) return '';\r\n\r\n\t\tlet strSexCd = \"\";\r\n\t\tif ((parseInt(strRno.substr(6, 1), 10)%2) === 0) strSexCd = \"F\";\r\n\t\telse strSexCd = \"M\";\r\n\r\n\t\treturn strSexCd;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [왼쪽에 문자열 추가]\r\n\t* @param\t:\tstring sOrg, string sPad, integer nCnt\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. sPad : Pad할 문자열(옵션 : Default=\" \")( 예 : \"aa\" )\r\n\t\t\t\t\t3. nCnt : 반복횟수(옵션 : Default=1) (예 : 2)\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"aaaabbccCC\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLPad: (sOrg, sPad, nCnt) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\t\tif (StrLib.isNull(nCnt)) nCnt = 1;\r\n\r\n\t\tvar sRet = \"\";\r\n\t\tfor (var i = 0; i < nCnt; i++) {\r\n\t\t\tsRet += sPad;\r\n\t\t}\r\n\r\n\t\treturn sRet += sOrg;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [오른쪽에 문자열 추가]\r\n\t* @param\t:\tString sOrg, String sPad, integer nCnt\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. sPad : Pad할 문자열(옵션 : Default=\" \")( 예 : \"aa\" )\r\n\t\t\t\t\t3. nCnt : 반복횟수(옵션 : Default=1) (예 : 2)\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"bbccCCaaaa\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRPad:(sOrg, sPad, nCnt) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\t\tif (StrLib.isNull(nCnt)) nCnt = 1;\r\n\r\n\t\tvar sRet = \"\";\r\n\t\tfor (var i = 0 ; i < nCnt ; i++) {\r\n\t\t\tsRet += sPad;\r\n\t\t}\r\n\r\n\t\treturn sOrg + sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 오른쪽에서 nSize만큼의 문자열을 가져온다]\r\n\t* @param\t:\tstring sOrg, integer nSize\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. nSize : 가져올문자열 길이 ( 예 : 2 )\r\n\t\t\t\t\t3. 성공 => 오른쪽에서 nSize만큼의 문자열 ( 예 : \"cc\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note\t\t:\tsOrg의 길이가 nSize보다 작은경우는 sOrg가 Return된다.\r\n\t\t\t\t\t( 예 : sOrg=\"a\", nSize=2 ===> return = \"a\" )\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRight: (sOrg, nSize) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(nSize)) return \"\";\r\n\t\tif (sOrg.length < nSize) return sOrg;\r\n\t\telse return sOrg.substr(sOrg.length - nSize, nSize);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 2Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 7 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLenB: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 2;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 3Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 9 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLen3B: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 3;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [전각문자를 반각문자로]\r\n\t* @reference:\t전각문자는 \"정사각형\" 안에 들어가는 문자이고, 반각은 그 정사각형의 반쪽에 들어가는 문자이다.\r\n\t\t\t\t\t전각문자의 폭은, 반각문자의 2배입니다.\r\n\t\t\t\t\t예를 들어 숫자 \"3\" 은, 한글 \"가\"의 절반의 폭만을 가지고 있습니다.\r\n\t\t\t\t\t그래서 영문과 숫자 등은 반각이고, 한글이나 한자들은 전각문자입니다.\r\n\t\t\t\t\t다만, 영문과 숫자를 전각으로 표현할 수도 있습니다.\r\n\t\t\t\t\t(예 : 전각문자 ===> ※★０＋\r\n\t\t\t\t\t\t반각문자 ===> 1a )\r\n\t* @param\t:\tstring sFull\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sFull : 전각문자( 예 : \"０＋\" )\r\n\t\t\t\t\t2. 성공 => 반각문자 ( 예 : \"0+\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetFull2Half: (sFull) => {\r\n\t\tif (StrLib.isNull(sFull)) return \"\";\r\n\r\n\t\tlet sHalf = \"\";\r\n\t\tfor (var i = 0; i < sFull.length; i++) {\r\n\t\t\tlet c = sFull.charCodeAt(i);\r\n\t\t\tif (c === 12288) sHalf += unescape(\"%20\");\r\n\t\t\telse if ((c >= 65281) && (c <= 65374)) sHalf += unescape(\"%\"+(c-65248).toString(16));\r\n\t\t\telse sHalf += sFull.charAt(i);\r\n\t\t}\r\n\t\treturn  sHalf;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [반각문자를 전각문자로]\r\n\t* @param\t:\tstring sHalf\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sHalf : 반각문자( 예 : \"0+\" )\r\n\t\t\t\t\t2. 성공 => 전각문자 ( 예 : \"０＋\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetHalf2Full: (sHalf) => {\r\n\t\tif (StrLib.isNull(sHalf)) return \"\";\r\n\r\n\t\tlet rTmp = \"\";\r\n\t\tlet iTmp = \"\";\r\n\t\tfor (var i = 0; i < sHalf.length; i++ ) {\r\n\t\t\t//기본 아스키 코드 값을 벗어난 경우(한글)는 전자로 변환할 필요 없음.\r\n\t\t\tif ((sHalf.charCodeAt(i) >= 32) && (sHalf.charCodeAt(i) <= 126)) {\r\n\t\t\t\tif (sHalf.charCodeAt(i) === 32) iTmp = unescape(\"%u\"+(12288).toString(16));\r\n\t\t\t\telse iTmp = sHalf.charCodeAt(i) + 65248;\r\n\t\t\t} else {\r\n\t\t\t\tiTmp = sHalf.charCodeAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (sHalf.charCodeAt(i) === 32) rTmp = rTmp + (iTmp);\r\n\t\t\telse rTmp += String.fromCharCode(iTmp);\r\n\t\t}\r\n\r\n\t\treturn rTmp;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 숫자형식에 맞는지 여부 체크]\r\n\t* @param\t:\tString sNum\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sNum : 체크할 문자열숫자 ( 예 : \"-1234.56\" ) (단, \",\"가 들어있으면 안 됨)\r\n\t\t\t\t\t2. 숫자형식에 맞는경우 => true return\r\n\t\t\t\t\t   숫자형식에 맞지않는 경우 => false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNum: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return false;\r\n\r\n\t\tlet point_cnt = 0;\r\n\t\tlet ret = true;\r\n\t\tfor (var i = 0; i < sNum.length; i++) {\r\n\t\t\tvar c = sNum.charAt(i);\r\n\t\t\tif (i === 0 && (c === \"+\" || c === \"-\"));\r\n\t\t\telse if (c >= \"0\" && c <= \"9\");\r\n\t\t\telse if (c === \".\") {\r\n\t\t\t\tpoint_cnt++;\r\n\t\t\t\tif (point_cnt > 1) {\r\n\t\t\t\t\tret = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tret = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z)만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ\" )\r\n\t\t\t\t\t2. 알파벳만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlpha: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z), 숫자만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ09\" )\r\n\t\t\t\t\t2. 알파벳, 숫자만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳, 숫자가 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlNum: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z0-9]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 한글로만 구성되어 있는지 체크]\r\n\t* @param\t: String sVal\r\n\t* @return\t: boolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"가나다\" )\r\n\t\t\t\t\t2. 한글만 있는경우 = true return,\r\n\t\t\t\t\t한글이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisKor: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tfor (var i = 0; i < sVal.length; i++ ) {\r\n\t\t\tif (!((sVal.charCodeAt(i) > 0x3130 && sVal.charCodeAt(i) < 0x318F) || (sVal.charCodeAt(i) >= 0xAC00 && sVal.charCodeAt(i) <= 0xD7A3))) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열 Trim 함수]\r\n\t* @param\t:\tstring args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. args : trim 할 값\r\n\t\t\t\t\t2. 성공 => trim String return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTrim: (arg) => {\r\n\t\tvar str = new String(arg);\r\n\t\tif (str === null || str === \"null\") return \"\";\r\n\t\tif (new String(str).valueOf() === \"undefined\") return \"\";\r\n\t\tif (new String(str) == null) return \"\";\r\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열에서 숫자만 추출한다.]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. sValue : 추출대상 ( 예 : '2020-09-02' )\r\n\t\t\t\t\t2. 성공 => '20200902' return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetNumStr: (sValue) => {\r\n\t\tif (StrLib.getTrim(sValue) === \"\") return \"\";\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\r\n\t\tvar sResult = \"\";\r\n\t\tvar sNum = \"0123456789\";\r\n\t\tfor (var i = 0; i<sValue.length; i++) {\r\n\t\t\tif (sNum.indexOf(sValue.charAt(i)) > -1) sResult += sValue.charAt(i);\r\n\t\t}\r\n\t\treturn sResult;\r\n\t},\r\n};\r\n\r\nconst NumLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [숫자에 \",\"를 집어넣기]\r\n\t* @param\t:\tinteger sNum\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sNum : 숫자( 예 : -1234567.89 )\r\n\t\t\t\t\t2. 성공 => \",\"가 들어간 문자열 ( 예 : -1,234,567.89 ) return,\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetComma: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return \"\";\r\n\r\n\t\tvar nEnd, nStart = 0, sRet = \"\";\r\n\t\tsNum = StrLib.getTrim(sNum);\r\n\r\n\t\tif (sNum.charAt(0) === \"+\" || sNum.charAt(0) === \"-\") {\r\n\t\t\tsRet += sNum.charAt(0);\r\n\t\t\tnStart = 1;\r\n\t\t}\r\n\r\n\t\tvar ppos = StrLib.getPos(sNum, \".\", nStart);\r\n\t\tif (ppos < 0) nEnd = sNum.length;\r\n\t\telse nEnd = ppos;\r\n\r\n\t\tvar sDigit = sNum.substr(nStart, nEnd-nStart);\r\n\t\tfor (var pos = 0; pos < sDigit.length; pos ++ ) {\r\n\t\t\tif ( pos !== 0 && (sDigit.length-pos)%3 === 0) sRet += \",\";\r\n\t\t\tsRet += sDigit.charAt(pos);\r\n\t\t}\r\n\r\n\t\tsRet += sNum.substr(nEnd);\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Array에 있는 값들을 Distinct(중복제거)한다]\r\n\t* @param\t:\tarray aOrg\r\n\t* @return\t:\tarray\r\n\t* @see\t\t: \t1. aOrg : 중복을 제거할 원래 Array ( 예 : (1,1,2,2,3,4,5) )\r\n\t\t\t\t\t2. 성공 => 중복이 제거된 Array ( 예 : (1,2,3,4,5) ) return,\r\n\t\t\t\t\t   실패 => 빈 Array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDistinct: (aOrg) => {\r\n\t\tvar aDist = new Array();\r\n\t\tif (StrLib.isNull(aOrg)) return aDist;\r\n\r\n\t\tfor (var i = 0; i < aOrg.length; i++) {\r\n\t\t\tvar vDist = aOrg[i];\r\n\t\t\tvar flag = false;\r\n\t\t\tfor (var j = 0; j < aDist.length; j++) {\r\n\t\t\t\tif (\"x\" + aDist[j] === \"x\" + vDist) {\r\n\t\t\t\t\tflag = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (flag === false) aDist[aDist.length] = vDist;\r\n\t\t}\r\n\t\treturn aDist;\r\n\t}\r\n};\r\n\r\nconst FileLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [File Path 문자열(예 : C:\\a\\b\\filename.ext)에서 File명(예 : filename)을 추출]\r\n\t* @param\t: string sPath, boolean bExt\r\n\t* @return\t: string\r\n\t* @see\t\t: \t1. sPath   - File Path 문자열 (예 : \"C:\\a\\b\\filename.ext\")\r\n\t\t\t\t\t2. bExt    - extend를 return되는 File명에 포함시킬지 여부 ( 옵션 : Default=false )\r\n\t\t\t\t\t\t\t\t- true \t: extend를 File명에 포함시킴\r\n\t\t\t\t\t\t\t\t- false : extend를 File명에 포함시키지 않음\r\n\t\t\t\t\t2. 성공 =\r\n\t\t\t\t\t\t\t- bExt = true인 경우 ===> sPath에서 File명(예 : \"filename.ext\") return\r\n\t\t\t\t\t\t\t- bExt = false인 경우 ===> sPath에서 File명(예 : \"filename\") return\r\n\t\t\t\t\t실패 = \"\" return\r\n\r\n\tgetFileName : ( sPath, bExt ) => {\r\n\t\tlet start_pos, end_pos, tmp_pos, filename;\r\n\r\n\t\tif( StrLib.isNull(sPath) )\t\treturn \"\";\r\n\t\tif( StrLib.isNull(bExt) )\r\n\t\t\tbExt = false;\r\n\r\n\t\tstart_pos = Math.max(StrLib.getPosReverse( sPath, \"\\\\\" ), StrLib.getPosReverse( sPath, \"/\" ));\r\n\t\ttmp_pos = StrLib.getPosReverse( sPath, \"::\");\r\n\t\tif( tmp_pos > 0 ) tmp_pos++;\r\n\t\tstart_pos = Math.max( start_pos, tmp_pos );\r\n\t\tif( bExt === false ) {\r\n\t\t\tend_pos = StrLib.getPosReverse( sPath, \".\" );\r\n\t\t\tif( end_pos < 0 )\r\n\t\t\t\tend_pos = sPath.length;\r\n\t\t\tfilename = sPath.substr( start_pos+1, end_pos-start_pos-1 );\r\n\t\t} else {\r\n\t\t\tfilename = sPath.substr( start_pos+1 );\r\n\t\t}\r\n\r\n\t\treturn filename;\r\n\t}\r\n\t*--------------------------------------------------------------------------------------*/\r\n};\r\nconst ExcelLib = {\r\n\r\n};\r\nconst DateLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 숫자로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => 마지막 날짜 숫자값 ( 예 : 30 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDateNum: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tlet nMonth, nLastDate;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return -1;\r\n\r\n\t\tnMonth = parseInt(sDate.substr(4,2), 10);\r\n\t\tif (nMonth === 1 || nMonth === 3 || nMonth === 5 || nMonth === 7  || nMonth === 8 || nMonth === 10 || nMonth === 12 ) {\r\n\t\t\tnLastDate = 31;\r\n\t\t} else if (nMonth === 2) {\r\n\t\t\tif ( DateLib.isLeapYear(sDate) === true ) nLastDate = 29;\r\n\t\t\telse nLastDate = 28;\r\n\t\t} else {\r\n\t\t\tnLastDate = 30;\r\n\t\t}\r\n\t\treturn nLastDate;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [윤년여부 확인]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sDate가 윤년인 경우\t\t\t=> true return\r\n\t\t\t\t\t   sDate가 윤년이 아닌 경우\t\t=> false return\r\n\t\t\t\t\t   sDate가 입력되지 않은 경우\t=> false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisLeapYear: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tlet ret, nY;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return false;\r\n\r\n\t\tnY = parseInt(sDate.substring(0,4), 10);\r\n\t\tif ((nY % 4) === 0) {\r\n\t\t\tif ((nY % 100) !== 0 || (nY % 400) === 0) ret = true;\r\n\t\t\telse ret = false;\r\n\t\t} else {\r\n\t\t\tret = false;\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 yyyyMMdd형태로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => yyyyMMdd형태의 마지막 날짜 ( 예 : \"20121130\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDate: (sDate) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\t\tif (StrLib.isNull(sDate)) return \"\";\r\n\t\tlet nLastDate = DateLib.getLastDateNum(sDate);\r\n\t\treturn sDate.substr(0,6) + nLastDate.toString();\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 일을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 일 증감값 ( 예 : 10 또는 -10 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121112\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddDate: (sDate, nOffset) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\r\n\t\tlet nYear\t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth\t= parseInt(sDate.substr(4, 2));\r\n\t\tlet nDate\t= parseInt(sDate.substr(6, 2)) + nOffset;\r\n\r\n\t\tlet objDate = new Date(nYear, nMonth - 1, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tlet sDay\t= StrLib.getRight(\"0\", objDate.getDate(), 2);\r\n\r\n\t\treturn sYear + sMonth + sDay;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 월을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 월 증감값 ( 예 : 1 또는 -1 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121022\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note  \t:\t단, 증감된 날짜가 그달의 마지막 날짜 월보다 큰 경우 그달의 마지막 날짜를 return한다.\r\n\t\t\t\t\t예를 들어, sDate=\"20120531\", nOffset=-1일 경우 return=\"20120430\" 이 된다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddMonth: (sDate, nOffset) => {\r\n\t\tif (typeof sDate != \"string\") sDate = new String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\t\tsDate = StrLib.getTrim(sDate);\r\n\r\n\t\tlet nYear \t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth \t= parseInt(sDate.substr(4, 2)) + nOffset;\r\n\t\tlet nDate \t= parseInt(sDate.substr(6, 2));\r\n\r\n\t\tlet nLastDate, sRet;\r\n\r\n\t\tlet objDate = new Date(nYear, nMonth, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tlet sDay\t= StrLib.getRight(\"0\", objDate.getDate(), 2);\r\n\t\tsRet = sYear + sMonth + sDay;\r\n\r\n\t\tlet nsDate \t= parseInt(sRet.substr(6, 2));\r\n\t\tnLastDate = DateLib.getLastDateNum(sRet);\r\n\t\tsRet = sRet.substr(0,6);\r\n\r\n\t\tif (nsDate > nLastDate) sRet += nLastDate.toString();\r\n\t\telse sRet += (StrLib.getRight(\"0\" + nsDate, 2)).toString();\r\n\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜를 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMdd형태의 오늘 날짜 ( 예 : \"20121122\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetToday: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜 + 시간을 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMddhhmiss형태의 오늘 날짜 ( 예 : \"20121122223010\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTodayTime: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getHours(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getMinutes(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getSeconds(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 일자간의 차이 일수 계산]\r\n\t* @param\t: \ttring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20121202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이일수  ( 예 : 10 )  return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다\r\n\t\t\t\t\t   실패 => return \"\"\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffDate: (sStartDate, sEndDate) => {\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return \"\";\r\n\r\n\t\tlet vFromDate = new Date(parseInt(sEndDate.substring(0,4),  10), parseInt(sEndDate.substring(4,6)-1,  10), parseInt(sEndDate.substring(6,8), 10));\r\n\t\tlet vToDate = new Date(parseInt(sStartDate.substring(0,4),  10), parseInt(sStartDate.substring(4,6)-1,  10), parseInt(sStartDate.substring(6,8), 10));\r\n\r\n\t\treturn parseInt((vFromDate - vToDate) / (1000 * 60 * 60 * 24));\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 월간의 차이 월수 계산]\r\n\t* @param\t:\tstring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20131202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이월수  ( 예 : 10 ) return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다.\r\n\t\t\t\t\t   실패 => NaN return\r\n\t* @note\t\t:\t단, sStartDate, sEndDate의 일은 포함하지 않고 계산된다\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffMonth: (sStartDate, sEndDate) => {\r\n\t\tlet nStartMon, nEndMon;\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return NaN;\r\n\r\n\t\tnStartMon = parseInt(sStartDate.substr(0, 4), 10) * 12 + parseInt(sStartDate.substr(4, 2), 10);\r\n\t\tnEndMon = parseInt(sEndDate.substr(0, 4), 10) * 12 + parseInt(sEndDate.substr(4, 2), 10);\r\n\r\n\t\treturn (nEndMon - nStartMon);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [date => string]\r\n\t* @param\t:\tdate objDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. objDate : Date Object\r\n\t\t\t\t\t2. 성공 => yyyyMMdd 형태의 날짜 문자열 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetStringDate: (objDate) => {\r\n\t\tif (StrLib.isNull(objDate)) return '';\r\n\r\n\t\tlet year = objDate.getFullYear();\r\n\t\tlet month = (1 + objDate.getMonth());\r\n\t\tmonth = month >= 10 ? month : '0' + month;\r\n\t\tlet day = objDate.getDate();\r\n\t\tday = day >= 10 ? day : '0' + day;\r\n\r\n\t\treturn year + month + day;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [string => date]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tdate\r\n\t* @see\t\t:\t1. sDate : yyyyMMdd 형태의 날짜 문자열\r\n\t\t\t\t\t2. 성공 => Date Object 형태로 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDateYymmdd: (sDate) => {\r\n\t\tif (StrLib.isNull(sDate)) return '';\r\n\t\tif (sDate.length === 8) return new Date(parseInt(sDate.substring(0, 4)), parseInt(sDate.substring(4, 6)) - 1, parseInt(sDate.substring(6, 8)));\r\n\t\telse return '';\r\n\t},\r\n};\r\n\r\nconst DataLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Value를 Dataset Objec 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, integer nRowIndex, string, strColumnId, string strValue\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin')\r\n\t\t\t\t\t3. nRowIndex : 변경 Value의 Target Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 Value의 Target Column ID ( 예 : 'USR_CD')\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetValueToDs: (prevState, strDatasetId, nRowIndex, strColumnId, strValue) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setValue(nRowIndex, strColumnId, strValue);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Record를 Dataset Object 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\tdatamap: {\r\n\t\t/*\r\n\t\trecord: {},\r\n\t\torgrecord: {},\r\n\t\tset: function(record) {\r\n\t\t\tthis.record = record;\r\n\t\t\tthis.orgrecord = record;\r\n\t\t},\r\n\t\tgetValue: function(column) {return this.record[column];},\r\n\t\tsetValue: function(column, value) {this.record[column] = value;},\r\n\t\tgetInstance: (props) => {\r\n\t\t\tprops = props || {};\r\n\t\t\tif (props.length != undefined) {\r\n\t\t\t\tprops = {record: props[0], orgrecord: props[0]};\r\n\t\t\t} else {\r\n\t\t\t\tprops = {record: props, orgrecord: props};\r\n\t\t\t}\r\n\t\t\treturn _.assign({}, DataLib.datamap, props);\r\n\t\t},\r\n\t\tgetRecords: function() {\r\n\t\t\tthis.record.orgdata = this.orgrecord;\r\n\t\t\treturn [this.record];\r\n\t\t},\r\n\t\tsetRecords: function(records) {\r\n\t\t\tthis.record = records[0];\r\n\t\t\tthis.orgrecord = records[0];\r\n\t\t},\r\n\t\t*/\r\n\t},\r\n\tdatalist: {\r\n\t\trecords: [],\r\n\t\torgrecords: [],\r\n\t\tsize: function() {return this.records.length;},\r\n\t\tget: function(index) {\r\n\t\t\tif (this.records.length > 0) return this.records[index];\r\n\t\t\telse return null;\r\n\t\t},\r\n\t\tgetRecords: function() {return this.records},\r\n\t\tsetRecords: function(records) {\r\n\t\t\tthis.records = records;\r\n\t\t\tthis.orgrecords = records;\r\n\t\t},\r\n\t\tgetValue: function(index, column) {return this.records[index][column];},\r\n\t\tsetValue: function(index, column, value) {this.records[index][column] = value;},\r\n\t\tgetValueByRecId: function(recid, column) {return this.records[this.indexOf(\"recid\", recid)][column];},\r\n\t\tsetValueByRecId: function(recid, column, value) {this.records[this.indexOf(\"recid\", recid)][column] = value;},\r\n\t\tindexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = 0; i < this.records.length; i++) {\r\n\t\t\t\tif (this.records[i][column] == value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tlastIndexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = this.records.length; i >=0; i--) {\r\n\t\t\t\tif (this.records[i][column] == value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tfind: function(column, value) {\r\n\t\t\treturn this.records.filter((new Function(`return obj => obj.${column}=='${value}'`))());\r\n\t\t},\r\n\t\tfindFirst: function(column, value) {\r\n\t\t\treturn this.records[this.indexOf(column, value)];\r\n\t\t},\r\n\t\tfindLast: function(column, value) {\r\n\t\t\treturn this.records[this.lastIndexOf(column, value)];\r\n\t\t},\r\n\t\tfilter: function(filterexpr) {\r\n\t\t\treturn this.records.filter((new Function(`return objDs => ${filterexpr}`))());\r\n\t\t},\r\n\t\tlookup: function(column, value, target) {\r\n\t\t\tvar record = this.findFirst(column, value);\r\n\t\t\treturn record == undefined ? undefined : record[target];\r\n\t\t},\r\n\t\tgetInstance: (props) => {\r\n\t\t\tprops = props || {};\r\n\t\t\tif (props.length != undefined) {\r\n\t\t\t\tprops = {records: props, orgrecords: props}\r\n\t\t\t}\r\n\t\t\treturn _.assign({}, DataLib.datalist, props);\r\n\t\t},\r\n\t}\r\n};\r\n\r\nclass TransManager {\r\n\tconstructor() {\r\n\t\tthis.id = '';\r\n\t\tthis.url = '';\r\n\t\tthis.callback = null;\r\n\t\tthis.beforeSend = null;\r\n\t\tthis.erorr = null;\r\n\t\tthis.timeout = (1000 * 60);\r\n\t\tthis.async = true;\r\n\t\tthis.asyncdata = null;\r\n\t\tthis.dataType = 'json';\r\n\t\t//this.progressbar = true;\r\n\t\tthis.constants = {\r\n\t\t\turl: {\r\n\t\t\t\tcommon: '/json.service.do',\r\n\t\t\t},\r\n\t\t\terrorcode: {\r\n\t\t\t\tSUCCESS: '0',\r\n\t\t\t\tERROR: '-2'\r\n\t\t\t},\r\n\t\t\tsystemid: {\r\n\t\t\t},\r\n\t\t\tcrudh: {\r\n\t\t\t\tcreate: '0',\r\n\t\t\t\tread: '1',\r\n\t\t\t\tupdate: '2',\r\n\t\t\t\tdestroy: '3',\r\n\t\t\t\tprocedure: '4',\r\n\t\t\t\thandle: '5',\r\n\t\t\t\tsequence: '6',\r\n\t\t\t\titerator: '7',\r\n\t\t\t\tbatch: '8',\r\n\t\t\t\tdir: '9',\r\n\t\t\t\tpasswd: '10',\r\n\r\n\t\t\t\tdataset: 'ds_config'\r\n\t\t\t},\r\n\t\t\tdao: {\r\n\t\t\t\tbase: '0'\r\n\t\t\t},\r\n\t\t\tconfig: {\r\n\t\t\t\tdao: '',\r\n\t\t\t\tcrudh: '',\r\n\t\t\t\tsqlmapid: '',\r\n\t\t\t\tdatasetmap: '',\r\n\t\t\t\tdatasetsend: '',\r\n\t\t\t\tdatasetrecv: '',\r\n\t\t\t\tcolumnid: '',\r\n\t\t\t\tsystemid: '',\r\n\t\t\t\tretry: 0\r\n\t\t\t},\r\n\t\t\taccessToken : ''\r\n\t\t};\r\n\t\tthis.transdata = {\r\n\t\t\tepytwor: newScrmObj.constants.crud,\r\n\t\t\tgifnoc: [],\r\n\t\t\tdatasets: {},\r\n\t\t\treyolpme: {},\r\n\t\t};\r\n\t\tthis.datatype = {\r\n\t\t\thtml: 'html',\r\n\t\t\tjson: 'json',\r\n\t\t\tscript: 'script',\r\n\t\t\txml: 'xml'\r\n\t\t};\r\n\t};\r\n\tinitialize = () => {\r\n\t\tthis.transdata.epytwor = newScrmObj.constants.crud;\r\n\t\tthis.transdata.gifnoc = [];\r\n\t\tthis.transdata.reyolpme = {};\r\n\t\tthis.transdata.datasets = {};\r\n\t\tthis.setAccessToken(ComLib.getSession('accessToken'));\r\n\t};\r\n\tsetReyolpme = () => {\r\n\t\tif (sessionStorage.getItem(\"gdsUserInfo\") != null) {\r\n\t\t\tvar arrUser = ComLib.getSession(\"gdsUserInfo\");\r\n\t\t\treturn {\r\n\t\t\t\t\"CENT_CD\": arrUser[0][\"CENT_CD\"],\r\n\t\t\t\t\"TEAM_CD\": arrUser[0][\"TEAM_CD\"],\r\n\t\t\t\t\"USR_CD\" : arrUser[0][\"USR_CD\"],\r\n\t\t\t\t\"AUTH_LV\": arrUser[0][\"AUTH_LV\"],\r\n\t\t\t\t\"CONN_IP\": arrUser[0][\"CONN_IP\"],\r\n\t\t\t};\r\n\t\t}\r\n\t};\r\n\tsetTransUrl = (url) => {\r\n\t\tthis.url = url;\r\n\t};\r\n\tsetBeforeSend = (beforeSend) => {\r\n\t\tthis.beforeSend = beforeSend;\r\n\t};\r\n\tsetTransId = (transId) => {\r\n\t\tthis.initialize();\r\n\t\tthis.id\t= transId;\r\n\t\tthis.transdata.reyolpme = this.setReyolpme();\r\n\t};\r\n\tsetCallBack = (callback) => {\r\n\t\tthis.callback\t= callback;\r\n\t};\r\n\tsetError = (error) => {\r\n\t\tthis.error = error;\r\n\t};\r\n\tsetTimeout = (timeout) => {\r\n\t\tthis.timeout = timeout;\r\n\t};\r\n\tsetAsync = (async) => {\r\n\t\tthis.async = async;\r\n\t};\r\n\tmakeTransData = () => {\r\n\t\treturn { transdata: JSON.stringify(this.transdata) };\r\n\t};\r\n\taddConfig = (props) => {\r\n\t\tthis.transdata.gifnoc.push(_.assign({}, this.constants.config, props));\r\n\t};\r\n\taddDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddSequence = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.sequence }));\r\n\t};\r\n\taddIterator = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.iterator }));\r\n\t};\r\n\taddSendDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddRecvDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\tsetAccessToken = (token) => {\r\n\t\tthis.constants.accessToken = token;\r\n\t};\r\n\tupload = (onUploadProgress, callback) => {\r\n\t\tconst instance = axios.create({\r\n\t\t\tbaseURL: process.env.API_URL,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"multipart/form-data\",\r\n\t\t\t\t\"Authorization\" : this.constants.accessToken\r\n\t\t\t}\r\n\t\t\t});\r\n\t\tconst config = {\r\n\t\t\tonUploadProgress: onUploadProgress\r\n\t\t}\r\n\r\n\t\tinstance.post(this.url, this.transdata.datasets.formData.formData, config)\r\n\t\t\t.then(function (response) {\r\n\t\t\treturn callback({id : response.data.resData.transId, data : response.data });\r\n\t\t})\r\n\t\t.catch(function (error) {\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t})\r\n\t\t.then(function () {\r\n\r\n\t\t});;\r\n\t};\r\n\tagent = async() => {\r\n\t\tconsole.log('request => ');\r\n\t\tconsole.log(this.transdata);\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\turl: process.env.API_URL + this.url,\r\n\t\t\tdata: JSON.stringify({\"transdata\":this.transdata}),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\" : this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = await axios(reqOptions);\r\n\t\t\tconsole.log('response => ');\r\n\t\t\tconsole.log(resData);\r\n\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', resData.data.gifnoc.ERR_MESSAGE);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('catch => ');\r\n\t\t\tconsole.log(err);\r\n\t\t\tComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport {newScrmObj, ComLib, StrLib, NumLib, FileLib, ExcelLib, DateLib, TransManager, DataLib };","import React from 'react';\nimport ReactHowler from 'react-howler';\nimport {ComLib} from 'common';\nimport Draggable from 'react-draggable';\nimport DialogBox from 'react-modeless';\n \nclass Player extends React.Component {\n    componentDidMount () {\n        ComLib.openPop();\n    }\n    render () {\n        return (\n            <div className=\"scrm-player-container\">\n                 <ReactHowler src={process.env.API_URL + '/player/' + this.props.callId}/>\n            </div>\n        )\n    }\n}\nexport default Player;","import React from 'react';\r\nimport { ComLib, TransManager, StrLib, DataLib } from 'common';\r\nimport { Link } from 'react-router-dom';\r\nimport 'assets/styles/login.css';\r\n\r\nclass Login extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\t// state 초기화\r\n\t\tthis.state = {\r\n\t\t\tdsLogin: DataLib.datalist.getInstance(),\r\n\t\t\tdsRst: DataLib.datalist.getInstance(),\r\n\t\t\tdsLoginInfo: DataLib.datalist.getInstance([{USR_CD: \"\", PWD: \"\", CENT_CD: \"\", CONN_IP: \"127.0.0.1\"}]),\r\n\t\t};\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.input.onKeyDown = this.event.input.onKeyDown.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tComLib.setSession(\"gdsUserInfo\", [{\"USR_CD\": \"aaa\", \"CENT_CD\": \"ccc\", \"TEAM_CD\": \"ttt\", \"AUTH_LV\": \"10\"}]);\r\n\t}\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogin':\r\n\t\t\t\t\t if (this.validation('LOGIN_R01')) { this.transaction('LOGIN_R01'); }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnChgPasswd':\r\n\t\t\t\t\tif (document.getElementById('popup_div_0') != undefined) {\r\n\t\t\t\t\t\tdocument.getElementById('popup_div_0').hidden = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet option = { width: '300px', height: '450px', modaless: false }\r\n\t\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', option);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrCd':\r\n\t\t\t\t\t//this.setState({...this.state, dsLoginInfo: {...this.state.dsLoginInfo, record: {...this.state.dsLoginInfo.record, USR_CD: e.target.value}}});\r\n\t\t\t\t\tthis.state.dsLoginInfo.setValue(0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tComLib.setStateDs(this, \"dsLoginInfo\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\t//this.setState({...this.state, dsLoginInfo: {...this.state.dsLoginInfo, record: {...this.state.dsLoginInfo.record, PWD: e.target.value}}});\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsLoginInfo\", 0, \"PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyDown: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\tdocument.getElementById('btnLogin').click();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"USR_CD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'ID를 입력해주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', '비밀번호를 입력해주세요.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tthis.state.dsRst.setValue(0, \"CONN_IP\", this.state.dsLoginInfo.getValue(0, \"CONN_IP\"));\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t * LOGIN_R01 : 로그인 체크\r\n\t * LOGIN_R02 : 사용자 정보 조회\r\n\t * LOGIN_U01 : 비멀번호 오류 카운트 업데이트\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'LOGIN_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsLogin\",\r\n\t\t\t\t\tcolumnid: \"PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_doLogin\",\r\n\t\t\t\t\tdatasetsend:\"dsLogin\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsLogin', this.state.dsLoginInfo.getRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'LOGIN_R02':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t// 비밀번호 오류 카운트 초기화\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_initPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 로그인 정보 Merge\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_doLoginAfter\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 로그인 이력 추가\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:\"COM.C_doLoginOutSp\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\t// 사용자 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 공통코드 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCommCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCommCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 메뉴 정보 조회 -> TO-DO : Main Frame으로 이동 ?\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMenuList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMenuInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 센터 기준값 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentStndList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentStvlInfo\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getTeamList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsTeamList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSendData', this.state.dsRst.getRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t// 비밀번호 에러 카운트 업데이트\r\n\t\t\tcase 'LOGIN_U01' :\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_addPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsUpdatePwd\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUpdatePwd', this.state.dsLoginInfo.getRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\t//this.setState({...this.state, dsRst: {...this.state.dsRst, records: res.data.dsRst}});\r\n\t\t\tComLib.setStateRecords(this, \"dsRst\", res.data.dsRst);\r\n\r\n\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'Y') {\r\n\t\t\t\t//console.log('accessToken : ' +  res.data.dsLogin.accessToken);\r\n\t\t\t\t//ComLib.setSession('accessToken', res.data.dsLogin.type + ' ' + res.data.dsLogin.accessToken);\r\n\t\t\t\tif (this.validation('LOGIN_R02')) this.transaction('LOGIN_R02');\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'USR_CD') {\r\n\t\t\t\t\tComLib.openDialog('A', '사용자가 존재하지 않습니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'LOGIN') {\r\n\t\t\t\t\tComLib.openDialog('A', '이미 로그인 된 사용자 입니다.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'MAX_ERR') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 입력 오류가 5회 초과하였습니다. 비밀번호를 초기화 해주세요.');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'INIT') {\r\n\t\t\t\t\tComLib.openDialog('C', '비밀번호 변경 대상자 입니다.\\n 비밀번호 변경 화면으로 이동합니다.', foo => { if (foo === true) document.getElementById('btnChgPasswd').click();});\r\n\t\t\t\t}\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'PWD_ERR') {\r\n\t\t\t\t\tComLib.openDialog('A', '비밀번호 오류입니다.');\r\n\t\t\t\t\tif (this.validation('LOGIN_U01')) this.transaction('LOGIN_U01');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\t//this.setState({...this.state, dsLogin : {...this.state.dsLogin, records: res.data.dsLogin}});\r\n\t\t\tComLib.setStateRecords(this, \"dsLogin\", res.data.dsLogin);\r\n\r\n\t\t\tconst access_token = true;\r\n\t\t\tComLib.setSession('token', access_token);\r\n\r\n\t\t\tComLib.setSession('gdsUserInfo',\tres.data.dsUserInfo);\r\n\t\t\tComLib.setSession('gdsCommCode',\tres.data.dsCommCodeInfo);\r\n\t\t\tComLib.setSession('gdsMenu', \t\tres.data.dsMenuInfo);\r\n\t\t\tComLib.setSession('gdsCentStndVl',\tres.data.dsCentStvlInfo);\r\n\t\t\tComLib.setSession('gdsCentList',\tres.data.dsCentList);\r\n\t\t\tComLib.setSession('gdsTeamList',\tres.data.dsTeamList);\r\n\t\t\tComLib.setSession('gdsUserList',\tres.data.dsUserList);\r\n\r\n\t\t\t// 메인 화면으로 이동\r\n\t\t\t//window.location = '/base';\r\n\t\t\tdocument.getElementById('linkBase').click();\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className = 'scrm-login'>\r\n\t\t\t\t\t<div className = 'scrm-login-div'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-main'>\r\n\t\t\t\t\t\t\tAI-QA\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'txtUsrCd' value = {this.state.dsLoginInfo.records[0][\"USR_CD\"]} placeholder = {' 아이디'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'txtUsrPasswd' value = {this.state.dsLoginInfo.records[0][\"PWD\"]} placeholder = {' 비밀번호'} onChange = {this.event.input.onChange} onKeyDown = {this.event.input.onKeyDown}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t<button id = 'btnLogin' onClick = {this.event.button.onClick}>{'로그인'}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t<button id = 'btnChgPasswd' onClick = {this.event.button.onClick}>{'비밀번호 변경'}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{display: 'none'}}>\r\n\t\t\t\t\t{/*<Link id = 'linkPwdChg'\tto = {{pathname: '/pwdChg',\tstate: {param: this.state.dsLoginInfo.getRecords()}}}/>*/}\r\n\t\t\t\t\t<Link id = 'linkBase'\tto = {{pathname: '/base',\tstate: {}}}/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\nimport {Checkbox, Radio, Textfield, InputCalendar, Table, Grid, ComponentPanel, SubFullPanel, FullPanel, Player} from 'components';\r\nimport {Selectbox} from 'components';\r\nimport {DataLib} from 'common';\r\n\r\nclass View extends React.Component{\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tstate = {\r\n\t\tplayerProps : {\r\n\t\t\tid  : 'btnPlayerTest',\r\n\t\t\tvalue : 'playerTest',\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (id) {\r\n\t\t\tcase 'SAM010000_R01' :\r\n\t\t\t\tthis.transaction('SAM010000_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...param) => {\r\n\t\tconsole.log('transaction');\r\n\t\ttry  {\r\n\t\t\tconsole.log(param);\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (...param) => {\r\n\t\tconsole.log('callback');\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tconsole.log('btnTest');\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'btnPlayerTest' :\r\n\t\t\t\t\t\talert('btnPlayerTest');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : \r\n\t\t\t\t\t\t//this.setState({...this.status, val1: 0});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tid = {this.state.playerProps.id}\r\n\t\t\t\t\t\tvalue = {this.state.playerProps.value}\r\n\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\t\r\nexport default View;","import React from 'react';\r\nimport {Grid, Tabs, TabPanel, ComponentPanel, InputFileUpload} from 'components';\r\nconst data = [\r\n    {STND_CD : '123' , STND_CD_NM : 'TEST', APY_YN: 'Y', RSTR_DT_PTY_USE_YN : 'Y', RSTR_TM_PTY_USE_YN : '', STND_DT_PTY_USE_YN : ''},\r\n    {STND_CD : '124' , STND_CD_NM : 'TEST', APY_YN: 'Y', RSTR_DT_PTY_USE_YN : '', RSTR_TM_PTY_USE_YN : 'Y', STND_DT_PTY_USE_YN : ''},\r\n    {STND_CD : '125' , STND_CD_NM : 'TEST', APY_YN: 'Y', RSTR_DT_PTY_USE_YN : '', RSTR_TM_PTY_USE_YN : '', STND_DT_PTY_USE_YN : 'Y'},\r\n];\r\nclass Index extends React.Component{\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    <Grid\r\n                        id ='grdCentStndValInfo' ref='grdCentStndValInfo' height=\"650px\"\r\n                        header = {[\r\n                            {   headerName : '기준값코드'  , field : 'STND_CD',      colId : 'STND_CD',     width: 40},\r\n                            {   headerName : '내용'        , field : 'STND_CD_NM',   colId : 'STND_CD_NM',  width: 60},\r\n                            {   headerName : '적용여부'    , field : 'APY_YN',       colId : 'APY_YN',      width: 30,  cellRenderer: 'checkbox', },\r\n                            // cellEditor: 'agSelectCellEditor',  cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('101') }, valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '101') },\r\n                            // {   headerName : '기준값'      , field : 'ETC1_CONT',    colId : 'ETC1_CONT',   width: 130,  editable : true },\r\n                            // {   headerName : '제한시작일자', field : 'RSTR_STRT_DT', colId : 'RSTR_STRT_DT',width: 130,  editable : true , cellRenderer: 'date', cellEditor: 'date'},\r\n                            // {   headerName : '제한종료일자', field : 'RSTR_END_DT',  colId : 'RSTR_END_DT', width: 130,  editable : true , cellRenderer: 'rangeDate', cellEditor: 'rangeDate'},\r\n                            // {   headerName : '제한시작시간', field : 'RSTR_STRT_TM', colId : 'RSTR_STRT_TM',width: 130,  editable : true , cellRenderer: 'time', cellEditor: 'time'},\r\n                            // {   headerName : '제한종료시간', field : 'RSTR_END_TM',  colId : 'RSTR_END_TM', width: 130,  editable : true , cellRenderer: 'rangeTime', cellEditor: 'rangeTime'},\r\n                            // {   headerName : '기준일'      , field : 'STND_DT',      colId : 'STND_DT',     width: 130,  editable : true , cellRenderer: 'date', cellEditor: 'date'},\r\n                            {   headerName : '기준값'      , field : 'AAAA',     colId : 'AAAA',    width: 250,  editable : true , \r\n                                // cellRendererSelector : (params) => {\r\n                                //     if (params.data.RSTR_DT_PTY_USE_YN === 'Y') { // 제한일자\r\n                                //         return { component: 'rangeDate' };\r\n                                //     } else if (params.data.RSTR_TM_PTY_USE_YN === 'Y') { // 제한시간\r\n                                //         return {  component: 'rangeTime' };\r\n                                //     } else if (params.data.STND_DT_PTY_USE_YN === 'Y') { // 기준일\r\n                                //         return { component: 'date' };\r\n                                //     }\r\n                                // },\r\n                                cellEditorSelector : (params) => {\r\n                                    if (params.data.RSTR_DT_PTY_USE_YN === 'Y') { // 제한일자\r\n                                        return { component: 'date' };\r\n                                    } else if (params.data.RSTR_TM_PTY_USE_YN === 'Y') { // 제한시간\r\n                                        return {  component: 'time' };\r\n                                    } else if (params.data.STND_DT_PTY_USE_YN === 'Y') { // 기준일\r\n                                        return { component: 'date' };\r\n                                    }\r\n                                }\r\n                            },\r\n                        ]}\r\n                        data = {data}\r\n                    />\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n }\r\nexport default Index;","import React from 'react';\r\n\r\nimport {BasicButton as Button, SubFullPanel, LFloatArea, RFloatArea, FlexPanel, FullPanel, ComponentPanel} from 'components';\r\nimport {Checkbox, Radio, Textfield, InputCalendar, Table, Grid, RangeInputCalendar, Label } from 'components';\r\nimport {Selectbox, MulitSelectBox, AlertDialog, PopupDialog} from 'components';\r\nimport {ComLib, TransManager} from 'common';\r\n\r\n\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\n\r\n\r\nclass Index extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    state = {\r\n        val1 : 1,\r\n        val2 : 'val2',\r\n        dataList : [],\r\n        dataListTest : [],\r\n        radioValue : '',\r\n        checkValue : [],\r\n        stateDataList : [],\r\n        alert : {\r\n            flag : false,\r\n            message : ''\r\n        },\r\n        popup : {\r\n            flag : false,\r\n        }\r\n    }\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SAM030000_R01' :\r\n                this.transaction('SAM030000_R01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                case 'SAM030000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"COM.R_selectTest\",\r\n                        datasetsend:\"dsTest\",\r\n                        datasetrecv:\"datasetTest\"\r\n                    });\r\n                    transManager.addDataset('dsTest', [{ id : 'test' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (param) => {\r\n        console.log('callback start');\r\n        console.log(param);\r\n        try  {\r\n            switch (param.id) {\r\n                case 'SAM030000_R01' :\r\n                    console.log('SAM030000_R01 callback 성공');\r\n                    console.log(param.data);\r\n\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    onClick = (e) => {\r\n        console.log('onclick');\r\n        switch (e.target.id) {\r\n            case 'btnSearch' :\r\n                console.log('SAM030000_R01 시작');\r\n                this.validation('SAM030000_R01');\r\n                break;\r\n            case 'btnNew' :\r\n                alert(2);\r\n                break;\r\n            case 'btnSave' :\r\n                alert(3);\r\n                break;\r\n            case 'btnDel' :\r\n                alert(4);\r\n                break;\r\n            case 'btnChgState' :\r\n                console.log('값 변경');\r\n                this.setState({...this.state, val1: this.state.val1+1});\r\n                console.log(this.state.val1);\r\n                break;\r\n            case 'btnRestState' :\r\n                console.log('값 리셋');\r\n                this.setState({...this.state, val1: 1});\r\n                console.log(this.state.val1);\r\n                break;\r\n            case 'btnGetValue' :\r\n                console.log('값 확인');\r\n                console.log(this.state.dataList.getRowCount());\r\n                this.setState({ dataList: { ...this.state.dataList,  data : [{ id : 'test'}] } });\r\n                break;\r\n            case 'btnTestAlert' :\r\n                this.setState({...this.state,  alert : { flag: true, message : '팝업 완료'} });\r\n                break;\r\n            case 'btnTestPop' : \r\n                this.setState({...this.state,  popup : { flag: true } });\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        switch (e.target.id) {\r\n            case 'txtTest' :\r\n                this.setState({ ...this.state, val2: e.target.value});\r\n                break;\r\n            default : \r\n                break;\r\n        }\r\n    }\r\n    onclick = (e) => {\r\n        var checkList = document.getElementById('list1');\r\n        if (checkList.classList.contains('visible'))\r\n             checkList.classList.remove('visible');\r\n         else\r\n             checkList.classList.add('visible');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        const { dataList, val1, val2 } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    {123444}\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n }\r\nexport default Index;","import React from 'react';\r\n// 레이아웃 컴포넌트\r\nimport {    AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, FooterPanel,\r\n\t\t\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree} from 'components';\r\nimport {ScrmRadialBarChart} from 'components';\r\nimport {ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component{\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// state 초기화 및 이벤트 바인딩할 때 사용\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tid : 'btnTest',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : 'TEST Button',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tstring : {\r\n\t\t\t\t\tid : 'iptStringTest',\r\n\t\t\t\t\tname : 'iptStringTest',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : 'String....',\r\n\t\t\t\t\tminLength : 5,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tnumber : {\r\n\t\t\t\t\tid : 'iptNumberTest',\r\n\t\t\t\t\tname : 'iptNumberTest',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : 'Number....',\r\n\t\t\t\t\tminLength : 5,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tradioProps : {\r\n\t\t\t\tid : 'rdoTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'rHtml',         txt : 'HTML'},\r\n\t\t\t\t\t{ key : 'rCss',          txt : 'CSS'},\r\n\t\t\t\t\t{ key : 'rJavascript',   txt : 'Javascript'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tselected : 'rCss'\r\n\t\t\t},\r\n\t\t\tsingleCheckProp : {\r\n\t\t\t\tid : 'singleChkTest',\r\n\t\t\t\tindex : 0,\r\n\t\t\t\tkeyProp : 'scVsCode',\r\n\t\t\t\tvalue : 'VsCode',\r\n\t\t\t\tchecked : 'Y',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tmultiCheckProps : {\r\n\t\t\t\tid : 'multiChkTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'cReact',   txt : 'React',      value : 'Y'} ,\r\n\t\t\t\t\t{ key : 'cVue',     txt : 'Vue',        value : 'N'} ,\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\treadOnly : false,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t},\r\n\t\t\tcalendarProps : {\r\n\t\t\t\tid : 'iptCalTest',\r\n\t\t\t\tvalue : '20200831',\r\n\t\t\t\tcloseCalendar : true,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdisableCalendar : false,\r\n\t\t\t\tformat : 'y-MM-dd',\r\n\t\t\t\tisOpen : false,\r\n\t\t\t\tmaxDate : null,\r\n\t\t\t\tminDate : null,\r\n\t\t\t\trequired : false,\r\n\t\t\t\treturnValue : 'start'\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tstId : 'iptRangeCalStrtTest',\r\n\t\t\t\tendId : 'iptRangeCalEndTest',\r\n\t\t\t\tstartDate : '20200801',\r\n\t\t\t\tendDate : '20200831',\r\n\t\t\t},\r\n\t\t\tchartProps : {\r\n\r\n\t\t\t},\r\n\t\t\tpopupProps : {\r\n\t\t\t\talert : {\r\n\t\t\t\t\tid : 'btnTestAlert',\r\n\t\t\t\t\tvalue : 'Alert Test'\r\n\t\t\t\t},\r\n\t\t\t\tconfirm : {\r\n\t\t\t\t\tid : 'btnTestConfirm',\r\n\t\t\t\t\tvalue : 'Confirm Test'\r\n\t\t\t\t},\r\n\t\t\t\tmodal : {\r\n\t\t\t\t\tid : 'btnTestModal',\r\n\t\t\t\t\tvalue : 'Modal Test'\r\n\t\t\t\t},\r\n\t\t\t\tmodaless : {\r\n\t\t\t\t\tid : 'btnTestModaless',\r\n\t\t\t\t\tvalue : 'Modaless Test'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tid : 'selTest',\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{value : 'opt1', name : '옵션1'},\r\n\t\t\t\t\t{value : 'opt2', name : '옵션2'},\r\n\t\t\t\t\t{value : 'opt3', name : '옵션3'},\r\n\t\t\t\t\t{value : 'opt4', name : '옵션4'},\r\n\t\t\t\t\t{value : 'opt5', name : '옵션5'},\r\n\t\t\t\t\t{value : 'opt6', name : '옵션6'},\r\n\t\t\t\t\t{value : 'opt7', name : '옵션7'},\r\n\t\t\t\t\t{value : 'opt8', name : '옵션8'},\r\n\t\t\t\t],\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tselected : 1,\r\n\t\t\t\tdisabled : false\r\n\t\t\t},\r\n\t\t\tmultiSelectboxProps : {\r\n\t\t\t\tid : 'mulSelTest',\r\n\t\t\t\twidth : 200,\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{ key : 'cReact',   txt : 'React',      value : 'Y'},\r\n\t\t\t\t\t{ key : 'cVue',     txt : 'Vue',        value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'},\r\n\t\t\t\t\t{ key : 'cAngular', txt : 'Angular',    value : 'N'}\r\n\t\t\t\t],\r\n\t\t\t\tkeyProp : 'key',\r\n\t\t\t\tvalue : 'txt',\r\n\t\t\t\tdisplayCount : 5\r\n\t\t\t},\r\n\t\t\ttreeProps : {\r\n\t\t\t\tid : 'tstTree',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tdepth : 3,\r\n\t\t\t\tdataset : [\r\n\t\t\t\t\t{id : 'depth1', parn_id : 'none', value : 'depth1'},\r\n\t\t\t\t\t{id : 'depth1-1', parn_id : 'depth1', value : 'depth1-1'},\r\n\t\t\t\t\t{id : 'depth1-2', parn_id : 'depth1', value : 'depth1-2'},\r\n\t\t\t\t\t{id : 'depth1-3', parn_id : 'depth1', value : 'depth1-3'},\r\n\t\t\t\t\t{id : 'depth1-1-1', parn_id : 'depth1-1', value: 'depth1-1-1'},\r\n\t\t\t\t\t{id : 'depth1-1-2', parn_id : 'depth1-1', value: 'depth1-1-2'},\r\n\t\t\t\t\t{id : 'depth2', parn_id : 'none', value : 'depth2'},\r\n\t\t\t\t\t{id : 'depth2-1', parn_id : 'depth2', value : 'depth2-1'},\r\n\t\t\t\t\t{id : 'depth2-2', parn_id : 'depth2', value : 'depth2-2'},\r\n\t\t\t\t\t{id : 'depth2-3', parn_id : 'depth2', value : 'depth2-3'},\r\n\t\t\t\t\t{id : 'depth2-2-1', parn_id : 'depth2-2', value: 'depth2-2-1'},\r\n\t\t\t\t\t{id : 'depth2-2-2', parn_id : 'depth2-2', value: 'depth2-2-2'},\r\n\t\t\t\t\t{id : 'depth3', parn_id : 'none', value : 'depth3'},\r\n\t\t\t\t\t{id : 'depth3-1', parn_id : 'depth3', value : 'depth3-1'},\r\n\t\t\t\t\t{id : 'depth3-2', parn_id : 'depth3', value : 'depth3-2'},\r\n\t\t\t\t\t{id : 'depth3-2-1', parn_id : 'depth3-2', value: 'depth3-2-1'},\r\n\t\t\t\t\t{id : 'depth3-2-2', parn_id : 'depth3-2', value: 'depth3-2-2'},\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.radio.onChange = this.event.radio.onChange.bind(this);\r\n\t\tthis.event.checkbox.onChange = this.event.checkbox.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tconsole.log('validtion');\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SAM010000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tconsole.log('transaction');\r\n\t\ttry  {\r\n\t\t\tconsole.log(transId);\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tconsole.log('callback');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnTest\" :\r\n\t\t\t\t\t\talert(e.target.id);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnDisabled\" :\r\n\t\t\t\t\t\tthis.setState({...this.state, buttonProps : { ...this.state.buttonProps, disabled : !this.state.buttonProps.disabled }});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnControlInputText\" :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestAlert\" :\r\n\t\t\t\t\t\tComLib.openDialog('A', 'Alert test 입니다.');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestConfirm\" :\r\n\t\t\t\t\t\tComLib.openDialog('C', 'Confirm 테스트입니다.', foo => { if (foo === true) return; });\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestModal\" :\r\n\t\t\t\t\t\tlet option1 = { width: '500px', height: '400px', modaless: false, callback : () => {alert('callback 먼저');} }\r\n\t\t\t\t\t\tComLib.openPop('pwdInit', '비밀번호 초기화', option1);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnTestModaless\" :\r\n\t\t\t\t\t\tlet option2 = { width: '800px', height: '600px',  modaless: true,}\r\n\t\t\t\t\t\tComLib.openPop('pwdInit', '비밀번호 초기화', option2);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptStringTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, string : {...this.state.textFieldProps.string, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptNumberTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, number : {...this.state.textFieldProps.number, value : e.target.value }}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tradio : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'rdoTest' :\r\n\t\t\t\t\t\t//alert(e.value);\r\n\t\t\t\t\t\tthis.setState({...this.state, radioProps : {...this.state.radioProps, selected : e.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'singleChkTest' :\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, singleCheckProp: {...this.state.singleCheckProp, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'multiChkTest' :\r\n\t\t\t\t\t\tlet data = this.state.multiCheckProps.dataset;\r\n\t\t\t\t\t\tdata = data.map((item, index) => {\r\n\t\t\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\t\t\tif (e.checked === true) {\r\n\t\t\t\t\t\t\t\t\titem['value'] = 'Y';\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\titem['value'] = 'N';\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn item;\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t, multiCheckProps : {\r\n\t\t\t\t\t\t\t\t...this.state.multiCheckProps\r\n\t\t\t\t\t\t\t\t, dataset : data\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptCalTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, calendarProps : {...this.state.calendarProps, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptRangeCalStrtTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, startDate : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptRangeCalEndTest' :\r\n\t\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, endDate : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selTest' :\r\n\t\t\t\t\t\tconsole.log('selTest onChange');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tconsole.log(e.target.selectedIndex);\r\n\t\t\t\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, selected : e.target.selectedIndex, value : e.target.value}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mulSelTest' :\r\n\t\t\t\t\t\tconsole.log('mulSelTest');\r\n\t\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\t\tthis.setState({...this.state, multiSelectboxProps : {...this.state.multiSelectboxProps, dataset : e.dataset}});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\t// 화면 그림 리턴\r\n\t\tconsole.log('parent');\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Button Component</label>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.buttonProps.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.buttonProps.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.buttonProps.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {20}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tid = 'btnDisabled'\r\n\t\t\t\t\t\t\t\tvalue = '버튼 Disabled 하기'\r\n\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>TextFiled Component</label>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}>문자 입력</label>\r\n\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.string.id}\r\n\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.string.name}\r\n\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.string.value}\r\n\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.string.placeholder}\r\n\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.string.minLength}\r\n\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.string.maxLength}\r\n\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.string.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.string.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}>숫자만 입력</label>\r\n\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\ttype = \"onlyNum\"\r\n\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.number.id}\r\n\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.number.name}\r\n\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.number.value}\r\n\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.number.placeholder}\r\n\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.number.minLength}\r\n\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.number.maxLength}\r\n\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.number.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.number.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Radio Component</label>\r\n\t\t\t\t\t\t<Radio  id = {this.state.radioProps.id}\r\n\t\t\t\t\t\t\t\tdataset = {this.state.radioProps.dataset}\r\n\t\t\t\t\t\t\t\tkeyProp = {this.state.radioProps.keyProp}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.radioProps.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.radioProps.disabled}\r\n\t\t\t\t\t\t\t\tdefaultSelected = {2}\r\n\t\t\t\t\t\t\t\tselected = {this.state.radioProps.selected}\r\n\t\t\t\t\t\t\t\tdata = {this.state.radioProps.data}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.radio.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Single Checkbox Component </label>\r\n\t\t\t\t\t\t<Checkbox   id = {this.state.singleCheckProp.id}\r\n\t\t\t\t\t\t\t\t\tkeyProp = {this.state.singleCheckProp.keyProp}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.singleCheckProp.value}\r\n\t\t\t\t\t\t\t\t\tchecked = {this.state.singleCheckProp.checked}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.singleCheckProp.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Mulit Checkbox Component </label>\r\n\t\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\t\t\t\tid = {this.state.multiCheckProps.id}\r\n\t\t\t\t\t\t\t\t\tdataset = {this.state.multiCheckProps.dataset}\r\n\t\t\t\t\t\t\t\t\tkeyProp = {this.state.multiCheckProps.keyProp}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.multiCheckProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.multiCheckProps.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> InputCalendar Component </label>\r\n\t\t\t\t\t\t<InputCalendar\r\n\t\t\t\t\t\t\t\t\tid = {this.state.calendarProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.calendarProps.value}\r\n\t\t\t\t\t\t\t\t\tautoFocus = {this.state.calendarProps.autoFocus}\r\n\t\t\t\t\t\t\t\t\tcloseCalendar = {this.state.calendarProps.closeCalendar}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.calendarProps.disabled}\r\n\t\t\t\t\t\t\t\t\tdisableCalendar = {this.state.calendarProps.disableCalendar}\r\n\t\t\t\t\t\t\t\t\tformat = {this.state.calendarProps.format}\r\n\t\t\t\t\t\t\t\t\tisOpen = {this.state.calendarProps.isOpen}\r\n\t\t\t\t\t\t\t\t\tmaxDate = {this.state.calendarProps.maxDate}\r\n\t\t\t\t\t\t\t\t\tminDate = {this.state.calendarProps.minDate}\r\n\t\t\t\t\t\t\t\t\trequired = {this.state.calendarProps.required}\r\n\t\t\t\t\t\t\t\t\treturnValue = {this.state.calendarProps.returnValue}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\tonCalendarOpen = {this.event.inputcalendar.onCalendarOpen}\r\n\t\t\t\t\t\t\t\t\tonCalendarClose = {this.event.inputcalendar.onCalendarClose}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}> RangeInputCalendar Component </label>\r\n\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\tstId = {this.state.rangeCalendarProps.stId}\r\n\t\t\t\t\t\t\tendId = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\tendDate = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ScrmRadialBarChart/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<label style={{marginRight : '20px'}}>Button Component</label>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.alert.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.alert.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.alert.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.alert.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.confirm.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.confirm.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.confirm.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.confirm.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.modal.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.modal.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.modal.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.modal.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tid = {this.state.popupProps.modaless.id}\r\n\t\t\t\t\t\t\tvalue = {this.state.popupProps.modaless.value}\r\n\t\t\t\t\t\t\tdisabled = {this.state.popupProps.modaless.disabled}\r\n\t\t\t\t\t\t\thidden = {this.state.popupProps.modaless.hidden}\r\n\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\tmr = {10}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel width=\"20%\">\r\n\t\t\t\t\t\t\t\t<label style={{marginRight : '20px'}}> Selectbox Component </label>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbCent\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getSession(\"gdsCentList\"), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbTeam\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getSession(\"gdsTeamList\"), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbUser\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getSession(\"gdsUserList\"), newScrmObj.constants.select.argument.none)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbComm\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('100'), newScrmObj.constants.select.argument.none)}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t\t<MulitSelectBox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.multiSelectboxProps.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.multiSelectboxProps.dataset}\r\n\t\t\t\t\t\t\t\t\t\tkeyProp = {this.state.multiSelectboxProps.keyProp}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.multiSelectboxProps.value}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.multiSelectboxProps.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.multiSelectboxProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\tdisplayCount = {this.state.multiSelectboxProps.displayCount}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<Tree\r\n\t\t\t\t\t\t\tid = {this.state.treeProps.id}\r\n\t\t\t\t\t\t\tdataset = {this.state.treeProps.dataset}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, RFloatArea, Grid} from 'components';\r\nimport {newScrmObj, ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\n// SYS010000 : 코드 관리 화면 \r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            filterParam : {\r\n                bigCommUseYn : 'Y',\r\n                bigCommCdNm  : '' ,\r\n                smlCommUseYn : 'Y',\r\n            },\r\n            srchSmlParam : {\r\n                BIG_CTG_CD : ''\r\n            },\r\n            dsBigCommCodeInfo : [] ,\r\n            dsSmlCommCodeInfo : []\r\n        }\r\n        this.event.select.onChange              = this.event.select.onChange.bind(this);\r\n        this.event.input.onChange               = this.event.input.onChange.bind(this);\r\n        this.event.button.onClick               = this.event.button.onClick.bind(this);\r\n        this.event.grid.onChange                = this.event.grid.onChange.bind(this);\r\n        this.event.grid.onRowDoubleClicked      = this.event.grid.onRowDoubleClicked.bind(this);\r\n        this.event.grid.onCellClick             = this.event.grid.onCellClick.bind(this);\r\n        this.event.grid.onCellValueChanged      = this.event.grid.onCellValueChanged.bind(this);\r\n        this.event.grid.onCellEditingStopped    = this.event.grid.onCellEditingStopped.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n        this.transaction('SYS010000_R01');\r\n        this.refs.grdBigCommCodeInfo.onGridReady(this.refs.grdBigCommCodeInfo);\r\n        this.refs.grdSmlCommCodeInfo.onGridReady(this.refs.grdSmlCommCodeInfo);\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        let chkCnt = 0;\r\n        switch (id) {\r\n            case 'SYS010000_H01' :\r\n                if (DataLib.getRowCount(this.state.dsBigCommCodeInfo) === 0) {\r\n                    ComLib.openDialog('A', '조회된 대분류 코드가 없습니다.');\r\n                    return false;\r\n                }\r\n                for ( let intA = 0; intA < DataLib.getRowCount(this.state.dsBigCommCodeInfo); intA ++ ) {\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsBigCommCodeInfo, intA, 'BIG_CTG_CD'))) {\r\n                        ComLib.openDialog('A', intA + '행의 대분류 코드를 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsBigCommCodeInfo, intA, 'BIG_CTG_CD_NM'))) {\r\n                        ComLib.openDialog('A', intA + '행의 대분류 코드명을 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsBigCommCodeInfo, intA, 'USE_YN'))) {\r\n                        ComLib.openDialog('A', intA + '행의 대분류 사용여부를 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (DataLib.getCellData(this.state.dsBigCommCodeInfo, intA, 'state') !== newScrmObj.constants.crud.read) {\r\n                        chkCnt ++;\r\n                    }\r\n                }\r\n                if (chkCnt === 0) {\r\n                    ComLib.openDialog('A', '변경된 행이 없습니다.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 'SYS010000_H02' :\r\n                if (DataLib.getRowCount(this.state.dsSmlCommCodeInfo) === 0) {\r\n                    ComLib.openDialog('A', '조회된 소분류 코드가 없습니다.');\r\n                    return false;\r\n                }\r\n                for ( let intA = 0; intA < DataLib.getRowCount(this.state.dsSmlCommCodeInfo); intA ++ ) {\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsSmlCommCodeInfo, intA, 'SML_CTG_CD'))) {\r\n                        ComLib.openDialog('A', intA + '행의 소분류 코드를 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsSmlCommCodeInfo, intA, 'SML_CTG_CD_NM'))) {\r\n                        ComLib.openDialog('A', intA + '행의 소분류 코드명을 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsSmlCommCodeInfo, intA, 'SORT_ORD'))) {\r\n                        ComLib.openDialog('A', intA + '행의 순서를 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (StrLib.isNull(DataLib.getCellData(this.state.dsSmlCommCodeInfo, intA, 'USE_YN'))) {\r\n                        ComLib.openDialog('A', intA + '행의 사용여부를 입력해 주시기 바랍니다.');\r\n                        return false;\r\n                    }\r\n                    if (DataLib.getCellData(this.state.dsSmlCommCodeInfo, intA, 'state') !== newScrmObj.constants.crud.read) {\r\n                        chkCnt ++;\r\n                    }\r\n                }\r\n                if (chkCnt === 0) {\r\n                    ComLib.openDialog('A', '변경된 행이 없습니다.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 대분류 코드 조회\r\n                case 'SYS010000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getBigComCode\",\r\n                        datasetsend:\"dsSrchBigComCode\",\r\n                        datasetrecv:\"dsBigCommCodeInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchBigComCode', [{ PARAM : '' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 소분류 코드 조회\r\n                case 'SYS010000_R02' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getSmlComCode\",\r\n                        datasetsend:\"dsSrchSmlComCode\",\r\n                        datasetrecv:\"dsSmlCommCodeInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchSmlComCode', [{ BIG_CTG_CD : this.state.srchSmlParam.BIG_CTG_CD }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 대분류 코드 변경\r\n                case 'SYS010000_H01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.handle,\r\n                        sqlmapid:\"SYS.H_setBigCommCode\",\r\n                        datasetsend:\"dsBigCommCodeInfo\",\r\n                    });\r\n                    transManager.addDataset('dsBigCommCodeInfo', this.state.dsBigCommCodeInfo.filter(item => item.state !== newScrmObj.constants.crud.read));\r\n                    transManager.agent();\r\n                    break;\r\n                // 소분류 코드 변경\r\n                case 'SYS010000_H02' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.handle,\r\n                        sqlmapid:\"SYS.H_setSmlCommCode\",\r\n                        datasetsend:\"dsSmlCommCodeInfo\",\r\n                    });\r\n                    transManager.addDataset('dsSmlCommCodeInfo', this.state.dsSmlCommCodeInfo.filter(item => item.state !== newScrmObj.constants.crud.read));\r\n                    transManager.agent();\r\n                    break;\r\n                default : break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SYS010000_R01' :\r\n                this.setState({...this.state, dsBigCommCodeInfo : DataLib.convertGridData(res.data.dsBigCommCodeInfo), dsSmlCommCodeInfo : []});\r\n                break;\r\n            case 'SYS010000_R02' :\r\n                this.setState({...this.state, dsSmlCommCodeInfo : DataLib.convertGridData(res.data.dsSmlCommCodeInfo)});\r\n                break;\r\n            case 'SYS010000_H01' :\r\n                this.transaction('SYS010000_R01');\r\n                break;\r\n            case 'SYS010000_H02' :\r\n                this.transaction('SYS010000_R02');\r\n                break;\r\n            default : break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button  : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnSrchCode' :\r\n                        if (this.validation('SYS010000_R01')) {\r\n                            this.transaction('SYS010000_R01');\r\n                        }\r\n                        break;\r\n                    case 'btnNewBigCode' :\r\n                        this.setState({\r\n                            ...this.state\r\n                        ,   dsBigCommCodeInfo : this.state.dsBigCommCodeInfo.concat(\r\n                                { state: 'c', BIG_CTG_CD : '', BIG_CTG_CD_NM : '', USE_YN : 'Y', REG_USR : 'itfact', MFY_ER : 'itfact'})\r\n                        ,   dsSmlCommCodeInfo : []\r\n                        }, () => this.refs.grdBigCommCodeInfo.editStart(DataLib.getRowCount(this.state.dsBigCommCodeInfo)-1, 'BIG_CTG_CD'));\r\n                        break;\r\n                    case 'btnDelBigCode' :\r\n                        if (StrLib.isNull(this.refs.grdBigCommCodeInfo.getSelectedRowIndex())) {\r\n                            ComLib.openDialog('A', '선택된 행이 없습니다.');\r\n                            return false;\r\n                        } else {\r\n                            let index = this.refs.grdBigCommCodeInfo.getSelectedRowIndex();\r\n                            if (DataLib.getCellData(this.state.dsBigCommCodeInfo, index, 'state') === newScrmObj.constants.crud.create) {\r\n                                this.setState({ dsBigCommCodeInfo : this.state.dsBigCommCodeInfo.filter(item => item !== this.state.dsBigCommCodeInfo[index])});\r\n                            } else {\r\n                                ComLib.openDialog('A', '기존 행은 삭제할 수 없습니다.');\r\n                                return false;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'btnSaveBigCode' :\r\n                        if (this.validation('SYS010000_H01')) {\r\n                            this.transaction('SYS010000_H01');\r\n                        }\r\n                        break;\r\n                    case 'btnNewSmlCode' :\r\n                        if (StrLib.isNull(this.refs.grdBigCommCodeInfo.getSelectedRowIndex())) {\r\n                            ComLib.openDialog('A', '대분류 코드를 선택하지 않았습니다.');\r\n                            return false;\r\n                        }\r\n                        if (DataLib.getCellData(this.state.dsBigCommCodeInfo, this.refs.grdBigCommCodeInfo.getSelectedRowIndex(), 'state') === newScrmObj.constants.crud.create) {\r\n                            ComLib.openDialog('A', '저장되지 않은 대분류 코드에 대해서는 소분류 코드를 추가할 수 없습니다.');\r\n                            return false;\r\n                        }\r\n                        this.setState({\r\n                            ...this.state\r\n                        ,   dsSmlCommCodeInfo : this.state.dsSmlCommCodeInfo.concat({ \r\n                            state: 'c', BIG_CTG_CD : this.state.srchSmlParam.BIG_CTG_CD, SML_CTG_CD : '', SML_CTG_CD_NM:'' , PTY_VL : '', USE_YN : 'Y', REG_USR : 'itfact', MFY_ER : 'itfact'})\r\n                        }, () => this.refs.grdSmlCommCodeInfo.editStart(DataLib.getRowCount(this.state.dsSmlCommCodeInfo)-1, 'SML_CTG_CD'));\r\n                        break;\r\n                    case 'btnDelSmlCode' :\r\n                        if (StrLib.isNull(this.refs.grdSmlCommCodeInfo.getSelectedRowIndex())) {\r\n                            ComLib.openDialog('A', '선택된 행이 없습니다.');\r\n                            return false;\r\n                        } else {\r\n                            let index = this.refs.grdSmlCommCodeInfo.getSelectedRowIndex();\r\n                            if (DataLib.getCellData(this.state.dsSmlCommCodeInfo, index, 'state') === newScrmObj.constants.crud.create) {\r\n                                this.setState({...this.state, dsSmlCommCodeInfo : this.state.dsSmlCommCodeInfo.filter(item => item !== this.state.dsSmlCommCodeInfo[index])});\r\n                            } else {\r\n                                ComLib.openDialog('A', '기존 행은 삭제할 수 없습니다.');\r\n                                return false;\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'btnSaveSmlCode' :\r\n                        if (this.validation('SYS010000_H02')) {\r\n                            this.transaction('SYS010000_H02');\r\n                        }\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        select : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'selBigComUseYn' : this.setState({ ...this.state, filterParam: {...this.state.filterParam, bigCommUseYn : e.target.value}}); break;\r\n                    case 'selSmlComUseYn' : this.setState({ ...this.state, filterParam: {...this.state.filterParam, smlCommUseYn : e.target.value}}); break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'txtBigCommParam' :\r\n                        //this.setState({ ...this.state, srchSmlParam: {...this.state.srchSmlParam, bigCommParam : e.target.value}});\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        grid : {\r\n            onChange : (e) => {\r\n                \r\n            },\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdBigCommCodeInfo' :\r\n                        if (DataLib.getCellData(this.state.dsBigCommCodeInfo, e.index, 'state') !== newScrmObj.constants.crud.create) {\r\n                            this.setState ({...this.state , srchSmlParam : { ...this.state.srchSmlParam, BIG_CTG_CD :  e.data.BIG_CTG_CD }});\r\n                            this.transaction('SYS010000_R02');\r\n                        } else {\r\n                            this.setState ({...this.state , dsSmlCommCodeInfo : []});\r\n                        }\r\n                        break;\r\n                    case 'grdSmlCommCodeInfo' :\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onRowDoubleClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdBigCommCodeInfo' :\r\n                        break;\r\n                    case 'grdSmlCommCodeInfo' :\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onCellClick : (e) => {\r\n\r\n            },\r\n            onCellValueChanged : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdBigCommCodeInfo' : \r\n                        let bigTemp = this.state.dsBigCommCodeInfo;\r\n                        Object.assign(bigTemp[e.index], e.data);\r\n                        if (DataLib.getCellData(this.state.dsBigCommCodeInfo, e.index, 'state') === newScrmObj.constants.crud.read) {\r\n                            bigTemp[e.index].state = newScrmObj.constants.crud.update;\r\n                        }\r\n                        this.setState({ ...this.state, dsBigCommCodeInfo : bigTemp });\r\n                        bigTemp = null;\r\n                        break;\r\n                    case 'grdSmlCommCodeInfo' :\r\n                        let smlTemp = this.state.dsSmlCommCodeInfo;\r\n                        Object.assign(smlTemp[e.index], e.data);\r\n                        if (DataLib.getCellData(this.state.dsSmlCommCodeInfo, e.index, 'state') === newScrmObj.constants.crud.read) {\r\n                            smlTemp[e.index].state = newScrmObj.constants.crud.update;\r\n                        }\r\n                        this.setState({ ...this.state, dsSmlCommCodeInfo : smlTemp });\r\n                        smlTemp = null;\r\n                        break;\r\n                    default : break;\r\n                }\r\n                \r\n                //this.setState({...this.state, dsBigCommCodeInfo : {}})\r\n                \r\n            },\r\n            onCellEditingStopped : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdBigCommCodeInfo' :\r\n                        for (let intA = 0; intA < DataLib.getRowCount(this.state.dsBigCommCodeInfo); intA++) {\r\n                            if (DataLib.getCellData(this.state.dsBigCommCodeInfo, intA, 'BIG_CTG_CD') === e.data.BIG_CTG_CD) {\r\n                                if (Number(e.index) !== intA) {\r\n                                    ComLib.openDialog('A', intA + '행의 대분류 코드 값과 동일합니다.');\r\n                                    this.refs.grdBigCommCodeInfo.editStart(e.index, 'BIG_CTG_CD');\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'grdSmlCommCodeInfo' :\r\n                        for (let intA = 0; intA < DataLib.getRowCount(this.state.dsSmlCommCodeInfo); intA++) {\r\n                            if (DataLib.getCellData(this.state.dsSmlCommCodeInfo, intA, 'SML_CTG_CD') === e.data.SML_CTG_CD) {\r\n                                if (Number(e.index) !== intA) {\r\n                                    ComLib.openDialog('A', intA + '행의 소분류 코드 값과 동일합니다.');\r\n                                    this.refs.grdSmlCommCodeInfo.editStart(e.index, 'SML_CTG_CD');\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    default : break;\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <FlexPanel>\r\n                    <ComponentPanel width=\"48%\">\r\n                        <Grid   id='grdBigCommCodeInfo' ref='grdBigCommCodeInfo' height= \"700px\" floatingFilter = {true}\r\n                                header = {[\r\n                                    {   headerName : '대분류코드'    , field : 'BIG_CTG_CD',     colId : 'BIG_CTG_CD',   width:150,      editable : true,\r\n                                        filter: 'agTextColumnFilter',  filterParams : {filterOptions: ['contains'], suppressAndOrCondition : true}},\r\n                                    {   headerName : '대분류코드명'  , field : 'BIG_CTG_CD_NM',  colId : 'BIG_CTG_CD_NM',      editable : true,\r\n                                        filter: 'agTextColumnFilter',  filterParams : {filterOptions: ['contains'], suppressAndOrCondition : true} \r\n                                    },\r\n                                    {   headerName : '사용여부'      , field : 'USE_YN',         colId : 'USE_YN',             editable : true,\r\n                                        filter: 'agTextColumnFilter',  filterParams: { filterOptions: ['equals'], suppressAndOrCondition : true},\r\n                                        cellEditor: 'agSelectCellEditor',   cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('101') },\r\n                                        valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param, '101')         \r\n                                    }\r\n                                ]}\r\n                                // rowDrag, dndSource, editable, cellEditor, valueGetter, aggFunc\r\n                                data = {this.state.dsBigCommCodeInfo}\r\n                                onChange = {this.event.grid.onChange}\r\n                                onRowClicked = {this.event.grid.onRowClicked}\r\n                                onRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n                                onCellValueChanged = {this.event.grid.onCellValueChanged}\r\n                                onCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n                        />\r\n                        <SubFullPanel>\r\n                            <RFloatArea>\r\n                                <Button id='btnNewBigCode' value='행추가' onClick={this.event.button.onClick} mr ='5px'/>\r\n                                <Button id='btnDelBigCode' value='행삭제' onClick={this.event.button.onClick} mr ='5px'/>\r\n                                <Button id='btnSaveBigCode' value='저장' onClick={this.event.button.onClick}/>\r\n                            </RFloatArea>\r\n                        </SubFullPanel>\r\n                    </ComponentPanel>\r\n                     <ComponentPanel>\r\n                        <Grid   id='grdSmlCommCodeInfo' ref='grdSmlCommCodeInfo' height= \"700px\" floatingFilter = {true}\r\n                                header = {[\r\n                                    {   headerName : '대분류코드',     field : 'BIG_CTG_CD',     colId : 'BIG_CTG_CD',                              },\r\n                                    {   headerName : '소분류코드',     field : 'SML_CTG_CD',     colId : 'SML_CTG_CD',         editable : true,\r\n                                        filter: 'agTextColumnFilter',  filterParams : {filterOptions: ['contains'], suppressAndOrCondition : true}  },\r\n                                    {   headerName : '소분류코드명',   field : 'SML_CTG_CD_NM',  colId : 'SML_CTG_CD_NM',      editable : true,\r\n                                        filter: 'agTextColumnFilter',  filterParams : {filterOptions: ['contains'], suppressAndOrCondition : true}  },\r\n                                    {   headerName : '속성값',         field : 'PTY_VL',         colId : 'PTY_VL',             editable : true      },\r\n                                    {   headerName : '정렬순서',       field : 'SORT_ORD',       colId : 'SORT_ORD',           editable : true      },\r\n                                    {   headerName : '사용여부',       field : 'USE_YN',         colId : 'USE_YN',             editable : true,\r\n                                        cellEditor: 'agSelectCellEditor', \r\n                                        filter: 'agTextColumnFilter',  filterParams : {filterOptions: ['equals'], suppressAndOrCondition : true     },\r\n                                        cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('101') },\r\n                                        valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '101')                                  },\r\n                                    {   headerName : '비고',           field : 'REM',            colId : 'REM',                editable : true      },\r\n                                    {   headerName : '등록자',         field : 'REG_USR',        colId : 'REG_USR',                                 }\r\n                                ]}\r\n                                data = {this.state.dsSmlCommCodeInfo}\r\n                                onChange = {this.event.grid.onChange}\r\n                                onRowClicked = {this.event.grid.onRowClicked}\r\n                                onRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n                                onCellValueChanged = {this.event.grid.onCellValueChanged}\r\n                                onCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n                        />\r\n                        <SubFullPanel>\r\n                            <RFloatArea>\r\n                                <Button id='btnNewSmlCode' value='행추가' onClick={this.event.button.onClick} mr ='5px'/>\r\n                                <Button id='btnDelSmlCode' value='행삭제' onClick={this.event.button.onClick} mr ='5px'/>\r\n                                <Button id='btnSaveSmlCode' value='저장' onClick={this.event.button.onClick}/>\r\n                            </RFloatArea>\r\n                        </SubFullPanel>\r\n                    </ComponentPanel>\r\n                </FlexPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, RFloatArea, ComponentPanel, Textfield, Table, Grid, Selectbox} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\n// SYS020000 : 메뉴 권한 관리 화면\r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mode : {\r\n                transaction : 'u',\r\n                update : 'u',\r\n                create : 'c'\r\n            },\r\n            srchParam : {\r\n                MENU_ID : '',\r\n                MENU_NM : '',\r\n                USE_YN : ''\r\n            },\r\n            dsMenuInfo : [], \r\n            dsModifyInfo : { MENU_ID : '', MENU_NM : '', SORT_ORD : '', MENU_TYPE : '', PARN_MENU_ID : '' , PRG_PATH : '', USE_YN : '' }\r\n        }\r\n        this.event.select.onChange      = this.event.select.onChange.bind(this);\r\n        this.event.input.onChange       = this.event.input.onChange.bind(this);\r\n        this.event.button.onClick       = this.event.button.onClick.bind(this);\r\n        this.event.grid.onChange        = this.event.grid.onChange.bind(this);\r\n        this.event.grid.onRowClicked    = this.event.grid.onRowClicked.bind(this);\r\n        this.event.grid.onRowDbClick    = this.event.grid.onRowDbClick.bind(this);\r\n        this.event.grid.onCellClick     = this.event.grid.onCellClick.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount() {\r\n        this.transaction('SYS020000_R01');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SYS020000_R01' :\r\n                this.transaction('SYS020000_R01');\r\n                break;\r\n            case 'SYS020000_U01' :\r\n                if (StrLib.isNull(this.state.dsModifyInfo.MENU_ID)) {\r\n                    ComLib.openDialog('A', '메뉴 ID를 입력해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.MENU_NM)) {\r\n                    ComLib.openDialog('A', '메뉴명을 입력해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.SORT_ORD)) {\r\n                    ComLib.openDialog('A', '정렬순서를 입력해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.MENU_TYPE)) {\r\n                    ComLib.openDialog('A', '메뉴종류를 선택해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.USE_YN)) {\r\n                    ComLib.openDialog('A', '사용여부를 선택해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 메뉴정보 조회\r\n                case 'SYS020000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getMenuInfo\",\r\n                        datasetsend:\"dsSrchMenuInfo\",\r\n                        datasetrecv:\"dsMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchMenuInfo', [{ MENU_ID : this.state.srchParam.MENU_ID, MENU_NM: this.state.srchParam.MENU_NM, USE_YN: this.state.srchParam.USE_YN}]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 메뉴 등록\r\n                case 'SYS020000_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_insertMenuInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n\r\n                // 메뉴 수정\r\n                case 'SYS020000_U01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.update,\r\n                        sqlmapid:\"SYS.U_updateMenuInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n                    \r\n                // 메뉴 삭제\r\n                case 'SYS020000_D01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.destroy,\r\n                        sqlmapid:\"SYS.D_deleteMenuInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n                default : break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SYS020000_R01' : \r\n                this.setState({\r\n                        ...this.state,\r\n                        dsMenuInfo : res.data.dsMenuInfo,\r\n                        dsModifyInfo : {MENU_ID : '', MENU_NM : '', SORT_ORD : '', MENU_TYPE : '', PARN_MENU_ID : '' , PRG_PATH : '', USE_YN : ''}\r\n                });\r\n                break;\r\n            case 'SYS020000_C01' : \r\n            case 'SYS020000_U01' : \r\n            case 'SYS020000_D01' : \r\n                this.transaction('SYS020000_R01');\r\n                break;\r\n            default :  break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnSrchMenu' :\r\n                        if (this.validation('SYS020000_R01')) {\r\n                            this.transaction('SYS020000_R01');\r\n                        }\r\n                        break;\r\n                    case 'btnNewMenu' :\r\n                        this.refs.grdMenuInfo.deselectAll();\r\n                        this.setState({\r\n                            ...this.state,\r\n                            dsModifyInfo : { MENU_ID : '', MENU_NM : '', SORT_ORD : '', MENU_TYPE : '', PARN_MENU_ID : '' , PRG_PATH : '', USE_YN : 'Y'},\r\n                            mode : { ...this.state.mode, transaction : this.state.mode.create }\r\n                        });\r\n                        break;\r\n                    case 'btnSaveMenu' :\r\n                        if (this.validation('SYS020000_U01')) {\r\n                            if (this.state.mode.transaction === this.state.mode.create) {\r\n                                this.transaction('SYS020000_C01');\r\n                            } else {\r\n                                this.transaction('SYS020000_U01');\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'btnDelMenu' :\r\n                        if (StrLib.isNull(this.refs.grdMenuInfo.getSelectedRowIndex())) {\r\n                            ComLib.openDialog('A', '선택된 행이 없습니다.');\r\n                            return false;\r\n                        } else {\r\n                            ComLib.openDialog('C', '삭제하시겠습니까?', foo => { if (foo === true) this.transaction('SYS020000_D01'); });\r\n                        }\r\n                        break;\r\n                    default : \r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'iptSrchMenuId'        : this.setState({...this.state, srchParam : { ...this.state.srchParam, MENU_ID : e.target.value}}); break;\r\n                    case 'iptSrchMenuNm'        : this.setState({...this.state, srchParam : { ...this.state.srchParam, MENU_NM : e.target.value}}); break;\r\n                    case 'iptModifyMenuId'      : this.setState({...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, MENU_ID : e.target.value}}); break;\r\n                    case 'iptModifyMenuNm'      : this.setState({...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, MENU_NM : e.target.value}}); break;\r\n                    case 'iptModifyMenuOrder'   : this.setState({...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, SORT_ORD : e.target.value}}); break;\r\n                    case 'iptModifyParnMenuId'  : this.setState({...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, PARN_MENU_ID : e.target.value}}); break;\r\n                    case 'iptModifyPrgPath'     : this.setState({...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, PRG_PATH : e.target.value}}); break;\r\n                    default :  break;\r\n                }\r\n            }\r\n        },\r\n        select : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'selSrchMenuUesYn'     : this.setState({ ...this.state, srchParam : { ...this.state.srchParam, USE_YN : e.target.value}}); break;\r\n                    case 'selModifyMenuType'    : this.setState({ ...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, MENU_TYPE : e.target.value}}); \r\n                        console.log(e.target.value);\r\n                    break;\r\n                    case 'selModifyMenuUseYn'   : this.setState({ ...this.state, dsModifyInfo : { ...this.state.dsModifyInfo, USE_YN : e.target.value}}); break;\r\n                    default : \r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        grid : {\r\n            onChange : (e) => {\r\n\r\n            },\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdMenuInfo' :\r\n                        this.setState({\r\n                            ...this.state,\r\n                            dsModifyInfo : Object.assign({}, this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsMenuInfo)),\r\n                            mode : { ...this.state.mode, transaction : this.state.mode.update }\r\n                        });\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onRowDbClick : (e) => {\r\n                \r\n            },\r\n            onCellClick : (e) => {\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    <Table  id=\"tblMenuInfo\" colGrp = {[{width: '8%'}, {width: '32%'}, {width: '8%'}, {width: '32%'}, {width: '8%'}, {width: '8%'}, {width: '4%'}]}\r\n                            tbData = {[\r\n                                [   {type : 'T', value : '메뉴 ID'},\r\n                                    {type : 'D', value : <Textfield id='iptSrchMenuId' value={this.state.srchParam.MENU_ID} onChange = {this.event.input.onChange}/>}, \r\n                                    {type : 'T', value : '메뉴명'},\r\n                                    {type : 'D', value : <Textfield id='iptSrchMenuNm' value={this.state.srchParam.MENU_NM} onChange = {this.event.input.onChange}/>},\r\n                                    {type : 'T', value : '사용여부'},\r\n                                    {type : 'D', value : <Selectbox id='selSrchMenuUesYn' value={this.state.srchParam.USE_YN} options = {ComLib.getCommCodeOptions('101')} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'D', value : <Button id=\"btnSrchMenu\" value=\"조회\" onClick={this.event.button.onClick}></Button>}\r\n                                ],\r\n                            ]}\r\n                    />\r\n                </ComponentPanel>\r\n                <ComponentPanel>\r\n                    <Grid   id = 'grdMenuInfo' ref='grdMenuInfo' height= \"540px\"\r\n                            header = {[\r\n                                {   headerName : '메뉴코드'    , field : 'MENU_ID',        colId : 'MENU_ID'       },\r\n                                {   headerName : '메뉴종류'    , field : 'MENU_TYPE',      colId : 'MENU_TYPE',\r\n                                    cellEditor: 'agSelectCellEditor', \r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('104') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '104')     },\r\n                                {   headerName : '메뉴명'      , field : 'MENU_NM',        colId : 'MENU_NM'       },\r\n                                {   headerName : '상위메뉴'    , field : 'PARN_MENU_ID',   colId : 'PARN_MENU_ID'  },\r\n                                {   headerName : '프로그램경로', field : 'PRG_PATH',       colId : 'PRG_PATH'      },\r\n                                {   headerName : '정렬순서'    , field : 'SORT_ORD',       colId : 'SORT_ORD'      },\r\n                                {   headerName : '사용여부'    , field : 'USE_YN',         colId : 'USE_YN',       \r\n                                    cellEditor: 'agSelectCellEditor', \r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('101') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '101')     }\r\n                            ]}\r\n                            data = {this.state.dsMenuInfo}\r\n                            onRowClicked = {this.event.grid.onRowClicked}\r\n                    />\r\n                </ComponentPanel>\r\n                <ComponentPanel>\r\n                    <Table  id=\"tblMenuDeetInfo\" colGrp = {[{width: '8%'}, {width: '17%'}, {width: '8%'}, {width: '17%'}, {width: '8%'}, {width: '17%'}, {width: '8%'}, {width: '17%'}]}\r\n                            tbData = {[\r\n                                [   {type : 'T', value : '메뉴 ID'},\r\n                                    {type : 'D', value : <Textfield id='iptModifyMenuId' value={this.state.dsModifyInfo.MENU_ID} onChange = {this.event.input.onChange}/>}, \r\n                                    {type : 'T', value : '메뉴명'},\r\n                                    {type : 'D', value : <Textfield id='iptModifyMenuNm' value={this.state.dsModifyInfo.MENU_NM} onChange = {this.event.input.onChange}/>},\r\n                                    {type : 'T', value : '정렬순서'},\r\n                                    {type : 'D', value : <Textfield id='iptModifyMenuOrder' value={this.state.dsModifyInfo.SORT_ORD} onChange = {this.event.input.onChange}/>},\r\n                                    {type : 'T', value : '메뉴타입'},\r\n                                    {type : 'D', value : <Selectbox id='selModifyMenuType' value={this.state.dsModifyInfo.MENU_TYPE} options = {ComLib.getCommCodeOptions('104', 'C')} onChange={this.event.select.onChange}/>},\r\n                                ],\r\n                                [   {type : 'T', value : '상위메뉴'},\r\n                                    {type : 'D', value : <Textfield id='iptModifyParnMenuId' value={this.state.dsModifyInfo.PARN_MENU_ID} onChange = {this.event.input.onChange}/>}, \r\n                                    {type : 'T', value : '메뉴경로'}, \r\n                                    {type : 'D', value : <Textfield id='iptModifyPrgPath' value={this.state.dsModifyInfo.PRG_PATH} onChange = {this.event.input.onChange}/>, colSpan: 3},\r\n                                    {type : 'T', value : '사용여부'},\r\n                                    {type : 'D', value : <Selectbox id='selModifyMenuUseYn' value = {this.state.dsModifyInfo.USE_YN} options = {ComLib.getCommCodeOptions('101', 'C')} onChange={this.event.select.onChange}/>},\r\n                                ]\r\n                            ]}\r\n                    />\r\n                    <SubFullPanel height='20px'>\r\n                        <RFloatArea>\r\n                            <Button id='btnNewMenu' value='신규' onClick={this.event.button.onClick} mr ='5px'/>\r\n                            <Button id='btnSaveMenu' value='저장' onClick={this.event.button.onClick} mr ='5px'/>\r\n                            <Button id='btnDelMenu' value='삭제' onClick={this.event.button.onClick}/>\r\n                        </RFloatArea>\r\n                    </SubFullPanel>\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, FullPanel, RFloatArea, ComponentPanel, Radio, CentListSelectBox, TeamListSelectBox, Table, Grid, Tabs, TabPanel} from 'components';\r\nimport {ComLib, StrLib, TransManager} from 'common';\r\n\r\n// SYS010000 : 기준값 관리 화면\r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            srchParam : '',\r\n            srchParamUserMenu: {\r\n                CENT_CD : '',\r\n                TEAM_CD : ''\r\n            },\r\n            selectedTab : 0,\r\n            dsCentInfo : [],\r\n            dsAuthInfo : [],\r\n            dsUserInfo : [],\r\n            dsMenuAuthInfo : [],\r\n            dsModifyInfo : [],\r\n            dsMulUserInfo : [],\r\n            dsSrchCondInfo : [],\r\n            type : 'single'\r\n        }\r\n        this.event.tab.onClick          = this.event.tab.onClick.bind(this);\r\n        this.event.select.onChange      = this.event.select.onChange.bind(this);\r\n        this.event.button.onClick       = this.event.button.onClick.bind(this);\r\n        this.event.grid.onRowClicked    = this.event.grid.onRowClicked.bind(this);\r\n        this.event.grid.onCellClick    = this.event.grid.onCellClick.bind(this);\r\n        this.event.grid.onSelectionChanged    = this.event.grid.onSelectionChanged.bind(this);\r\n        this.event.grid.onRowSelected    = this.event.grid.onRowSelected.bind(this);\r\n        this.event.radio.onChange       =   this.event.radio.onChange.bind(this);\r\n    }\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n        this.transaction('SYS030000_R01');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            case 'SYS030000_R01' :\r\n                this.transaction('SYS030000_R01');\r\n                break;\r\n            case 'SYS030000_C01' :\r\n                if (StrLib.isNull(this.refs.grdCentInfo.getSelectedRowIndex())) {\r\n                    ComLib.openDialog('A', '선택된 센터가 없습니다.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 'SYS030000_C02' :\r\n                if (StrLib.isNull(this.refs.grdAuthInfo.getSelectedRowIndex())) {\r\n                    ComLib.openDialog('A', '선택된 권한이 없습니다.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 'SYS030000_C03' :\r\n                if (this.state.type === 'single') {\r\n                    if (StrLib.isNull(this.refs.grdUserInfo.getSelectedRowIndex())) {\r\n                        ComLib.openDialog('A', '선택된 사용자가 없습니다.');\r\n                        return false;\r\n                    }\r\n                } else {\r\n                    if (this.state.dsMulUserInfo.length === 0) {\r\n                        ComLib.openDialog('A', '추가된 사용자가 없습니다.');\r\n                        return false;\r\n                    }\r\n                    if (StrLib.isNull(this.refs.grdMulUserInfo.getSelectedRowIndex())) {\r\n                        ComLib.openDialog('A', '선택된 사용자가 없습니다.');\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 센터 정보 조회\r\n                case 'SYS030000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getCentInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsCentInfo\"\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getMenuAuthInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsCentMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y', CENT_CD : '' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 권한 정보 조회\r\n                case 'SYS030000_R02' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getAuthInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsAuthInfo\"\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getMenuAuthInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsAuthMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y', AUTH_LV : '' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 사용자 정보 조회\r\n                case 'SYS030000_R03' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getUserInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsUserInfo\"\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getMenuAuthInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsUserMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ CENT_CD : '', TEAM_CD : '', USR_CD : ''}]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 센터 별 메뉴 권한 조회\r\n                case 'SYS030000_R04' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getCentMenuInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsCentMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.state.srchParam }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 권한별 별 메뉴 권한 조회\r\n                case 'SYS030000_R05' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getAuthMenuInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsAuthMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ AUTH_LV : this.state.srchParam }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 사용자 별 메뉴 권한 조회\r\n                case 'SYS030000_R06' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getUserMenuInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                        datasetrecv:\"dsUserMenuInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ USR_CD : this.state.srchParam }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 센터별 메뉴 권한 변경\r\n                case 'SYS030000_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.D_deleteCentMenuInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_insertCentMenuInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.state.srchParam }]);\r\n                    transManager.addDataset('dsModifyInfo', this.state.dsModifyInfo);\r\n                    transManager.agent();\r\n                    break;\r\n                // 권한별 메뉴 권한 변경\r\n                case 'SYS030000_C02' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.D_deleteAuthMenuInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_insertAuthMenuInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsSrchParamInfo', [{ AUTH_LV : this.state.srchParam }]);\r\n                    transManager.addDataset('dsModifyInfo', this.state.dsModifyInfo);\r\n                    transManager.agent();\r\n                    break;\r\n                // 사용자별 메뉴 권한 변경\r\n                case 'SYS030000_C03' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.D_deleteUserMenuInfo\",\r\n                        datasetsend:\"dsSrchParamInfo\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_insertUserMenuInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    if (this.state.type === 'single') {\r\n                        transManager.addDataset('dsSrchParamInfo', [{ CENT_CD : '', USR_CD : this.state.srchParam }]);\r\n                    } else {\r\n                        transManager.addDataset('dsSrchParamInfo', this.refs.grdMulUserInfo.getSelectedRows());\r\n                    }\r\n                    transManager.addDataset('dsModifyInfo', this.state.dsModifyInfo);\r\n                    transManager.agent();\r\n                    break;\r\n                default : break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SYS030000_R01' : this.setState({...this.state, dsCentInfo : res.data.dsCentInfo , dsMenuAuthInfo : res.data.dsCentMenuInfo}, () => { this.refs.grdAuthMenuInfo.state.gridApi.deselectAll();}); break;\r\n            case 'SYS030000_R02' : this.setState({...this.state, dsAuthInfo : res.data.dsAuthInfo , dsMenuAuthInfo : res.data.dsAuthMenuInfo}, () => { this.refs.grdAuthMenuInfo.state.gridApi.deselectAll();}); break;\r\n            case 'SYS030000_R03' : this.setState({...this.state, dsUserInfo: res.data.dsUserInfo, dsMenuAuthInfo : res.data.dsUserMenuInfo}, () => { this.refs.grdAuthMenuInfo.state.gridApi.deselectAll();}); break;\r\n            case 'SYS030000_R04' :\r\n                this.setState({...this.state, dsMenuAuthInfo : res.data.dsCentMenuInfo, dsModifyInfo: []}, () => {\r\n                    this.refs.grdAuthMenuInfo.state.gridApi.forEachNode((node, index) => { if (node.data.CHK === 'Y') { node.setSelected(true); }})}\r\n                ); \r\n                break;\r\n            case 'SYS030000_R05' :\r\n                this.setState({...this.state, dsMenuAuthInfo : res.data.dsAuthMenuInfo, dsModifyInfo: []}, () => {\r\n                    this.refs.grdAuthMenuInfo.state.gridApi.forEachNode((node, index) => { if (node.data.CHK === 'Y') { node.setSelected(true); }})}\r\n                );\r\n                break;\r\n            case 'SYS030000_R06' :\r\n                this.setState({...this.state, dsMenuAuthInfo : res.data.dsUserMenuInfo, dsModifyInfo: []}, () => {\r\n                    this.refs.grdAuthMenuInfo.state.gridApi.forEachNode((node, index) => { if (node.data.CHK === 'Y') { node.setSelected(true); }})}\r\n                );\r\n                break;\r\n            case 'SYS030000_C01' : this.transaction('SYS030000_R04'); break;\r\n            case 'SYS030000_C02' : this.transaction('SYS030000_R05'); break;\r\n            case 'SYS030000_C03' : (this.state.type === 'single') ? this.transaction('SYS030000_R06') : this.transaction('SYS030000_R06'); break;\r\n            default :  break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        tab : {\r\n            onClick : (index) => {\r\n                this.setState({...this.state, selectedTab : index, type: 'single'}, () => {\r\n                    switch (index) {\r\n                        case 0 : this.transaction('SYS030000_R01'); break; \r\n                        case 1 : this.transaction('SYS030000_R02'); break;\r\n                        case 2 : this.refs.grdAuthMenuInfo.state.gridApi.deselectAll(); break;\r\n                        default : break;\r\n                    }\r\n                });\r\n            }\r\n        },\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnSaveAuthMenu' :\r\n                        switch (this.state.selectedTab) {\r\n                            case 0 : \r\n                                if (this.validation('SYS030000_C01')) { \r\n                                    this.setState({...this.state, dsModifyInfo : this.refs.grdAuthMenuInfo.getDeSelectedRows()}, ()=> this.transaction('SYS030000_C01'));\r\n                                }\r\n                                break;\r\n                            case 1 :\r\n                                if (this.validation('SYS030000_C02')) {\r\n                                    this.setState({...this.state, dsModifyInfo : this.refs.grdAuthMenuInfo.getDeSelectedRows()}, ()=> this.transaction('SYS030000_C02'));\r\n                                }\r\n                                break;\r\n                            case 2 :\r\n                                if (this.validation('SYS030000_C03')) {\r\n                                    let menuInfo = this.refs.grdAuthMenuInfo.getSelectedRows();\r\n                                    if (this.state.type === 'single') {\r\n                                        this.setState({...this.state, dsModifyInfo : menuInfo}, ()=> this.transaction('SYS030000_C03'));\r\n                                    } else {\r\n                                        let rtnVal = [];\r\n                                        for (let intA = 0; intA < menuInfo.length; intA++) {\r\n                                            for (let intB = 0; intB < this.refs.grdMulUserInfo.getSelectedRows().length; intB++) {\r\n                                                rtnVal.push({USR_CD : this.refs.grdMulUserInfo.getSelectedRows()[intB]['USR_CD'], MENU_ID : menuInfo[intA]['MENU_ID']});\r\n                                                console.log(rtnVal);\r\n                                            }\r\n                                        }\r\n                                        console.log(rtnVal);\r\n                                        this.setState({ ...this.state ,   dsModifyInfo :  rtnVal }, ()=> this.transaction('SYS030000_C03'));\r\n                                        \r\n                                    }\r\n                                }\r\n                                break;\r\n                            default : break;\r\n                        }\r\n                        break;\r\n                    case 'btnSrchSnglUser' : this.transaction('SYS030000_R03'); break;\r\n                    case 'btnSrchApplyUser' :\r\n                        let option = { width: '800px', height: '700px'}\r\n                        ComLib.openPop('SYS030001', '조건검색', 'modal', option, this.handler.addUser);\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'iptSrchName' :\r\n\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        grid : {\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdCentInfo' : this.setState({ ...this.state, srchParam : e.data.CENT_CD }, () => this.transaction('SYS030000_R04')); break;\r\n                    case 'grdAuthInfo' : this.setState({ ...this.state, srchParam : e.data.AUTH_LV }, () => this.transaction('SYS030000_R05')); break;\r\n                    case 'grdUserInfo' : this.setState({ ...this.state, srchParam : e.data.USR_CD }, () => this.transaction('SYS030000_R06')); break;\r\n                    case 'grdAuthMenuInfo' : this.refs.grdAuthMenuInfo.state.gridApi.getRowNode(e.index).setSelected(!this.refs.grdAuthMenuInfo.state.gridApi.getRowNode(e.index).isSelected()); break;\r\n                    case 'grdMulUserInfo' : this.refs.grdMulUserInfo.state.gridApi.getRowNode(e.index).setSelected(!this.refs.grdMulUserInfo.state.gridApi.getRowNode(e.index).isSelected()); break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onSelectionChanged : (e) => {\r\n            },\r\n            onRowSelected : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdAuthMenuInfo' :\r\n                        let api = this.refs.grdAuthMenuInfo.state.gridApi;\r\n                        if (!StrLib.isNull(e.data.PARN_MENU_ID) ) {\r\n                            if (api.getRowNode(e.index).isSelected()) {\r\n                                api.forEachNode((node, index) => { if (node.data.MENU_ID === e.data.PARN_MENU_ID) { node.setSelected(true); }});\r\n                            } else {\r\n                                // 대메뉴에 대하여 선택된 소메뉴가 없을 시, 대메뉴 체크 해제\r\n                                let cnt = 0;\r\n                                api.forEachNode((node, index) => {\r\n                                    if (node.data.PARN_MENU_ID === e.data.PARN_MENU_ID) { if (node.isSelected()) { cnt++; } }\r\n                                });\r\n                                if (cnt === 0) {\r\n                                    api.forEachNode((node, index) => { if (node.data.MENU_ID === e.data.PARN_MENU_ID) { node.setSelected(false); }});\r\n                                }\r\n\r\n                            }\r\n                        } else {\r\n                            if (!api.getRowNode(e.index).isSelected()) {\r\n                                api.forEachNode((node, index) => { if (node.data.PARN_MENU_ID === e.data.MENU_ID) { node.setSelected(false); }});\r\n                            } else {\r\n                                let cnt = 0;\r\n                                api.forEachNode((node, index) => {\r\n                                    if (node.data.PARN_MENU_ID === e.data.MENU_ID) { if (node.isSelected()) { cnt++; } }\r\n                                });\r\n                                if (cnt === 0) {\r\n                                    api.forEachNode((node, index) => { if (node.data.PARN_MENU_ID === e.data.MENU_ID) { node.setSelected(true); }});\r\n                                }\r\n                                \r\n                            }\r\n                        }\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onCellClick : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdCentInfo' : break;\r\n                    case 'grdAuthInfo' : break;\r\n                    case 'grdUserInfo' : break;\r\n                    case 'grdAuthMenuInfo' :\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        select : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case  'selSrchUserList' :\r\n                        break;\r\n                    case  'selSrchCentCd' : this.setState({ ...this.state, srchParamUserMenu: { CENT_CD: e.target.value, TEAM_CD : ''}}); break;\r\n                    case  'selSrchTeamCd' : this.setState({ ...this.state, srchParamUserMenu: {...this.state.srchParamUserMenu, TEAM_CD: e.target.value}}); break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        radio : {\r\n            onChange : (e) => {\r\n                switch (e.id) {\r\n                    case  'rdoType' : \r\n                        if (e.value === 'single') {\r\n                            this.setState({...this.state, type : e.value, dsMulUserInfo : []}, () => this.refs.grdAuthMenuInfo.state.gridApi.deselectAll());\r\n                        } else {\r\n                            this.setState({...this.state, type : e.value, dsUserInfo : []}, () => this.refs.grdAuthMenuInfo.state.gridApi.deselectAll());\r\n                        }\r\n                        \r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    handler = {\r\n        addUser : (data) => {\r\n            let preUserList = this.state.dsMulUserInfo;\r\n            preUserList = preUserList.concat(data);\r\n            preUserList = Array.from(new Set(preUserList));\r\n\r\n            this.setState({...this.state, dsMulUserInfo : preUserList});\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <FlexPanel>\r\n                    <ComponentPanel width=\"80%\">\r\n                        <Tabs tabWidth='100px' height = '680px' onClick = {this.event.tab.onClick}>\r\n                            <TabPanel index={0} label=\"센터별\">\r\n                                <FullPanel>\r\n                                    <Grid   id ='grdCentInfo' ref='grdCentInfo' height=\"682px\"\r\n                                            header = {[\r\n                                                {headerName : '센터코드', field : 'CENT_CD',  colId : 'CENT_CD',   width: 130 },\r\n                                                {headerName : '센터명'  , field : 'CENT_NM',  colId : 'CENT_NM',   width: 280,}\r\n                                            ]}\r\n                                            data = {this.state.dsCentInfo}\r\n                                            onRowClicked = {this.event.grid.onRowClicked}\r\n                                    />\r\n                                </FullPanel>\r\n                            </TabPanel>\r\n                            <TabPanel index={1} label=\"권한별\">\r\n                                <FullPanel>\r\n                                    <Grid   id ='grdAuthInfo' ref='grdAuthInfo' height=\"682px\"\r\n                                            header = {[\r\n                                                {headerName : '권한레벨', field : 'AUTH_LV',    colId : 'AUTH_LV',      width: 130 },\r\n                                                {headerName : '권한명'  , field : 'AUTH_LV_NM', colId : 'AUTH_LV_NM',   width: 280,}\r\n                                            ]}\r\n                                            data = {this.state.dsAuthInfo}\r\n                                            onRowClicked = {this.event.grid.onRowClicked}\r\n                                    />\r\n                                </FullPanel>\r\n                            </TabPanel>\r\n                            <TabPanel index={2} label=\"사용자별\">\r\n                                <SubFullPanel>\r\n                                    <FlexPanel>\r\n                                        <Radio width=\"150px\" name=\"rdoType\" options = {{id: ['single', 'multiple'], value: ['단건적용', '다수적용']}} checked = 'single' onChange = {this.event.radio.onChange}></Radio>\r\n                                        {\r\n                                            (this.state.type === 'single') \r\n                                            ? <Button ml='5px' id=\"btnSrchSnglUser\" value=\"조회\" onClick={this.event.button.onClick}></Button>\r\n                                            : <Button ml=\"5px\" id=\"btnSrchApplyUser\" value=\"적용대상조회\" onClick={this.event.button.onClick}></Button>}\r\n                                    </FlexPanel>\r\n                                    {\r\n                                        (this.state.type === 'single')\r\n                                            ?   <SubFullPanel>\r\n                                                    <Table  id=\"tblSrchUsrMenuInfo\" colGrp = {[{width: '20%'}, {width: '80%'}]}\r\n                                                            tbData = {[\r\n                                                                [   {type : 'T', value : '센터'},\r\n                                                                    {type : 'D', value : <CentListSelectBox id='selSrchCentCd' value={this.state.srchParamUserMenu.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                                                    \r\n                                                                ],\r\n                                                                [\r\n                                                                    {type : 'T', value : '팀'},\r\n                                                                    {type : 'D', value : <TeamListSelectBox id='selSrchTeamCd' value={this.state.srchParamUserMenu.TEAM_CD} centCd={this.state.srchParamUserMenu.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                                                ]\r\n                                                            ]}\r\n                                                    />\r\n                                                </SubFullPanel>\r\n                                            :   null\r\n                                    }\r\n                                </SubFullPanel>\r\n                                <SubFullPanel>\r\n                                {\r\n                                    (this.state.type === 'single')\r\n                                    ?   <SubFullPanel>\r\n                                            <Grid   id ='grdUserInfo' ref='grdUserInfo' height=\"580px\"\r\n                                                    header = {[\r\n                                                        {headerName : '사용자코드', field : 'USR_CD', colId : 'USR_CD',   width: 130 },\r\n                                                        {headerName : '사용자명'  , field : 'USR_NM', colId : 'USR_NM',   width: 280,}\r\n                                                    ]}\r\n                                                    data = {this.state.dsUserInfo}\r\n                                                    onRowClicked = {this.event.grid.onRowClicked}\r\n                                            />\r\n                                        </SubFullPanel>\r\n                                    :   <SubFullPanel>\r\n                                            <Grid  id ='grdMulUserInfo' ref='grdMulUserInfo' height=\"650px\" rowSelection = 'multiple' suppressRowClickSelection = {true}\r\n                                                    header = {[\r\n                                                        { headerName : '확인'        , field : 'AUTH_LV',    colId : 'AUTH_LV',  width: 130 , headerCheckboxSelection: true, checkboxSelection: true  },\r\n                                                        { headerName : '센터'        , field : 'CENT_CD',    colId : 'CENT_CD',  width: 130 },\r\n                                                        { headerName : '권한'        , field : 'AUTH_LV',    colId : 'AUTH_LV',  width: 130 },\r\n                                                        { headerName : '사용자코드'  , field : 'USR_CD',     colId : 'USR_CD',   width: 130 },\r\n                                                        { headerName : '사용자명'    , field : 'USR_NM',     colId : 'USR_NM',   width: 130 },\r\n                                                    ]}\r\n                                                    data = {this.state.dsMulUserInfo}\r\n                                                    onRowClicked = {this.event.grid.onRowClicked}\r\n                                            />\r\n                                        </SubFullPanel>\r\n                                    \r\n                                }\r\n                                </SubFullPanel>\r\n                            </TabPanel>\r\n                        </Tabs>\r\n                    </ComponentPanel>\r\n                    <ComponentPanel>\r\n                        <Grid   id ='grdAuthMenuInfo' ref='grdAuthMenuInfo' height=\"700px\" rowSelection = 'multiple'\r\n                                suppressRowClickSelection = {true}\r\n                                header = {[\r\n                                    {headerName : '메뉴ID', field : 'MENU_ID', colId : 'MENU_ID',   width: 130,    headerCheckboxSelection: true, checkboxSelection: true },\r\n                                    {headerName : '메뉴명', field : 'MENU_NM', colId : 'MENU_NM',   width: 500,}\r\n                                ]}\r\n                                data = { this.state.dsMenuAuthInfo }\r\n                                onRowClicked = {this.event.grid.onRowClicked}\r\n                                onCellClick = {this.event.grid.onCellClick}\r\n                                onSelectionChanged = {this.event.grid.onSelectionChanged}\r\n                                onRowSelected = {this.event.grid.onRowSelected}\r\n                        />\r\n                        <SubFullPanel>\r\n                            <RFloatArea>\r\n                                <Button id='btnSaveAuthMenu' value='저장' onClick={this.event.button.onClick}/>\r\n                            </RFloatArea>\r\n                        </SubFullPanel>\r\n                    </ComponentPanel>\r\n                </FlexPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default View;","import React from 'react';\r\nimport {ComponentPanel, Tabs, TabPanel} from 'components';\r\nimport {ComLib} from 'common';\r\n\r\n// SYS010000 : 기준값 관리 화면\r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.event.tab.onClick          = this.event.tab.onClick.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        // switch (id) {\r\n        //     default :\r\n        //         break;\r\n        // }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        // console.log('transaction');\r\n        // let transManager = new TransManager();\r\n        // try  {\r\n        //     switch (transId) {\r\n        //         default : break;\r\n        //     }\r\n        // } catch (err) {\r\n        //     console.log(err);\r\n        //     alert(err);\r\n        // }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        //  switch (res.id) {\r\n        //     default : break;\r\n        // }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        tab : {\r\n            onClick : (index) => {\r\n                //console.log(index);\r\n                switch (index) {\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        console.log(ComLib.getTabList('SYS040000'));\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    <Tabs tabWidth='100px' height = '680px' onClick = {this.event.tab.onClick}>\r\n                        {\r\n                            ComLib.getTabList('SYS040000').map((item, index) => {\r\n                                return (\r\n                                    <TabPanel key={item.id + index} id = {item.id} index={index} label={item.label}>\r\n                                        <item.component/>\r\n                                    </TabPanel>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Tabs>\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, RFloatArea, ComponentPanel, Textfield, Table, Grid, Selectbox, CentListSelectBox, TeamListSelectBox} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\n// SYS050000 : 사용자 관리 화면\r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mode : {\r\n                transaction : 'u',\r\n                update : 'u',\r\n                create : 'c'\r\n            },\r\n            srchParam : {\r\n                CENT_CD : '',\r\n                TEAM_CD : '',\r\n                USR_DV : '',\r\n                USR_PARAM : '',\r\n                USE_YN : '',\r\n    \r\n            },\r\n            dsUserInfo : [],\r\n            dsModifyInfo : { USR_CD: '', USR_NM : '', CENT_CD : '', TEAM_CD: '', USE_YN: '', BAS_ADDR : '', ADD_ADDR : '', AUTH_LV : '', TEL_NO: '', REG_USR : '', MFY_ER : '' }\r\n        }\r\n        this.event.select.onChange      = this.event.select.onChange.bind(this);\r\n        this.event.input.onChange       = this.event.input.onChange.bind(this);\r\n        this.event.button.onClick       = this.event.button.onClick.bind(this);\r\n        // this.event.grid.onChange        = this.event.grid.onChange.bind(this);\r\n        this.event.grid.onRowClicked    = this.event.grid.onRowClicked.bind(this);\r\n        // this.event.grid.onRowDbClick    = this.event.grid.onRowDbClick.bind(this);\r\n        // this.event.grid.onCellClick     = this.event.grid.onCellClick.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SYS050000_R01' :\r\n                if (!StrLib.isNull(this.state.srchParam.USR_DV)) {\r\n                    if (this.state.srchParam.USR_DV === 'CD') {\r\n                        if (StrLib.isNull(this.state.srchParam.USR_PARAM)) {\r\n                            ComLib.openDialog('A', '사용자 코드를 입력해 주시기 바랍니다.');\r\n                            return false;\r\n                        }\r\n                    }\r\n                    if (this.state.srchParam.USR_DV === 'NM') {\r\n                        if (StrLib.isNull(this.state.srchParam.USR_PARAM)) {\r\n                            ComLib.openDialog('A', '사용자 명을 입력해 주시기 바랍니다.');\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n                return true;\r\n            case 'SYS050000_U01' :\r\n                if (StrLib.isNull(this.state.dsModifyInfo.USR_CD)) {\r\n                    ComLib.openDialog('A', '사용자 ID를 입력해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.USR_NM)) {\r\n                    ComLib.openDialog('A', '사용자명을 입력해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.USE_YN)) {\r\n                    ComLib.openDialog('A', '활동여부를 선택해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.CENT_CD)) {\r\n                    ComLib.openDialog('A', '소속센터를 선택해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.TEAM_CD)) {\r\n                    ComLib.openDialog('A', '소속팀을 선택해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.AUTH_LV)) {\r\n                    ComLib.openDialog('A', '권한을 선택해 주시기 바랍니다.');\r\n                    return false;\r\n                }\r\n                this.setState({...this.state, dsModifyInfo: {...this.state.dsModifyInfo, MFY_ER : 'itfact'}});\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 사용자 정보 조회\r\n                case 'SYS050000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getUserListInfo\",\r\n                        datasetsend:\"dsSrchUserInfo\",\r\n                        datasetrecv:\"dsUserInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchUserInfo', [{ \r\n                        CENT_CD : this.state.srchParam.CENT_CD, \r\n                        USR_DV: this.state.srchParam.USR_DV, \r\n                        USR_PARAM: this.state.srchParam.USR_PARAM,\r\n                        USE_YN: this.state.srchParam.USE_YN\r\n                    }]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 사용자 정보 추가\r\n                case 'SYS050000_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_insertUserInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 사용자 정보 수정\r\n                case 'SYS050000_U01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.update,\r\n                        sqlmapid:\"SYS.U_updateUserInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 사용자 정보 삭제\r\n                case 'SYS050000_D01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.destroy,\r\n                        sqlmapid:\"SYS.D_deleteUserInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n                default : break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SYS050000_R01' : \r\n                this.setState({\r\n                        ...this.state,\r\n                        dsUserInfo : res.data.dsUserInfo,\r\n                        dsModifyInfo : { USR_CD: '', USR_NM : '', CENT_CD : '', TEAM_CD : '', USE_YN: '', BAS_ADDR : '', ADD_ADDR : '', AUTH_LV : '', TEL_NO: '', REG_USR : '', MFY_ER : '' }\r\n                });\r\n                break;\r\n            case 'SYS050000_C01' : \r\n            case 'SYS050000_U01' : \r\n            case 'SYS050000_D01' : \r\n                this.transaction('SYS050000_R01');\r\n                break;\r\n            default :  break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnSrchUserInfo' :\r\n                        if (this.validation('SYS050000_R01')) {\r\n                            this.transaction('SYS050000_R01');\r\n                        }\r\n                        break;\r\n                    case 'btnNewUserInfo' :\r\n                        this.refs.grdUserInfo.deselectAll();\r\n                        this.setState({\r\n                            ...this.state,\r\n                            dsModifyInfo : { USR_CD: '', USR_NM : '', CENT_CD : '', TEAM_CD : '', USE_YN: '', BAS_ADDR : '', ADD_ADDR : '', AUTH_LV : '', TEL_NO: '', REG_USR : 'itfact', MFY_ER : 'itfact' },\r\n                            mode : { transaction : this.state.mode.create }\r\n                        });\r\n                        break;\r\n                    case 'btnSaveUserInfo' :\r\n                        if (this.validation('SYS050000_U01')) {\r\n                            if (this.state.mode.transaction === this.state.mode.create) {\r\n                                this.transaction('SYS050000_C01');\r\n                            } else {\r\n                                this.transaction('SYS050000_U01');\r\n                            }\r\n                        }\r\n                        break;\r\n                    case 'btnDelUserInfo' :\r\n                        if (StrLib.isNull(this.refs.grdUserInfo.getSelectedRowIndex())) {\r\n                            ComLib.openDialog('A', '선택된 행이 없습니다.');\r\n                            return false;\r\n                        } else {\r\n                            ComLib.openDialog('C', '삭제하시겠습니까?', foo => { if (foo === true) this.transaction('SYS050000_D01'); });\r\n                        }\r\n                        break;\r\n                    default :  break;\r\n                }\r\n            }\r\n        },\r\n        select : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'selSrchCentCd' : this.setState({ ...this.state, srchParam: {...this.state.srchParam, CENT_CD: e.target.value}}); break;\r\n                    case 'selSrchTeamCd' : this.setState({ ...this.state, srchParam: {...this.state.srchParam, TEAM_CD: e.target.value}}); break;\r\n                    case 'selSrchUsrDv' : this.setState({ ...this.state, srchParam: {...this.state.srchParam, USR_DV : e.target.value}}); break;\r\n                    case 'selSrchPsbYn' : this.setState({ ...this.state, srchParam: {...this.state.srchParam, USE_YN: e.target.value}}); break;\r\n                    case 'selDetailCentCd' : this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, CENT_CD : e.target.value}}); break;\r\n                    case 'selDetailTeamCd' : this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, TEAM_CD : e.target.value}}); break;\r\n                    case 'selDetailBizPsbYn' : this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, USE_YN : e.target.value}}); break;\r\n                    case 'selDetailAuthLv' : this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, AUTH_LV : e.target.value}}); break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'iptSrchUsrParam' : this.setState({ ...this.state, srchParam: {...this.state.srchParam, USR_PARAM: e.target.value}}); break;\r\n                    case 'iptDetailUserId' : this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, USR_CD : e.target.value}}); break;\r\n                    case 'iptDetailUserNm' : this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, USR_NM : e.target.value}}); break;\r\n                    case 'iptDetailBasAddr' : this.setState({ ...this.state, dsModifyInfo:{...this.state.dsModifyInfo, BAS_ADDR : e.target.value}}); break;\r\n                    case 'iptDetailEtcAddr' : this.setState({ ...this.state, dsModifyInfo:{...this.state.dsModifyInfo, ADD_ADDR : e.target.value}}); break;\r\n                    case 'iptDetailTelno' : this.setState({ ...this.state, dsModifyInfo:{...this.state.dsModifyInfo, TEL_NO : e.target.value}}); break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        grid : {\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdUserInfo' :\r\n                        this.setState({ \r\n                            dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsUserInfo)),\r\n                            mode : { transaction : this.state.mode.update }\r\n                        });\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    <Table  id=\"tblMenuInfo\" colGrp = {[{width: '8%'}, {width: '10%'},{width: '8%'}, {width: '10%'}, {width: '8%'}, {width: '8%'}, {width: '28%'}, {width: '8%'}, {width: '8%'}, {width: '4%'}]}\r\n                            tbData = {[\r\n                                [   {type : 'T', value : '센터'},\r\n                                    {type : 'D', value : <CentListSelectBox id='selSrchCentCd' value={this.state.srchParam.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'T', value : '팀'},\r\n                                    {type : 'D', value : <TeamListSelectBox id='selSrchTeamCd' value={this.state.srchParam.TEAM_CD} centCd={this.state.srchParam.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'T', value : '사용자'},\r\n                                    {type : 'D', value : <Selectbox id='selSrchUsrDv' value={this.state.srchParam.USR_DV} options = {ComLib.getCommCodeOptions('102')} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'D', value : <Textfield id='iptSrchUsrParam' value={this.state.srchParam.USR_PARAM} onChange={this.event.input.onChange}/>},\r\n                                    {type : 'T', value : '활동여부'},\r\n                                    {type : 'D', value : <Selectbox id='selSrchPsbYn' value={this.state.srchParam.USE_YN} options = {ComLib.getCommCodeOptions('101')} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'D', value : <Button id=\"btnSrchUserInfo\" value=\"조회\" onClick={this.event.button.onClick} ></Button>}\r\n                                ],\r\n                            ]}\r\n                    />\r\n                </ComponentPanel>\r\n                <ComponentPanel>\r\n                    <Grid   id ='grdUserInfo' ref='grdUserInfo' height=\"515px\"\r\n                            header = {[\r\n                                {headerName : '소속센터'        , field : 'CENT_NM',     colId : 'CENT_NM',     width: 130},\r\n                                {headerName : '소속팀'          , field : 'TEAM_NM',     colId : 'TEAM_NM',     width: 150},\r\n                                {headerName : '사용자코드'      , field : 'USR_CD',      colId : 'USR_CD',      width: 120},\r\n                                {headerName : '사용자명'        , field : 'USR_NM',      colId : 'USR_NM',      width: 120},\r\n                                {headerName : '권한'            , field : 'AUTH_LV',     colId : 'AUTH_LV',     width: 120,\r\n                                 cellEditor: 'agSelectCellEditor', \r\n                                 cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('100') },\r\n                                 valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '100')               },\r\n                                {headerName : '입사일자'        , field : 'JNCO_DT',     colId : 'JNCO_DT',     width: 120},\r\n                                {headerName : '퇴사일자'        , field : 'RETIR_DT',    colId : 'RETIR_DT',    width: 120},\r\n                                {headerName : '로그인초기화'    , field : 'RETIR_DT',    colId : 'RETIR_DT',    width: 120}\r\n                            ]}\r\n                            data = {this.state.dsUserInfo}\r\n                            onRowClicked = {this.event.grid.onRowClicked}\r\n                    />\r\n                </ComponentPanel>\r\n                <ComponentPanel>\r\n                    <Table  id=\"tblMenuDeetInfo\" colGrp = {[{width: '13%'}, {width: '23%'}, {width: '13%'}, {width: '23%'}, {width: '13%'}, {width: '23%'}]}\r\n                            tbData = {[\r\n                                [   {type : 'T', value : '사용자 ID'}, \r\n                                    {type : 'D', value : <Textfield id='iptDetailUserId' value={this.state.dsModifyInfo.USR_CD} onChange={this.event.input.onChange}/>}, \r\n                                    {type : 'T', value : '사용자명'},\r\n                                    {type : 'D', value : <Textfield id='iptDetailUserNm' value={this.state.dsModifyInfo.USR_NM} onChange={this.event.input.onChange}/>},\r\n                                    {type : 'T', value : '활동여부'},\r\n                                    {type : 'D', value : <Selectbox id='selDetailBizPsbYn' options = {ComLib.getCommCodeOptions('101', 'C')} value={this.state.dsModifyInfo.USE_YN} onChange={this.event.select.onChange}/>},\r\n                                ],\r\n                                [\r\n                                    {type : 'T', value : '소속센터'},\r\n                                    {type : 'D', value : <CentListSelectBox id='selDetailCentCd' value={this.state.dsModifyInfo.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'T', value : '소속팀'},\r\n                                    {type : 'D', value : <TeamListSelectBox id='selDetailTeamCd' value={this.state.dsModifyInfo.TEAM_CD} centCd={this.state.dsModifyInfo.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'T', value : '권한'},\r\n                                    {type : 'D', value : <Selectbox id='selDetailAuthLv' options = {ComLib.getCommCodeOptions('100', 'C')} value={this.state.dsModifyInfo.AUTH_LV} onChange={this.event.select.onChange}/>}\r\n                                ],\r\n                                [   {type : 'T', value : '주소'},\r\n                                    {type : 'D', value : <Textfield id='iptDetailBasAddr' value={this.state.dsModifyInfo.BAS_ADDR} onChange={this.event.input.onChange}/>},\r\n                                    {type : 'D', value : <Textfield id='iptDetailEtcAddr' value={this.state.dsModifyInfo.ADD_ADDR} onChange={this.event.input.onChange}/>, colSpan: 2}, \r\n                                    {type : 'T', value : '전화번호'},\r\n                                    {type : 'D', value : <Textfield id='iptDetailTelno' value={this.state.dsModifyInfo.TEL_NO} onChange={this.event.input.onChange}/>},\r\n                                    \r\n                                ]\r\n                            ]}\r\n                    />\r\n                    <SubFullPanel>\r\n                        <RFloatArea>\r\n                            <Button id='btnNewUserInfo' value='신규' onClick={this.event.button.onClick} mr ='5px'/>\r\n                            <Button id='btnSaveUserInfo' value='저장' onClick={this.event.button.onClick} mr ='5px'/>\r\n                            <Button id='btnDelUserInfo' value='삭제' onClick={this.event.button.onClick}/>\r\n                        </RFloatArea>\r\n                    </SubFullPanel>\r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, RFloatArea, FlexPanel, ComponentPanel, InputFileUpload, Textfield, InputCalendar, Table, Grid, CentListSelectBox, Selectbox, RangeInputCalendar, HtmlEditor} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager, DateLib, newScrmObj } from 'common';\r\n\r\n// SYS060000 : 공지 관리 화면\r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mode : {\r\n                transaction : 'u',\r\n                update : 'u',\r\n                create : 'c'\r\n            },\r\n            srchParam : {\r\n                TITLE : '',\r\n                REG_CENT : '',\r\n                SRCH_STRT_DT : DateLib.getToday(),\r\n                SRCH_END_DT : DateLib.getToday(),\r\n                DEL_YN : '',\r\n    \r\n            },\r\n            srchFileParam : '',\r\n            dsNoteInfo : [],\r\n            dsNoteFileInfo : [],\r\n            dsModifyInfo : { BORD_MNG_NO: '', TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', REG_CENT: '', DEL_YN : '', REG_DTM : '', REG_ID : '' , CHG_ID: '', CHG_DTM: ''}\r\n        }\r\n        this.event.select.onChange      = this.event.select.onChange.bind(this);\r\n        this.event.input.onChange       = this.event.input.onChange.bind(this);\r\n        this.event.button.onClick       = this.event.button.onClick.bind(this);\r\n        this.event.grid.onRowClicked    = this.event.grid.onRowClicked.bind(this);\r\n        this.event.upload.handleChangeStatus =  this.event.upload.handleChangeStatus.bind(this);\r\n        this.event.upload.handleSubmit =  this.event.upload.handleSubmit.bind(this);\r\n        this.event.grid.onDeleteRow = this.event.grid.onDeleteRow.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n        this.transaction('SYS060000_R01');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SYS060000_R01' :\r\n                if (StrLib.isNull(this.state.srchParam.SRCH_STRT_DT)) {\r\n                    ComLib.openDialog('A', '시작일을 입력하세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.srchParam.SRCH_END_DT)) {\r\n                    ComLib.openDialog('A', '종료일을 입력하세요.');\r\n                    return false;\r\n                }\r\n                if (this.state.srchParam.SRCH_STRT_DT > this.state.srchParam.SRCH_END_DT) {\r\n                    ComLib.openDialog('A', '시작일이 종료일보다 큽니다.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            case 'SYS060000_U01' :\r\n                if (StrLib.isNull(this.state.dsModifyInfo.TITLE)) {\r\n                    ComLib.openDialog('A', '제목을 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.VALD_DT)) {\r\n                    ComLib.openDialog('A', '유효일자를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.CONT_DV)) {\r\n                    ComLib.openDialog('A', '내용구분을 선택해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.dsModifyInfo.CONT)) {\r\n                    ComLib.openDialog('A', '내용을 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 메뉴정보 조회\r\n                case 'SYS060000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getNoteInfo\",\r\n                        datasetsend:\"dsSrchNoteInfo\",\r\n                        datasetrecv:\"dsNoteInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchNoteInfo', [{  TITLE : this.state.srchParam.TITLE,  SRCH_STRT_DT: this.state.srchParam.SRCH_STRT_DT,  SRCH_END_DT: this.state.srchParam.SRCH_END_DT, DEL_YN : this.state.srchParam.DEL_YN}]);\r\n                    transManager.agent();\r\n                    break;\r\n                case 'SYS060000_R02' :\r\n                    console.log(this.state.dsModifyInfo);\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SYS.R_getNoteFileInfo\",\r\n                        datasetsend:\"dsSrchNoteFileInfo\",\r\n                        datasetrecv:\"dsNoteFileInfo\"\r\n                    });\r\n                    transManager.addDataset('dsSrchNoteFileInfo', [{BORD_MNG_NO : this.state.srchFileParam}]);\r\n                    transManager.agent();\r\n                    break;\r\n                // 메뉴 등록\r\n                case 'SYS060000_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addSequence({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.sequence,\r\n                        sqlmapid: 'SYS.R_getNoteInfoSeq',\r\n                        datasetmap: 'dsModifyInfo, dsNoteFileInfo',\r\n                        columnid: 'BORD_MNG_NO',\r\n                        datasetsend: 'dsModifyInfo'\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_insertNoteInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"SYS.C_NoteFileInfo\",\r\n                        datasetsend:\"dsNoteFileInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.addDataset('dsNoteFileInfo', this.state.dsNoteFileInfo);\r\n                    transManager.agent();\r\n                    break;\r\n\r\n                // 메뉴 수정\r\n                case 'SYS060000_U01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.update,\r\n                        sqlmapid:\"SYS.U_updateNoteInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.handle,\r\n                        sqlmapid:\"SYS.H_NoteFileInfo\",\r\n                        datasetsend:\"dsNoteFileInfo\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.fileupload,\r\n                        sqlmapid:\"SYS.C_NoteFileInfo\",\r\n                        datasetsend:\"dsNoteFileInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.addDataset('dsNoteFileInfo', this.state.dsNoteFileInfo.filter(item => item.state !== newScrmObj.constants.crud.read));\r\n                    transManager.agent();\r\n                    break;\r\n                    \r\n                // 메뉴 삭제\r\n                case 'SYS060000_D01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.destroy,\r\n                        sqlmapid:\"SYS.D_deleteNoteInfo\",\r\n                        datasetsend:\"dsModifyInfo\",\r\n                    });\r\n                    transManager.addDataset('dsModifyInfo', [this.state.dsModifyInfo]);\r\n                    transManager.agent();\r\n                    break;\r\n                default : break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SYS060000_R01' : \r\n                this.setState({\r\n                        ...this.state,\r\n                        dsNoteInfo : res.data.dsNoteInfo,\r\n                        dsNoteFileInfo : [],\r\n                        dsModifyInfo : { TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', DEL_YN : '', REG_DT : '', REG_USR : '' , MFY_ER: '', MFY_DT: ''}\r\n                }, () => this.refs.grdNoteInfo.state.gridApi.deselectAll());\r\n                break;\r\n            case 'SYS060000_R02' : \r\n                this.setState({...this.state, dsNoteFileInfo : DataLib.convertGridData(res.data.dsNoteFileInfo)});\r\n                break;\r\n            case 'SYS060000_C01' : \r\n            case 'SYS060000_U01' : \r\n            case 'SYS060000_D01' : \r\n                this.transaction('SYS060000_R01');\r\n                break;\r\n            default :  break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        select : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'selSrchUseYn' : this.setState({ ...this.state, srchParam : {...this.state.srchParam, USE_YN : e.target.value}}); break;\r\n                    case 'selSrchRegCent' : this.setState({ ...this.state, srchParam : {...this.state.srchParam, REG_CENT : e.target.value}}); break;\r\n                    case 'selNoteContDv' : this.setState({ ...this.state, dsModifyInfo : {...this.state.dsModifyInfo, CONT_DV : e.target.value}}); break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'iptSrchNoteTitle' :   this.setState({ ...this.state, srchParam : {...this.state.srchParam, TITLE : e.target.value}}); break;\r\n                    case 'iptSrchNoteStrtDt' :  this.setState({ ...this.state, srchParam : {...this.state.srchParam, SRCH_STRT_DT : e.target.value}}); break;\r\n                    case 'iptSrchNoteEndtDt' :  this.setState({ ...this.state, srchParam : {...this.state.srchParam, SRCH_END_DT : e.target.value}}); break;\r\n                    case 'iptNoteTitle' :       this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, TITLE : e.target.value}}); break;\r\n                    case 'iptNoteValdDt' :      this.setState({ ...this.state, dsModifyInfo: {...this.state.dsModifyInfo, VALD_DT : e.target.value}}); break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnSrchNote' :\r\n                        if (this.validation('SYS060000_R01')) { this.transaction('SYS060000_R01'); }\r\n                        break;\r\n                    case 'btnNewNote' :\r\n                        this.setState({\r\n                            ...this.state,\r\n                            dsModifyInfo : {\r\n                                    TITLE: ''\r\n                                ,   VALD_DT : DateLib.getToday()\r\n                                ,   CONT: ''\r\n                                ,   CONT_DV: ''\r\n                                ,   DEL_YN : 'N'\r\n                                ,   REG_ID : JSON.parse(sessionStorage.getItem('dsUserInfo'))[0].USR_CD\r\n                                ,   CHG_ID : JSON.parse(sessionStorage.getItem('dsUserInfo'))[0].USR_CD\r\n                                ,   REG_CENT:  JSON.parse(sessionStorage.getItem('dsUserInfo'))[0].CENT_CD},\r\n                            mode : { ...this.state.mode, transaction : this.state.mode.create }\r\n                        });\r\n                        break;\r\n                    case 'btnDelNote' :\r\n                        if (StrLib.isNull(this.refs.grdNoteInfo.getSelectedRowIndex())) {\r\n                            ComLib.openDialog('A', '선택된 행이 없습니다.');\r\n                            return false;\r\n                        } else {\r\n                            ComLib.openDialog('C', '삭제하시겠습니까?', foo => { if (foo === true) this.transaction('SYS060000_D01'); });\r\n                        }\r\n                        break;\r\n                    case 'btnSaveNote' :\r\n                        if (this.validation('SYS060000_U01')) {\r\n                            if (this.state.mode.transaction === this.state.mode.create) {\r\n                                this.transaction('SYS060000_C01');\r\n                            } else {\r\n                                this.transaction('SYS060000_U01');\r\n                            }\r\n                        }\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        grid : {\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdNoteInfo' :\r\n                        this.setState({ \r\n                            ...this.state\r\n                            ,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n                            ,   mode : { ...this.state.mode, transaction : this.state.mode.update }\r\n                            ,   srchFileParam : e.data.BORD_MNG_NO\r\n                        }, () => this.transaction('SYS060000_R02'));\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            onDeleteRow : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdFileUpload' :\r\n                        let dataset = this.state.dsNoteFileInfo;\r\n                        if (dataset[e.index]['state'] === newScrmObj.constants.crud.create) {\r\n                            this.setState({...this.state, dsNoteFileInfo: dataset.filter(item => item !== dataset[e.index])});\r\n                        } else {\r\n                            dataset[e.index]['state'] = newScrmObj.constants.crud.destroy;\r\n                            this.setState({...this.state, dsNoteFileInfo: dataset});\r\n                        }\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        editor : { //iptNoteCont\r\n            onChange : (e) => {\r\n                switch (e.id) {\r\n                    case 'iptNoteCont' :\r\n                        this.setState({...this.state, dsModifyInfo : {...this.state.dsModifyInfo , CONT: e.value }});\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        upload : {\r\n            handleChangeStatus : (e) => {\r\n                switch (e.id) {\r\n                    case 'upldAttchFile' :\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n            handleSubmit : (e) => {\r\n                switch (e.id) {\r\n                    case 'upldAttchFile' :\r\n                        this.setState({\r\n                            ...this.state,\r\n                            dsNoteFileInfo : this.state.dsNoteFileInfo.concat(e.files.map((item) => {\r\n                                return ({\r\n                                        BORD_MNG_NO : this.state.srchFileParam\r\n                                    ,   ATT_FILE_NM : item['file']['name']\r\n                                    ,   ATT_FILE_SIZE : item['file']['size']\r\n                                    ,   ATT_FILE_CONT : item['file']\r\n                                    ,   REG_ID : JSON.parse(sessionStorage.getItem('dsUserInfo'))[0].USR_CD\r\n                                    ,   CHG_ID : JSON.parse(sessionStorage.getItem('dsUserInfo'))[0].USR_CD\r\n                                    ,   state : newScrmObj.constants.crud.create\r\n                                });\r\n                            }))\r\n                        });\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    <Table  id=\"tblNoteInfo\" colGrp = {[{width: '6%'}, {width: '25%'}, {width: '6%'}, {width: '10%'}, {width: '6%'}, {width: '25%'}, {width: '6%'}, {width: '10%'}, {width: '4%'}]}\r\n                            tbData = {[\r\n                                [   {type : 'T', value : '제목'},\r\n                                    {type : 'D', value : <Textfield id='iptSrchNoteTitle' value={this.state.srchParam.TITLE} onChange={this.event.input.onChange}/>},\r\n                                    {type : 'T', value : '등록센터'},\r\n                                    {type : 'D', value : <CentListSelectBox id='selSrchRegCent' value={this.state.srchParam.REG_CENT} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'T', value : '공지기간'},\r\n                                    {type : 'D', value : <RangeInputCalendar stId='iptSrchNoteStrtDt' endId='iptSrchNoteEndtDt' startDate={this.state.srchParam.SRCH_STRT_DT} endDate={this.state.srchParam.SRCH_END_DT} onChange={this.event.input.onChange}/>\r\n                                        \r\n                                    },\r\n                                    {type : 'T', value : '삭제여부'},\r\n                                    {type : 'D', value : <Selectbox id='selSrchUseYn' value={this.state.srchParam.DEL_YN} options = {ComLib.getCommCodeOptions('105')} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'D', value : <Button id='btnSrchNote' value='조회' onClick={this.event.button.onClick}/>},\r\n                                ],\r\n                            ]}\r\n                    />\r\n                </ComponentPanel>\r\n                <ComponentPanel>\r\n                    <Grid   id = 'grdNoteInfo' ref='grdNoteInfo' height=\"200px\"\r\n                            header = {[\r\n                                {   headerName : 'No',          field : 'BORD_MNG_NO',  colId : 'BORD_MNG_NO',  width: 80       },\r\n                                {   headerName : '등록일자',    field : 'REG_DTM',       colId : 'REG_DTM',       width: 110,\r\n                                    valueFormatter : (param) => StrLib.getFormatterDate(param.value)},\r\n                                {   headerName : '유효일자',    field : 'VALD_DT',      colId : 'VALD_DT',      width: 110,\r\n                                    valueFormatter : (param) =>  StrLib.getFormatterDate(param.value)},\r\n                                {   headerName : '제목',        field : 'TITLE',        colId : 'TITLE',        width: 250      },\r\n                                {   headerName : '내용구분',    field : 'CONT_DV',      colId : 'CONT_DV',      width: 110,\r\n                                    cellEditor: 'agSelectCellEditor', \r\n                                    cellEditorParams: { values : ComLib.setGridComCodeComboCellVal('106') },\r\n                                    valueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '106')               },\r\n                                {   headerName : '등록센터',   field : 'CENT_NM',       colId : 'CENT_NM',       width: 110      },\r\n                                {   headerName : '등록자',     field : 'REG_ID',      colId : 'REG_ID',      width: 110      },\r\n                            ]}\r\n                            data = {this.state.dsNoteInfo}\r\n                            onRowClicked = {this.event.grid.onRowClicked}\r\n                    />\r\n                </ComponentPanel>\r\n                <FlexPanel>\r\n                    <ComponentPanel>\r\n                        <Table  id=\"tblNoteDetInfo\" colGrp = {[{width: '8%'}, {width: '25%'}, {width: '8%'}, {width: '10%'}, {width: '8%'}, {width: '20%'}, {width: '8%'}, {width: '10%'}]}\r\n                                tbData = {[\r\n                                    [   {type : 'T', value : '제목'},\r\n                                        {type : 'D', value : <Textfield id='iptNoteTitle' value={this.state.dsModifyInfo.TITLE} onChange={this.event.input.onChange}/>, colSpan:3}, \r\n                                        {type : 'T', value : '유효일자'},\r\n                                        {type : 'D', value : <InputCalendar id='iptNoteValdDt' value ={this.state.dsModifyInfo.VALD_DT} onChange={this.event.input.onChange}/>},\r\n                                        {type : 'T', value : '내용구분'},\r\n                                        {type : 'D', value : <Selectbox id='selNoteContDv' value={this.state.dsModifyInfo.CONT_DV} options = {ComLib.getCommCodeOptions('106', 'C')} onChange={this.event.select.onChange}/>},\r\n                                    ],\r\n                                    [\r\n                                        {type : 'T', value : '내용'},\r\n                                        {type : 'D', value : <HtmlEditor id='iptNoteCont' height={400} value={this.state.dsModifyInfo.CONT} onChange = {this.event.editor.onChange}/>, colSpan: 7}, \r\n                                    ]\r\n                                \r\n                                ]}\r\n                        />\r\n                        <SubFullPanel>\r\n                            <RFloatArea>\r\n                                <Button id='btnNewNote' value='신규' onClick={this.event.button.onClick} mr ='5px'/>\r\n                                <Button id='btnDelNote' value='삭제' onClick={this.event.button.onClick} mr ='5px'/>\r\n                                <Button id='btnSaveNote' value='저장' onClick={this.event.button.onClick}/>\r\n                            </RFloatArea>\r\n                        </SubFullPanel>\r\n                    </ComponentPanel>\r\n                    <ComponentPanel width=\"40%\">\r\n                        <Grid   id = 'grdFileUpload' ref='grdFileUpload' height=\"300px\"\r\n                                header = {[\r\n                                    {   headerName : '파일명',       field : 'ATT_FILE_NM',        colId : 'ATT_FILE_NM',        width: 200      },\r\n                                    {   headerName : '크기',   field : 'ATT_FILE_SIZE',       colId : 'ATT_FILE_SIZE',       width: 110,\r\n                                        valueFormatter : (param) => (parseInt(param.value)/(1024)).toFixed(2).toString() + 'KB' \r\n                                    },\r\n                                    {   headerName : '삭제',   field : 'DEL_BTN',       colId : 'DEL_BTN',       width: 70, cellRenderer: 'delButton'},\r\n                                    // {headerName : '삭제',   field : 'USE_YN',       colId : 'USE_YN',       width: 70 },\r\n                                ]}\r\n                                data = {this.state.dsNoteFileInfo.filter(item => item.state !== newScrmObj.constants.crud.destroy)}\r\n                                onRowClicked = {this.event.grid.onRowClicked}\r\n                                onDeleteRow = {this.event.grid.onDeleteRow}\r\n                        />\r\n                        <SubFullPanel>\r\n                            <InputFileUpload    width=\"100%\" height = {220} id='upldAttchFile' \r\n                                                handleChangeStatus = {this.event.upload.handleChangeStatus}\r\n                                                handleSubmit = {this.event.upload.handleSubmit}\r\n                            />\r\n                        </SubFullPanel>\r\n                    </ComponentPanel>\r\n                </FlexPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default View;","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n    BasicButton as Button\r\n,   FullPanel\r\n,   FlexPanel\r\n,   SubFullPanel\r\n,   ComponentPanel\r\n,   RFloatArea\r\n,   Textfield, Selectbox, Grid, Table, CentListSelectBox, RangeInputCalandar, CustomSlide as Slide} from 'components';\r\nimport {newScrmObj, ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass View extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone] \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            srchParam : {\r\n                CENT_CD  : '',\r\n                TITLE : '',\r\n                SRCH_STRT_DT : '',\r\n                SRCH_END_DT : '',\r\n                DEL_YN : ''\r\n            },\r\n            srchAttchParam : {\r\n                URL : '',\r\n                RCV_DTM : ''\r\n            },\r\n            dsRcvFileList : [],\r\n            dsAttachFileList : []\r\n        }\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.event.select.onChange = this.event.select.onChange.bind(this);\r\n        this.event.grid.onRowClicked = this.event.grid.onRowClicked.bind(this);\r\n    }\r\n    \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount ()  {\r\n        // this.init();\r\n    }\r\n    init = async () => {\r\n        const reqOptions = {\r\n            method: 'post',\r\n            url: process.env.API_URL + '/scrm/mfu/files',\r\n            headers: {  \r\n                \"Content-Type\": \"application/json\", \r\n                \"Authorization\": ComLib.getSession('accessToken'), \r\n            },\r\n            json: true\r\n        };\r\n        try {\r\n            const resData = await axios(reqOptions);\r\n            console.log('======================= try');\r\n            console.log(resData);\r\n            this.setState({...this.state, dsFileList : resData.data})\r\n        } catch (err) {\r\n            console.log('============ catch');\r\n            console.log(err);\r\n            ComLib.openDialog('A', '서버 오류 발생\\n로그를 확인하십시오.');\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion');\r\n        switch (id) {\r\n            case 'SUP020000_R01' :\r\n                this.transaction('SUP020000_R01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log(1);\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                case 'SUP020000_R01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SUP.R_getRcvUFileList\",\r\n                        datasetsend:\"dsSrchFileList\",\r\n                        datasetrecv:\"dsRcvFileList\"\r\n                    });\r\n                    transManager.addSendDataset('dsSrchFileList', [this.state.srchParam]);\r\n                    transManager.addRecvDataset('dsRcvFileList');\r\n                    transManager.agent();\r\n                    break;\r\n                    \r\n                case 'SUP020000_R02' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.common);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.read,\r\n                        sqlmapid:\"SUP.R_getRcvAttachFileList\",\r\n                        datasetsend:\"dsSrchAttchParam\",\r\n                        datasetrecv:\"dsAttachFileList\"\r\n                    });\r\n                    transManager.addSendDataset('dsSrchAttchParam', [this.state.srchAttchParam]);\r\n                    transManager.addRecvDataset('dsAttachFileList');\r\n                    transManager.agent();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        switch (res.id) {\r\n            case 'SUP020000_R01' :\r\n                console.log(2);\r\n                this.setState({...this.state, dsRcvFileList : DataLib.convertGridData(res.data.dsRcvFileList), dsAttachFileList : []});\r\n                break;\r\n            case 'SUP020000_R02' :\r\n                this.setState({...this.state, dsAttachFileList : res.data.dsAttachFileList});\r\n                break;\r\n            default : break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        input : {\r\n\r\n        },\r\n        select : {\r\n            onChange : () => {\r\n\r\n            }\r\n        }, \r\n        grid : {\r\n            onRowClicked : (e) => {\r\n                switch (e.id) {\r\n                    case 'grdFileList' :\r\n                        this.setState ({...this.state , srchAttchParam : { URL :  e.data.URL, RCV_DTM : e.data.RCV_DTM }});\r\n                        this.transaction('SUP020000_R02');\r\n                        break;\r\n                    default : break;\r\n                }\r\n            },\r\n        },\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnSrchFile' :\r\n                        this.transaction('SUP020000_R01');\r\n                        break;\r\n                    default:  break;\r\n                }\r\n                // this.init();\r\n            }\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    <Table  id=\"tblSrchFileList\" colGrp = {[{width: '30%'}, {width: '55%'}, {width: '15%'}]}\r\n                            // tbData = {[\r\n                            //     [     \r\n                            //         {type : 'T', value : '등록센터'},\r\n                            //         {type : 'D', value : <CentListSelectBox id='selSrchRegCent' value={this.state.srchParam.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                            //         {type : 'T', value : '고객명'},\r\n                            //         {type : 'D', value : <Textfield id='iptSrchNoteTitle' value={this.state.srchParam.TITLE} onChange={this.event.input.onChange}/>},\r\n                            //         {type : 'T', value : '발송기간'},\r\n                            //         {type : 'D', value : <RangeInputCalandar stId='iptSrchNoteStrtDt' endId='iptSrchNoteEndtDt' startDate={this.state.srchParam.SRCH_STRT_DT} endDate={this.state.srchParam.SRCH_END_DT} onChange={this.event.input.onChange}/>\r\n                                        \r\n                            //         },\r\n                            //         {type : 'T', value : '삭제여부'},\r\n                            //         {type : 'D', value : <Selectbox id='selSrchUseYn' value={this.state.srchParam.DEL_YN} options = {ComLib.getCommCodeOptions('105')} onChange={this.event.select.onChange}/>},\r\n                            //         {type : 'D', value : <Button id=\"btnSrchMenu\" value=\"조회\" onClick={this.event.button.onClick}></Button>}\r\n                            //     ],\r\n                            // ]}\r\n                            tbData = {[\r\n                                [     \r\n                                    {type : 'T', value : '등록센터'},\r\n                                    {type : 'D', value : <CentListSelectBox id='selSrchRegCent' value={this.state.srchParam.CENT_CD} onChange={this.event.select.onChange}/>},\r\n                                    {type : 'D', value : <Button id=\"btnSrchFile\" value=\"조회\" onClick={this.event.button.onClick}></Button>}\r\n                                ],\r\n                            ]}\r\n                    />\r\n                </ComponentPanel>\r\n                <SubFullPanel>\r\n                    <ComponentPanel>\r\n                        <Grid   id = 'grdFileList' ref = 'grdFileList' height=\"480px\"\r\n                                header = {[\r\n                                    {   headerName : '등록일자',    field : 'RCV_DT',   colId : 'RCV_DT'    },\r\n                                    {   headerName : 'URL',         field : 'URL',      colId : 'URL'       }\r\n                                ]}\r\n                                data = {this.state.dsRcvFileList}\r\n                                onRowClicked = {this.event.grid.onRowClicked}\r\n                        />\r\n                    </ComponentPanel>\r\n                </SubFullPanel>\r\n                <SubFullPanel>\r\n                    <ComponentPanel>\r\n                            {(this.state.dsAttachFileList.length !== 0) ? <Slide data={this.state.dsAttachFileList} height={150}></Slide> : <span>{'조회된 파일 없습니다.'}</span> }\r\n                    </ComponentPanel>\r\n                </SubFullPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n }\r\nexport default View;","import LOGIN from 'containers/base/common/login.js';\r\nimport SAM000000 from 'containers/sam/SAM000000';\r\nimport SAM010000 from 'containers/sam/SAM010000';\r\nimport SAM020000 from 'containers/sam/SAM020000';\r\nimport SAM030000 from 'containers/sam/SAM030000';\r\nexport const sampleRoute = [\r\n    { id: 'LOGIN',  path: \"/\",              exact: true,    component: LOGIN },\r\n    { id: 'SAM000000',  path: \"/base\",          exact: true,    component: SAM000000 },\r\n    { id: 'SAM010000',  path: \"/SAM010000\",     exact: true,    component: SAM010000 },\r\n    { id: 'SAM020000',  path: \"/SAM020000\",     exact: true,    component: SAM020000 },\r\n    { id: 'SAM030000',  path: \"/SAM030000\",     exact: true,    component: SAM030000 }\r\n];","import React from 'react';\r\nimport {IconButton, RFloatArea, LFloatArea, Tray as TrayMenu, TrayDiv} from 'components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nlet trayMenuInfo = []\r\n\r\nclass TrayArea extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor(props){\r\n        super(props);\r\n        // state 초기화\r\n        this.state = {\r\n            trayProps : {\r\n\t\t\t\tid : 'TrayArea',\r\n\t\t\t\tvalue : 'Tray-Add',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tmenuId : '',\r\n\t\t\t\t\tmenuNm : '',\r\n\t\t\t\t\tpath : ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n        }\r\n        // 이벤트 바인딩\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.addMenu = this.addMenu.bind(this);\r\n        this.openMenu = this.openMenu.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n\r\n\t}\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            case '' :\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        try  {\r\n            switch (transId) {\r\n                case '' :\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        try  {\r\n            switch (res.id) {\r\n                case '' :\r\n                    break;\r\n\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnAdd' :\r\n                        this.setState({\r\n                            ...this.state, trayProps :  { id : 'TrayArea', vale : 'TrayArea', data: {menuId : 'SAM010000', menuNm : '샘플', path : '/sam/SAM010000'} }\r\n                        }, () => this.addMenu(this.state.trayProps));\r\n                        break;\r\n                    case 'btnPrev' :\r\n                        console.log('Prev');\r\n                        //TrayMenu.select();\r\n                        break;\r\n                    case 'btnNext' :\r\n                        console.log('Next');\r\n                        //TrayMenu.select();\r\n                        break;\r\n                    case 'btnClose' :\r\n                        console.log('Close');\r\n                        //TrayMenu.removeAll();\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Tray 영역에 추가\r\n    addMenu = (props) => {\r\n        console.log(' *** add Menu *** ');\r\n        console.log(props);\r\n        \r\n        // 데이터 중복 체크 - 이미 존재하는 경우 화면 select 처리 / 없는 경우 Tray 영역에 추가 \r\n        trayMenuInfo.push(props.data);\r\n        console.log(trayMenuInfo);\r\n\r\n    }\r\n    // Tray 영역에 있는 메뉴 선택 시\r\n    openMenu = () => {\r\n        alert('open Menu');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <LFloatArea>\r\n                    {/* <TrayDiv/> */}\r\n                    <TrayDiv/>\r\n                </LFloatArea>\r\n                <RFloatArea>\r\n                    <div className=\"scrm-tray-btn-div\">\r\n                        <IconButton classes='scrm-tray-btn-add' id='btnAdd' onClick={this.event.button.onClick}/>\r\n                        <IconButton classes='scrm-tray-btn-prev' id='btnPrev' onClick={this.event.button.onClick}/>\r\n                        <IconButton classes='scrm-tray-btn-next' id='btnNext' onClick={this.event.button.onClick}/>\r\n                        <IconButton classes='scrm-tray-btn-close' id='btnClose' onClick={this.event.button.onClick}/>\r\n                    </div>\r\n                </RFloatArea>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default TrayArea;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {appRoute} from 'routes';\r\nimport {sampleRoute} from 'routes/sampleRoute.js';\r\nimport {TrayPanel} from 'components';\r\nimport {IconButton, RFloatArea, LFloatArea, Tray as TrayMenu, TrayDiv} from 'components';\r\nimport TrayArea from '../tray';\r\nimport { Route, Switch, Link} from 'react-router-dom';\r\n\r\nclass Main extends React.Component{\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            trayProp : []\r\n        }\r\n    }\r\n    onClick = (e) => {\r\n        this.openMenu();\r\n    }\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnAdd' :\r\n                        this.setState({\r\n                            ...this.state, trayProps :  {id : 'TrayArea', vale : 'TrayArea', data: {menuId : 'SAM010000', menuNm : '샘플', path : '/sam/SAM010000'}}\r\n                        }, () => this.addMenu(this.state.trayProps));\r\n                        break;\r\n                    case 'btnPrev' :\r\n                        console.log('Prev');\r\n                        //TrayMenu.select();\r\n                        break;\r\n                    case 'btnNext' :\r\n                        console.log('Next');\r\n                        //TrayMenu.select();\r\n                        break;\r\n                    case 'btnClose' :\r\n                        console.log('Close');\r\n                        //TrayMenu.removeAll();\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        console.log(\r\n            \r\n        );\r\n        return (\r\n            <React.Fragment>\r\n                <TrayPanel>\r\n                    <LFloatArea>\r\n                        <TrayDiv data= {this.props.tray} selected = {this.props.selected} onClick = {this.onClick}/>\r\n                    </LFloatArea>\r\n                    <RFloatArea>\r\n                        <div className=\"scrm-tray-btn-div\">\r\n                            <IconButton classes='scrm-tray-btn-add' id='btnAdd' onClick={this.event.button.onClick}/>\r\n                            <IconButton classes='scrm-tray-btn-prev' id='btnPrev' onClick={this.event.button.onClick}/>\r\n                            <IconButton classes='scrm-tray-btn-next' id='btnNext' onClick={this.event.button.onClick}/>\r\n                            <IconButton classes='scrm-tray-btn-close' id='btnClose' onClick={this.props.onClose}/>\r\n                        </div>\r\n                    </RFloatArea>\r\n                </TrayPanel>\r\n                {\r\n                    this.props.tray.map(tray => {\r\n                        return  sampleRoute.filter(item => item.id === tray.MENU_ID).map((prop, key) => {\r\n                             return (\r\n                                 <div id={prop.id} style={{display : (this.props.selected.MENU_ID === prop.id) ? 'block' : 'none'}} key={key}>\r\n                                    <prop.component/>\r\n                                 </div>\r\n                             )\r\n                         })\r\n                     })\r\n                }\r\n            {/* <ul>\r\n                {\r\n                    sampleRoute.map((prop, key) => {\r\n                        return (\r\n                            <li><Link id = {prop.id} style={{ textDecoration: 'none', color: '#000000'}} to={prop.path} key={key} onClick = {this.onClick}>{prop.id}</Link></li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul> */}\r\n            {\r\n                // sampleRoute.map((prop, key) => {\r\n                //     return  (\r\n                //         <div id={'main_div_' + prop.id} style={{display : 'block'}}>\r\n                //             {/* <Route path={prop.path} exact={prop.exact} component={prop.component}  key={key}/> */}\r\n                //             <prop.component/>\r\n                //         </div>\r\n                //     );\r\n                // })\r\n                \r\n            }\r\n            {/* <Switch> */}\r\n            {/* {\r\n                appRoute.map((prop, key) => {\r\n                    return ( this.props.menu.map((menu) => {\r\n                        if (menu.MENU_ID === prop.id) {\r\n                            return  (<Route path={prop.path} exact={prop.exact} component={prop.component}  key={key}/>);\r\n                        }\r\n                    }))\r\n                })\r\n            } */}\r\n            {/* </Switch> */}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Main;","import React from 'react';\r\nimport { Menu } from 'components';\r\n\r\nclass Side extends React.Component{\r\n\trender () { \r\n\t\treturn ( \r\n\t\t\t// <Menu data={this.props.menu}/> \r\n\t\t\t<div>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Side;","import React from 'react';\r\nclass Footer extends React.Component{\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                Footer\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Footer;","import React from 'react';\r\nimport {ComLib, TransManager} from 'common';\r\nimport {IconButton, LFloatArea, RFloatArea, HeaderMenu} from 'components';\r\nimport 'assets/styles/header.css';\r\n\r\nclass Header extends React.Component{\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor(props){\r\n        super(props);\r\n        // state 초기화\r\n        this.state = {\r\n            usrCd : 'itfact',\r\n        }\r\n        // 이벤트 바인딩\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            // 로그인 체크\r\n            case 'LOGOUT_D01' :\r\n                this.transaction('LOGOUT_D01');\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 로그인 체크\r\n                case 'LOGOUT_D01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.logout);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.destroy,\r\n                        sqlmapid:\"COM.D_doLogout\",\r\n                        datasetsend:\"dsSendData\",\r\n                    });\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        sqlmapid:\"COM.C_doLoginOutSp\",\r\n                        datasetsend:\"dsSendData\",\r\n                    });\r\n                    transManager.addDataset('dsSendData', [{ USR_CD : this.state.usrCd, ENCPWD_PWD: this.state.usrPasswd, CONN_IP: '0.0.0.10', PS_STA_CD: '40' }]);\r\n                    transManager.agent();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        try  {\r\n            switch (res.id) {\r\n                case 'LOGOUT_D01' :\r\n                    // 로그인 이후 데이터 체크\r\n                    sessionStorage.clear();\r\n                    window.location = '/';\r\n                    break;\r\n\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                console.log('onclick');\r\n                switch (e.target.id) {\r\n                    case 'btnLogout' :\r\n                        // console.log('logout 시작');\r\n                        //ComLib.openDialog('C', '정말 로그아웃 하시겠습니까?', foo => { if (foo === true) this.validation('LOGOUT_D01'); });\r\n                        sessionStorage.clear();\r\n                        window.location = '/';\r\n                        break;\r\n                    case 'btnNoti' :\r\n                        let notiOption = { width: '700px', height: '800px' }\r\n                        ComLib.openPop('COM010010', '공지사항조회', 'modal', notiOption);\r\n                        break;\r\n                    case 'btnMyinfo' :\r\n                        let infoOption = { width: '500px', height: '335px', pop: true }\r\n                        ComLib.openPop('pwdChg', '비밀번호 변경', 'modal', infoOption);\r\n                        break;\r\n                    case 'btnSetting' :\r\n                        let setOption = { width: '500px', height: '600px' }\r\n                        ComLib.openPop('COM010020', '설정변경', 'modal', setOption);\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <LFloatArea>\r\n                    <div style= {{display: 'flex'}}>\r\n                        <div className = 'scrm-header-left-div'/>\r\n                    </div>\r\n                </LFloatArea>\r\n                <RFloatArea>\r\n                    <div className=\"scrm-header-btn-div\">\r\n                        <IconButton classes='scrm-btn-noti' id='btnNoti'        onClick={this.event.button.onClick}/>\r\n                        <IconButton classes='scrm-btn-user' id='btnMyinfo'      onClick={this.event.button.onClick}/>\r\n                        <IconButton classes='scrm-btn-setting' id='btnSetting'  onClick={this.event.button.onClick}/>\r\n                        <IconButton classes='scrm-btn-logut' id='btnLogout'     onClick={this.event.button.onClick}/>\r\n                    </div>\r\n                </RFloatArea>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Main from './main';\r\nimport Side from './side';\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport {AppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, FooterPanel, HeaderMenu} from 'components';\r\nimport ReactDOM from 'react-dom';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\nimport {sampleRoute} from 'routes/sampleRoute.js';\r\n\r\nconst Menu = [\r\n    { PARN_MENU_ID: '',        MENU_ID : 'BASE',          MENU_NM : '대쉬보드',               SORT_ORD: 1,        PRG_PATH: ''},\r\n\r\n    { PARN_MENU_ID: '',        MENU_ID : 'SYS',           MENU_NM : '정보관리',               SORT_ORD: 2,        PRG_PATH: ''},\r\n    { PARN_MENU_ID: 'SYS',     MENU_ID : 'SYS010000',     MENU_NM : '코드관리',               SORT_ORD: 1,        PRG_PATH: '/sys/SYS010000'},\r\n    { PARN_MENU_ID: 'SYS',     MENU_ID : 'SYS020000',     MENU_NM : '메뉴관리',               SORT_ORD: 2,        PRG_PATH: '/sys/SYS020000'},\r\n    { PARN_MENU_ID: 'SYS',     MENU_ID : 'SYS030000',     MENU_NM : '메뉴권한관리',           SORT_ORD: 3,        PRG_PATH: '/sys/SYS030000'},\r\n    { PARN_MENU_ID: 'SYS',     MENU_ID : 'SYS040000',     MENU_NM : '기준값관리',             SORT_ORD: 4,        PRG_PATH: '/sys/SYS040000'},\r\n    { PARN_MENU_ID: 'SYS',     MENU_ID : 'SYS050000',     MENU_NM : '사용자관리',             SORT_ORD: 5,        PRG_PATH: '/sys/SYS050000'},\r\n    { PARN_MENU_ID: 'SYS',     MENU_ID : 'SYS060000',     MENU_NM : '공지사항관리',           SORT_ORD: 6,        PRG_PATH: '/sys/SYS060000'},\r\n\r\n    { PARN_MENU_ID: '',        MENU_ID : 'BAT',           MENU_NM : '배치관리',               SORT_ORD: 3,        PRG_PATH: ''},\r\n    { PARN_MENU_ID: 'BAT',     MENU_ID : 'BAT010000',     MENU_NM : '발송관리',               SORT_ORD: 1,        PRG_PATH: '/bat/BAT010000'},\r\n    { PARN_MENU_ID: 'BAT',     MENU_ID : 'BAT020000',     MENU_NM : '이력조회',               SORT_ORD: 2,        PRG_PATH: '/bat/BAT020000'},\r\n\r\n    { PARN_MENU_ID: '',        MENU_ID : 'SUP',           MENU_NM : '파일관리',               SORT_ORD: 4,        PRG_PATH: ''},\r\n    { PARN_MENU_ID: 'SUP',     MENU_ID : 'SUP010000',     MENU_NM : '파일분배관리',           SORT_ORD: 1,        PRG_PATH: '/sup/SUP010000'},\r\n    { PARN_MENU_ID: 'SUP',     MENU_ID : 'SUP020000',     MENU_NM : '파일리스트',             SORT_ORD: 2,        PRG_PATH: '/sup/SUP020000'},\r\n\r\n    { PARN_MENU_ID: '',        MENU_ID : 'STA',           MENU_NM : '현황관리',               SORT_ORD: 5,        PRG_PATH: ''},\r\n    { PARN_MENU_ID: 'STA',     MENU_ID : 'STA010000',     MENU_NM : '기간별현황',             SORT_ORD: 1,        PRG_PATH: '/sta/STA010000'},\r\n    { PARN_MENU_ID: 'STA',     MENU_ID : 'STA020000',     MENU_NM : '조직별현황',             SORT_ORD: 2,        PRG_PATH: '/sta/STA020000'},\r\n\r\n    { PARN_MENU_ID: '',        MENU_ID : 'SAM',           MENU_NM : 'SAMPLE',                 SORT_ORD: 6,        PRG_PATH: ''},\r\n    { PARN_MENU_ID: 'SAM',     MENU_ID : 'SAM000000',     MENU_NM : '샘플페이지0',            SORT_ORD: 1,        PRG_PATH: '/sam/SAM000000'},\r\n    { PARN_MENU_ID: 'SAM',     MENU_ID : 'SAM010000',     MENU_NM : '샘플페이지1',            SORT_ORD: 1,        PRG_PATH: '/sam/SAM010000'},\r\n    { PARN_MENU_ID: 'SAM',     MENU_ID : 'SAM020000',     MENU_NM : '샘플페이지2',            SORT_ORD: 1,        PRG_PATH: '/sam/SAM020000'},\r\n    { PARN_MENU_ID: 'SAM',     MENU_ID : 'SAM030000',     MENU_NM : '샘플페이지3',            SORT_ORD: 2,        PRG_PATH: '/sam/SAM030000'}\r\n];\r\n\r\nclass AppMain extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.event.window.onbeforeunload = this.event.window.onbeforeunload.bind(this);\r\n\t\tthis.event.window.onunload = this.event.window.onunload.bind(this);\r\n\t}\r\n\r\n\tstate = {\r\n\t\t//menu : ComLib.getMenuList().filter(item => item.MENU_TYPE === '10' || item.MENU_TYPE === '20'),\r\n\t\tselected : '',\r\n\t\ttray : [],\r\n\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\t\twindow.addEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\twindow.addEventListener('unload', this.event.window.onunload);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\twindow.removeEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\twindow.removeEventListener('unload', this.event.window.onunload);\r\n\t}\r\n\tevent = {\r\n\t\twindow: {\r\n\t\t\tonbeforeunload: (e) => {\r\n\t\t\t\te.returnValue = \"로그아웃?\";\r\n\t\t\t},\r\n\t\t\tonunload: (e) => {\r\n\t\t\t\tif (this.validation(\"BASE_D01\")) this.transaction(\"BASE_D01\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch(serviceid) {\r\n\t\t\tcase 'BASE_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.setAsync(false);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid:\"COM.D_delLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUsr\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:\"COM.C_doLoginOutSp\",\r\n\t\t\t\t\tdatasetsend:\"dsUsr\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUsr', this.state.dsUser.getRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch(res.id) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * User Function\r\n\t *******************************************************************/\r\n    openMenu = (menu) => {\r\n        if (this.state.tray.indexOf(menu) < 0) {\r\n            this.setState({tray : this.state.tray.concat(menu), selected : menu});\r\n        } else {\r\n            this.setState({...this.state.tray, selected : menu});\r\n        }\r\n\r\n    }\r\n    moveMenu = (menu) => {\r\n        this.setState({...this.state.tray, selected : menu});\r\n    }\r\n    closeMenu = (menu) => {\r\n        this.setState({tray : this.state.tray.filter(item => item !== menu), selected : menu}, () => {\r\n            console.log('closeMenu => this.state.tray');\r\n            console.log(this.state.tray);\r\n        });\r\n    }\r\n    render () {\r\n        return(\r\n            <AppPanel>\r\n                <HeadPanel>\r\n                    <Header/>\r\n                    <HeaderMenu menu={Menu} openMenu = {this.openMenu}/>\r\n                </HeadPanel>\r\n                <MiddlePanel>\r\n                    <SidePanel>\r\n                        <Side/>\r\n                    </SidePanel>\r\n                    <MainPanel>\r\n                        {/* <Main menu = {ComLib.getMenuList().filter(item => item.MENU_TYPE === '10' || item.MENU_TYPE === '20')}/> */}\r\n                        <Main menu = {Menu} tray={this.state.tray} selected = {this.state.selected} openMenu = {this.openMenu} closeMenu = {this.closeMenu}/>\r\n                    </MainPanel>\r\n                </MiddlePanel>\r\n                <FooterPanel>\r\n                    <Footer/>\r\n                </FooterPanel>\r\n            </AppPanel>\r\n        );\r\n    }\r\n}\r\nexport default AppMain;","import React from \"react\";\r\nimport { BasicButton as Button, Textfield } from \"components\";\r\nimport { TransManager, ComLib } from \"common\";\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass MfuHeader extends React.Component {\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [1. Default State Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: {\r\n        transaction: \"u\",\r\n        update: \"c\",\r\n        create: \"u\",\r\n      },\r\n      custNm: \"\",\r\n    };\r\n    this.event.input.onChange = this.event.input.onChange.bind(this);\r\n    this.event.button.onClick = this.event.button.onClick.bind(this);\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [2. OnLoad Event Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [3. validation Event Zone]\r\n  //  - validation 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  validation = (id) => {\r\n    console.log(\"validtion\", id);\r\n    switch (id) {\r\n      case \"WMB000001_R01\":\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [4. transaction Event Zone]\r\n  //  - transaction 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  transaction = (transId) => {\r\n    console.log(\"transaction start\");\r\n    let transManager = new TransManager();\r\n    try {\r\n      switch (transId) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [5. Callback Event Zone]\r\n  //  - Callback 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  callback = (param) => {\r\n    console.log(\"callback start\");\r\n    console.log(param);\r\n    try {\r\n      switch (param.id) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [6. event Zone]\r\n  //  - 각 Component의 event 처리\r\n  /*------------------------------------------------------------------------------------------------*/\r\n\r\n  event = {\r\n    button: {\r\n      onClick: (e) => {\r\n        switch (e.target.id) {\r\n          case \"btnAuth\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n    input: {\r\n      onChange: (e) => {\r\n        console.log(\"onChange\", e);\r\n        console.log(\"onChange\", e.target.id);\r\n        switch (e.target.id) {\r\n          case \"custNm\":\r\n            this.setState({\r\n              custNm: e.target.value,\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [7. render Zone]\r\n  //  - 화면 관련 내용 작성\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  render() {\r\n    return (\r\n      <header className=\"uploadHeader\">\r\n        <h1>잇팩 파일 업로드</h1>\r\n        <span>ID: 5988014</span>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MfuHeader;\r\n","import React from \"react\";\r\nimport { BasicButton as Button, Textfield } from \"components\";\r\nimport { TransManager, ComLib } from \"common\";\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass MfuFooter extends React.Component {\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [1. Default State Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: {\r\n        transaction: \"u\",\r\n        update: \"c\",\r\n        create: \"u\",\r\n      },\r\n      custNm: \"\",\r\n    };\r\n    this.event.input.onChange = this.event.input.onChange.bind(this);\r\n    this.event.button.onClick = this.event.button.onClick.bind(this);\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [2. OnLoad Event Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [3. validation Event Zone]\r\n  //  - validation 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  validation = (id) => {\r\n    console.log(\"validtion\", id);\r\n    switch (id) {\r\n      case \"WMB000001_R01\":\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [4. transaction Event Zone]\r\n  //  - transaction 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  transaction = (transId) => {\r\n    console.log(\"transaction start\");\r\n    let transManager = new TransManager();\r\n    try {\r\n      switch (transId) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [5. Callback Event Zone]\r\n  //  - Callback 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  callback = (param) => {\r\n    console.log(\"callback start\");\r\n    console.log(param);\r\n    try {\r\n      switch (param.id) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [6. event Zone]\r\n  //  - 각 Component의 event 처리\r\n  /*------------------------------------------------------------------------------------------------*/\r\n\r\n  event = {\r\n    button: {\r\n      onClick: (e) => {\r\n        switch (e.target.id) {\r\n          case \"btnAuth\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n    input: {\r\n      onChange: (e) => {\r\n        console.log(\"onChange\", e);\r\n        console.log(\"onChange\", e.target.id);\r\n        switch (e.target.id) {\r\n          case \"custNm\":\r\n            this.setState({\r\n              custNm: e.target.value,\r\n            });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  continue = (e) => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = (e) => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [7. render Zone]\r\n  //  - 화면 관련 내용 작성\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  render() {\r\n    const { BtnBack, BtnContinue, stepCssNames } = this.props;\r\n\r\n    const stepInfo = stepCssNames.map(\r\n        (info, index) => (\r\n            <span key={index} className={info.active ? info.finish ? 'step active finish': 'step active' : info.finish ? 'step finish': 'step' }></span>\r\n        )\r\n    )\r\n\r\n    return (\r\n      <footer className=\"uploadFooter\">\r\n        <ul className=\"uploadUl\">\r\n          {BtnBack ? (\r\n            <li className=\"uploadLi\">\r\n              <button\r\n                className=\"uploadBtn back\"\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                onClick={this.back}\r\n              >\r\n                뒤로가기\r\n              </button>\r\n            </li>\r\n          ) : null}\r\n\r\n          {BtnContinue ? (\r\n            <li className=\"uploadLi\">\r\n              <button\r\n                className=\"uploadBtn forward\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={this.continue}\r\n              >\r\n                다음\r\n              </button>\r\n            </li>\r\n          ) : null}\r\n        </ul>\r\n\r\n        <div className=\"footStep\">\r\n\r\n        {stepInfo}\r\n          \r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MfuFooter;\r\n","import React from \"react\";\r\nimport { BasicButton as Button, Textfield } from \"components\";\r\nimport { TransManager, ComLib } from \"common\";\r\n\r\nimport \"../../../assets/css/fileUpload.scss\";\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass MoblieStep1 extends React.Component {\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [1. Default State Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: {\r\n        transaction: \"u\",\r\n        update: \"c\",\r\n        create: \"u\",\r\n      },\r\n      custNm: \"\",\r\n      stepCssNames : []\r\n      \r\n    };\r\n    this.event.input.onChange = this.event.input.onChange.bind(this);\r\n    this.event.button.onClick = this.event.button.onClick.bind(this);\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [2. OnLoad Event Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [3. validation Event Zone]\r\n  //  - validation 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  validation = (id) => {\r\n    console.log(\"validtion\", id);\r\n    switch (id) {\r\n      case \"WMB000001_R01\":\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [4. transaction Event Zone]\r\n  //  - transaction 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  transaction = (transId) => {\r\n    console.log(\"transaction start\");\r\n    let transManager = new TransManager();\r\n    try {\r\n      switch (transId) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [5. Callback Event Zone]\r\n  //  - Callback 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  callback = (param) => {\r\n    console.log(\"callback start\");\r\n    console.log(param);\r\n    try {\r\n      switch (param.id) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [6. event Zone]\r\n  //  - 각 Component의 event 처리\r\n  /*------------------------------------------------------------------------------------------------*/\r\n\r\n  event = {\r\n    button: {\r\n      onClick: (e) => {\r\n        switch (e.target.id) {\r\n          case \"btnAuth\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n    input: {\r\n      onChange: (e) => {\r\n        console.log(\"onChange\", e);\r\n        console.log(\"onChange\", e.target.id);\r\n        switch (e.target.id) {\r\n          case \"custNm\":\r\n    \r\n            this.props.onChange(e);\r\n            console.log();\r\n\r\n            \r\n\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [7. render Zone]\r\n  //  - 화면 관련 내용 작성\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  render() {\r\n    const { values } = this.props;\r\n    console.log('this.state.custNm', values.custNm)\r\n    return (\r\n      <>\r\n        <input\r\n          className=\"fileUploadInput\"\r\n          placeholder=\"고객 주민번호\"\r\n          label=\"Occupation\"\r\n          onChange={this.event.input.onChange}\r\n          value={values.custNm}\r\n          id=\"custNm\"\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoblieStep1;\r\n","import React from 'react';\r\nimport {BasicButton as Button, Textfield} from 'components';\r\nimport {TransManager, ComLib} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass MoblieStep1 extends React.Component{\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [1. Default State Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            mode : {\r\n                transaction : 'u',\r\n                update : 'c',\r\n                create : 'u'\r\n            },\r\n        }\r\n        this.event.input.onChange       = this.event.input.onChange.bind(this);\r\n        this.event.button.onClick       = this.event.button.onClick.bind(this);\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    componentDidMount(){\r\n        console.log('componentDidMount');\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        console.log('validtion', id);\r\n        switch (id) {\r\n            case 'WMB000001_R01' :\r\n                break;\r\n            default :\r\n                break;\r\n        }\r\n\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                case 'WMB000001_R01' :\r\n                  \r\n                    break;\r\n\r\n                default :  \r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (param) => {\r\n        console.log('callback start');\r\n        console.log(param);\r\n        try  {\r\n            switch (param.id) {\r\n                case 'WMB000001_R01' :\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    \r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnAuth':\r\n                        break;\r\n                    default : \r\n                        break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                console.log('onChange', e);\r\n                console.log('onChange', e.target.id);\r\n                switch (e.target.id) {\r\n                    case 'fileUpload' :\r\n                        break;\r\n                    default : \r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n   \r\n   \r\n   \r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [7. render Zone]\r\n    //  - 화면 관련 내용 작성\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    render () {\r\n        \r\n        return (\r\n           \r\n            \r\n            <div>\r\n\r\n            hihihi\r\n\r\n\r\n            </div>\r\n\r\n          \r\n        );\r\n    }\r\n}\r\n    \r\nexport default MoblieStep1;","import React from \"react\";\r\nimport { TransManager } from \"common\";\r\n\r\nimport \"../../assets/css/fileUpload.css\";\r\n\r\nimport Header from \"../moblie/common/header.js\";\r\nimport Footer from \"../moblie/common/footer.js\";\r\nimport MFU020000 from \"../moblie/MFU020000\";\r\nimport MFU030000 from \"../moblie/MFU030000\";\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n// [0. Default Dataset Zone]\r\n/*------------------------------------------------------------------------------------------------*/\r\nconst WMB000001 = {\r\n  datasetTest: [],\r\n};\r\n\r\nclass MoblieInit extends React.Component {\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [1. Default State Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: {\r\n        transaction: \"u\",\r\n        update: \"c\",\r\n        create: \"u\",\r\n      },\r\n      step: 1,\r\n      stepCssNames : [\r\n        {\r\n            index : 1,\r\n            active : true,\r\n            finish: false\r\n        },\r\n        {\r\n            index : 2,\r\n            active : false,\r\n            finish: false\r\n        },\r\n        {\r\n            index : 3,\r\n            active : false,\r\n            finish: false\r\n        }\r\n      ],\r\n      custNm: \"m1\",\r\n    };\r\n    this.event.input.onChange = this.event.input.onChange.bind(this);\r\n    this.event.button.onClick = this.event.button.onClick.bind(this);\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [2. OnLoad Event Zone]\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  componentDidMount() {\r\n    console.log(\"componentDidMount\");\r\n    document.body.className = \"wrapperBody\";\r\n  }\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [3. validation Event Zone]\r\n  //  - validation 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  validation = (id) => {\r\n    console.log(\"validtion\", id);\r\n    switch (id) {\r\n      case \"WMB000001_R01\":\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [4. transaction Event Zone]\r\n  //  - transaction 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  transaction = (transId) => {\r\n    console.log(\"transaction start\");\r\n    let transManager = new TransManager();\r\n    try {\r\n      switch (transId) {\r\n        case \"WMB000001_R01\":\r\n          transManager.setTransId(transId);\r\n          transManager.setTransUrl(\"/scrm/mfu/upload\");\r\n\r\n          let formData = new FormData();\r\n          Array.from(this.imageFile).forEach((f) =>\r\n            formData.append(\"files\", f.file)\r\n          );\r\n\r\n          formData.set(\"urlPath\", decodeURI(window.location.pathname));\r\n          formData.set(\"transId\", transId);\r\n\r\n          transManager.addSendDataset(\"formData\", { formData: formData });\r\n          transManager.upload(this.setProgressPercent, this.callback);\r\n\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [5. Callback Event Zone]\r\n  //  - Callback 관련 정의\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  callback = (param) => {\r\n    console.log(\"callback start\");\r\n    console.log(param);\r\n    try {\r\n      switch (param.id) {\r\n        case \"WMB000001_R01\":\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      alert(err);\r\n    }\r\n  };\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [6. event Zone]\r\n  //  - 각 Component의 event 처리\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  event = {\r\n    button: {\r\n      onClick: (e) => {\r\n        switch (e.target.id) {\r\n          case \"btnAuth\":\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n    input: {\r\n      onChange: (e) => {\r\n        console.log(\"onChange\", e);\r\n        console.log(\"onChange\", e.target.id);\r\n        switch (e.target.id) {\r\n          case \"custNm\":\r\n            this.setState({\r\n              custNm: e.target.value,\r\n            });\r\n            \r\n           \r\n\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n\r\n  handleChange = (step) => {\r\n    const { stepCssNames } = this.state;\r\n    \r\n    this.setState({\r\n      stepCssNames : stepCssNames.map(item => item.index  === step ? ({ ...item, finish: true })\r\n      : { ...item } )\r\n    });\r\n\r\n  }\r\n  \r\n\r\n  // Proceed to next step\r\n  nextStep = () => {\r\n    const { step, stepCssNames } = this.state;\r\n    this.setState({\r\n      step: step + 1,\r\n    });\r\n    console.log(step);\r\n    console.log(this.state.step);\r\n    this.setState({\r\n        stepCssNames : stepCssNames.map(item => item.index  === step + 1 ? ({ ...item, active: true })\r\n    : { ...item, active: false } )\r\n    });\r\n    console.log(stepCssNames);\r\n\r\n  };\r\n\r\n  // Go back to prev step\r\n  prevStep = () => {\r\n    const { step, stepCssNames } = this.state;\r\n    this.setState({\r\n      step: step - 1,\r\n    });\r\n    console.log(step);\r\n    console.log(this.state.step);\r\n    this.setState({\r\n        stepCssNames : stepCssNames.map(item => item.index  === step - 1 ? ({ ...item, active: true })\r\n    : { ...item, active: false } )\r\n    });\r\n    console.log(stepCssNames);\r\n  };\r\n\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  // [7. render Zone]\r\n  //  - 화면 관련 내용 작성\r\n  /*------------------------------------------------------------------------------------------------*/\r\n  render() {\r\n    const { step } = this.state;\r\n    const { custNm, stepCssNames } = this.state;\r\n    const values = { custNm };\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <div className=\"wrapper\">\r\n            <Header />\r\n            <MFU020000 handleChange={this.handleChange} onChange={this.event.input.onChange} values={values} stepCssNames={stepCssNames} />\r\n            <Footer\r\n              BtnBack={false}\r\n              BtnContinue={true}\r\n              stepCssNames={stepCssNames}\r\n              nextStep={this.nextStep}\r\n            />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div className=\"wrapper\">\r\n            <Header />\r\n            <MFU030000 handleChange={this.handleChange} />\r\n            <Footer\r\n              BtnBack={true}\r\n              BtnContinue={true}\r\n              stepCssNames={stepCssNames}\r\n              prevStep={this.prevStep}\r\n              nextStep={this.nextStep}\r\n            />\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div className=\"wrapper\">\r\n          <Header />\r\n          <MFU030000 handleChange={this.handleChange} />\r\n          <Footer\r\n            BtnBack={true}\r\n            BtnContinue={false}\r\n            stepCssNames={stepCssNames}\r\n            prevStep={this.prevStep}\r\n            nextStep={this.nextStep}\r\n          />\r\n        </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <MFU020000\r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n          />\r\n        );\r\n      default:\r\n        console.log(\"This is a multi-step form built with React.\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default MoblieInit;\r\n","import React from 'react';\r\nimport Login from 'containers/base/common/login.js'\r\nimport AppMain from 'containers/base';\r\nimport PwdChg from 'containers/base/common/pwdChg.js';\r\nimport PwdInit from 'containers/base/common/pwdInit.js';\r\n\r\nimport MoblieInit from 'containers/moblie/index.js'\r\n\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst NotFound = () => <h1>404.. This page is not found!</h1>\r\n\r\nclass App extends React.Component{\r\n    componentDidMount(){\r\n\r\n    }\r\n    componentWillUnmount() {\r\n\r\n\t}\r\n    render () {\r\n        const token = sessionStorage.getItem('token');\r\n        const pop = localStorage.getItem('pop');\r\n        return (\r\n            <React.Fragment>\r\n                {/* { pop ? (<PwdChg/>) :\r\n                    ( token ?\r\n                        (<AppMain/>) :\r\n                        (<Switch>\r\n                            <Route path={'/'} exact={true} component={Login}/>\r\n                            <Route path={'/pwdChg'} exact={true} component={PwdChg}/>\r\n                            <Route path={'/pwdInitChg'} exact={true} component={PwdInit}/>\r\n                        </Switch>) )} */}\r\n                {/* {  token ? ( <AppMain/>)  :\r\n                    (\r\n                        <Switch>\r\n                            <Route path={'/'} exact={true} component={Login}/>\r\n                            <Route path={'/pwdChg'} exact={true} component={PwdChg}/>\r\n                            <Route path={'/pwdInitChg'} exact={true} component={PwdInit}/>\r\n                            <Route path={'/m/:id'} component={MoblieInit}/>\r\n\r\n\r\n\r\n                            <Route component={NotFound} />\r\n                        </Switch>\r\n                    )\r\n                } */}\r\n\t\t\t\r\n                    { token ? ( <AppMain/>)  :\r\n                        (\r\n                            <Switch>\r\n                                <Route path={'/'} exact={true} component={Login}/>\r\n                                <Route path={'/base'} exact={true} component={AppMain}/>\r\n                            </Switch>\r\n                        )\r\n                    }\r\n\t\t\t\t\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'containers/App.js';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route } from 'react-router-dom';\r\n\r\nconst history = createBrowserHistory();\r\n\r\n//ReactDOM.render( <App />,  document.getElementById('root'));\r\nReactDOM.render( <Router history={history}>  <Route path='/'  component= {App} /> </Router>, document.getElementById('root'));","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\nrequire('babel-polyfill');\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\r\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\r\n// We don't polyfill it in the browser--this is user's responsibility.\r\nif (process.env.NODE_ENV === 'test') {\r\n  require('raf').polyfill(global);\r\n}\r\n"],"sourceRoot":""}